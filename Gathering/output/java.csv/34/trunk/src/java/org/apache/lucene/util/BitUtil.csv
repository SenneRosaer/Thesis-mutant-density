Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
BitUtil.pop_intersect( long A [ ] , long B [ ] , int wordOffset , int numWords );5;120;93
BitUtil.nextHighestPowerOfTwo( long v );1;14;11
BitUtil.ntz( long val );8;27;21
BitUtil.isPowerOfTwo( int v );1;3;3
BitUtil.pop_andnot( long A [ ] , long B [ ] , int wordOffset , int numWords );5;120;93
BitUtil.pop( long x );1;17;9
BitUtil.ntz3( long x );6;21;10
BitUtil.pop_xor( long A [ ] , long B [ ] , int wordOffset , int numWords );5;120;93
BitUtil.ntz2( long x );4;13;8
BitUtil.ntz( int val );4;12;9
BitUtil.pop_union( long A [ ] , long B [ ] , int wordOffset , int numWords );5;120;93
BitUtil.nextHighestPowerOfTwo( int v );1;12;10
BitUtil.pop_array( long A [ ] , int wordOffset , int numWords );5;94;93
BitUtil.isPowerOfTwo( long v );1;3;3