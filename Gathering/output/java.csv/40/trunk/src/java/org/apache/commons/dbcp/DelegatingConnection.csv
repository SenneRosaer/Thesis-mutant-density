Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
DelegatingConnection.getMetaData( );2;0;1
DelegatingConnection.prepareStatement( String sql , String columnNames [ ] );2;0;11
DelegatingConnection.setDelegate( Connection c );1;0;3
DelegatingConnection.prepareCall( String sql , int resultSetType , int resultSetConcurrency );2;0;11
DelegatingConnection.DelegatingConnection( Connection c , AbandonedConfig config );1;0;4
DelegatingConnection.DelegatingConnection( Connection c );1;0;4
DelegatingConnection.toString( );6;3;30
DelegatingConnection.setSavepoint( String name );2;0;1
DelegatingConnection.commit( );2;0;1
DelegatingConnection.handleException( SQLException e );1;0;3
DelegatingConnection.setTypeMap( Map map );2;0;1
DelegatingConnection.setHoldability( int holdability );2;0;1
DelegatingConnection.equals( Object obj );5;3;19
DelegatingConnection.prepareStatement( String sql , int columnIndexes [ ] );2;0;11
DelegatingConnection.prepareStatement( String sql , int resultSetType , int resultSetConcurrency );2;0;12
DelegatingConnection.getCatalog( );2;0;1
DelegatingConnection.passivate( );4;3;20
DelegatingConnection.nativeSQL( String sql );2;0;1
DelegatingConnection.createStatement( int resultSetType , int resultSetConcurrency );2;0;11
DelegatingConnection.setReadOnly( boolean readOnly );2;0;1
DelegatingConnection.innermostDelegateEquals( Connection c );2;2;8
DelegatingConnection.checkOpen( );4;1;16
DelegatingConnection.prepareStatement( String sql );2;0;11
DelegatingConnection.prepareStatement( String sql , int autoGeneratedKeys );2;0;11
DelegatingConnection.clearWarnings( );2;0;1
DelegatingConnection.setTransactionIsolation( int level );2;0;1
DelegatingConnection.activate( );2;0;7
DelegatingConnection.getHoldability( );2;0;1
DelegatingConnection.createStatement( );2;0;10
DelegatingConnection.close( );1;0;7
DelegatingConnection.getAutoCommit( );2;0;2
DelegatingConnection.rollback( java . sql . Savepoint savepoint );2;0;1
DelegatingConnection.setAutoCommit( boolean autoCommit );2;0;1
DelegatingConnection.getWarnings( );2;0;1
DelegatingConnection.getTransactionIsolation( );2;1;1
DelegatingConnection.prepareCall( String sql );2;0;10
DelegatingConnection.getInnermostDelegate( );4;3;10
DelegatingConnection.createStatement( int resultSetType , int resultSetConcurrency , int resultSetHoldability );2;0;11
DelegatingConnection.isReadOnly( );2;0;1
DelegatingConnection.hashCode( );2;1;7
DelegatingConnection.rollback( );2;0;1
DelegatingConnection.prepareCall( String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability );2;0;11
DelegatingConnection.prepareStatement( String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability );2;0;11
DelegatingConnection.setSavepoint( );2;0;1
DelegatingConnection.isClosed( );2;1;3
DelegatingConnection.getTypeMap( );2;0;1
DelegatingConnection.getDelegate( );1;0;3
DelegatingConnection.setCatalog( String catalog );2;0;1
DelegatingConnection.releaseSavepoint( java . sql . Savepoint savepoint );2;0;1