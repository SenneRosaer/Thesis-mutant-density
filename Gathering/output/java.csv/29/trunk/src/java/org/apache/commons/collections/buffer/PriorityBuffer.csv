Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
PriorityBuffer.PriorityBuffer( boolean ascendingOrder , Comparator comparator );1;0;3
PriorityBuffer.PriorityBuffer( Comparator comparator );1;0;3
PriorityBuffer.percolateUpMaxHeap( final Object element );1;1;4
PriorityBuffer.hasNext( );1;1;3
PriorityBuffer.get( );2;0;7
PriorityBuffer.grow( );1;1;5
PriorityBuffer.isAtCapacity( );1;2;3
PriorityBuffer.PriorityBuffer( boolean ascendingOrder );1;0;3
PriorityBuffer.toString( );3;4;12
PriorityBuffer.PriorityBuffer( int capacity , boolean ascendingOrder , Comparator comparator );2;2;9
PriorityBuffer.PriorityBuffer( );1;0;3
PriorityBuffer.percolateUpMaxHeap( final int index );3;5;10
PriorityBuffer.size( );1;0;3
PriorityBuffer.add( Object element );3;0;11
PriorityBuffer.percolateUpMinHeap( final int index );3;5;10
PriorityBuffer.PriorityBuffer( int capacity );1;0;3
PriorityBuffer.isAscendingOrder( );1;0;3
PriorityBuffer.iterator( );11;1;47
PriorityBuffer.percolateUpMinHeap( final Object element );1;1;4
PriorityBuffer.percolateDownMaxHeap( final int index );5;9;16
PriorityBuffer.remove( );3;19;13
PriorityBuffer.clear( );1;0;4
PriorityBuffer.PriorityBuffer( int capacity , Comparator comparator );1;0;3
PriorityBuffer.PriorityBuffer( int capacity , boolean ascendingOrder );1;0;3
PriorityBuffer.next( );2;2;8
PriorityBuffer.comparator( );1;0;3
PriorityBuffer.compare( Object a , Object b );2;1;7
PriorityBuffer.percolateDownMinHeap( final int index );5;9;16