Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
Entry.purge( Reference ref );8;9;13
ReferenceMap.purge( );2;1;7
EntryIterator.nextNull( );2;3;3
ReferenceMap.size( );1;0;4
***not in a method***;0;1;0
WeakRef.hashCode( );1;0;3
ReferenceMap.writeObject( ObjectOutputStream out );2;0;10
Entry.setValue( Object object );2;1;6
EntryIterator.nextEntry( );3;2;11
SoftRef.hashCode( );1;0;3
EntryIterator.checkMod( );2;1;5
ReferenceMap.values( );3;1;25
ReferenceMap.toArray( );1;0;3
ReferenceMap.readObject( ObjectInputStream inp );2;2;12
ReferenceMap.put( Object key , Object value );7;9;23
ReferenceMap.ReferenceMap( int keyType , int valueType , int capacity , float loadFactor , boolean purgeValues );1;0;4
ReferenceMap.ReferenceMap( int keyType , int valueType );1;0;3
ReferenceMap.indexFor( int hash );1;14;9
ReferenceMap.contains( Object o );4;4;7
Entry.Entry( Object key , int hash , Object value , Entry next );1;0;6
ReferenceMap.containsKey( Object key );2;2;6
ReferenceMap.ReferenceMap( int keyType , int valueType , int capacity , float loadFactor );5;7;18
ReferenceMap.ReferenceMap( );1;0;3
ReferenceMap.entrySet( );7;1;44
ReferenceMap.remove( Object key );6;7;20
Entry.getKey( );2;1;3
ReferenceMap.resize( );3;5;16
EntryIterator.remove( );2;1;9
ReferenceMap.getEntry( Object key );5;4;11
EntryIterator.EntryIterator( );2;1;4
ReferenceMap.isEmpty( );1;1;4
Entry.toString( );1;1;3
EntryIterator.next( );1;0;3
KeyIterator.next( );1;0;3
ReferenceMap.purge( Reference ref );4;3;16
Entry.hashCode( );2;2;4
ReferenceMap.iterator( );1;0;3
ReferenceMap.toArray( Object [ ] array );2;0;7
Entry.getValue( );2;1;3
ReferenceMap.remove( Object o );2;1;8
ReferenceMap.toArray( Object [ ] arr );2;0;9
ReferenceMap.verify( String name , int type );3;3;6
ValueIterator.next( );1;0;3
ReferenceMap.clear( );2;1;5
ReferenceMap.keySet( );3;1;32
ReferenceMap.get( Object key );2;1;6
ReferenceMap.toReference( int type , Object referent , int hash );4;0;8
SoftRef.SoftRef( int hash , Object r , ReferenceQueue q );1;0;4
WeakRef.WeakRef( int hash , Object r , ReferenceQueue q );1;0;4
EntryIterator.hasNext( );6;5;22
Entry.equals( Object o );7;7;10
ReferenceMap.ReferenceMap( int keyType , int valueType , boolean purgeValues );1;0;4