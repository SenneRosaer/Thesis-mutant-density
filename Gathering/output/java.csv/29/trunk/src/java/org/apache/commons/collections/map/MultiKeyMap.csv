Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
MultiKeyMap.isEqualKey( AbstractHashedMap . HashEntry entry , Object key1 , Object key2 , Object key3 );7;10;8
MultiKeyMap.decorate( AbstractHashedMap map );3;2;9
MultiKeyMap.equals( Object obj );2;1;6
MultiKeyMap.isEqualKey( AbstractHashedMap . HashEntry entry , Object key1 , Object key2 , Object key3 , Object key4 );9;13;9
***not in a method***;0;1;0
MultiKeyMap.get( Object key1 , Object key2 , Object key3 );4;3;11
MultiKeyMap.remove( Object key1 , Object key2 );4;3;16
MultiKeyMap.containsValue( Object value );1;0;3
MultiKeyMap.put( Object key1 , Object key2 , Object key3 , Object key4 , Object key5 , Object value );4;3;15
MultiKeyMap.removeAll( Object key1 , Object key2 , Object key3 );9;10;15
MultiKeyMap.containsKey( Object key );1;0;3
MultiKeyMap.keySet( );1;0;3
MultiKeyMap.MultiKeyMap( AbstractHashedMap map );1;0;4
MultiKeyMap.values( );1;0;3
MultiKeyMap.putAll( Map mapToCopy );2;0;7
MultiKeyMap.get( Object key1 , Object key2 , Object key3 , Object key4 , Object key5 );4;3;11
MultiKeyMap.containsKey( Object key1 , Object key2 , Object key3 , Object key4 );4;3;11
MultiKeyMap.isEmpty( );1;0;3
MultiKeyMap.get( Object key1 , Object key2 );4;3;11
MultiKeyMap.hash( Object key1 , Object key2 );3;12;14
MultiKeyMap.hash( Object key1 , Object key2 , Object key3 , Object key4 );5;16;20
MultiKeyMap.checkKey( Object key );3;2;8
MultiKeyMap.remove( Object key1 , Object key2 , Object key3 );4;3;16
MultiKeyMap.get( Object key1 , Object key2 , Object key3 , Object key4 );4;3;11
MultiKeyMap.toString( );1;0;3
MultiKeyMap.removeAll( Object key1 , Object key2 );7;7;14
MultiKeyMap.hash( Object key1 , Object key2 , Object key3 );4;14;17
MultiKeyMap.containsKey( Object key1 , Object key2 );4;3;11
MultiKeyMap.containsKey( Object key1 , Object key2 , Object key3 );4;3;11
MultiKeyMap.MultiKeyMap( );1;0;4
MultiKeyMap.remove( Object key );1;0;3
MultiKeyMap.mapIterator( );1;0;3
MultiKeyMap.hash( Object key1 , Object key2 , Object key3 , Object key4 , Object key5 );6;18;23
MultiKeyMap.entrySet( );1;0;3
MultiKeyMap.removeAll( Object key1 );5;4;13
MultiKeyMap.remove( Object key1 , Object key2 , Object key3 , Object key4 , Object key5 );4;3;16
MultiKeyMap.hashCode( );1;0;3
MultiKeyMap.put( Object key1 , Object key2 , Object value );4;3;15
MultiKeyMap.get( Object key );1;0;3
MultiKeyMap.containsKey( Object key1 , Object key2 , Object key3 , Object key4 , Object key5 );4;3;11
MultiKeyMap.clear( );1;0;3
MultiKeyMap.isEqualKey( AbstractHashedMap . HashEntry entry , Object key1 , Object key2 , Object key3 , Object key4 , Object key5 );11;16;10
MultiKeyMap.size( );1;0;3
MultiKeyMap.put( Object key , Object value );1;0;4
MultiKeyMap.remove( Object key1 , Object key2 , Object key3 , Object key4 );4;3;16
MultiKeyMap.isEqualKey( AbstractHashedMap . HashEntry entry , Object key1 , Object key2 );5;7;7
MultiKeyMap.clone( );1;0;3
MultiKeyMap.put( Object key1 , Object key2 , Object key3 , Object value );4;3;15
MultiKeyMap.put( Object key1 , Object key2 , Object key3 , Object key4 , Object value );4;3;15
MultiKeyMap.removeAll( Object key1 , Object key2 , Object key3 , Object key4 );11;13;16