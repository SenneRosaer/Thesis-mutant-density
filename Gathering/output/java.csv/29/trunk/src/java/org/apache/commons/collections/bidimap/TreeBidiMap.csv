Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
TreeBidiMap.remove( final Object key );1;0;3
Inverse.firstKey( );2;1;6
TreeBidiMap.doRedBlackDeleteFixup( final Node replacementNode , final int index );12;4;57
Inverse.size( );1;0;3
ViewMapIterator.setValue( final Object obj );1;0;3
TreeBidiMap.mapIterator( );2;0;6
ViewIterator.previous( );4;3;15
Inverse.inverseBidiMap( );1;0;3
View.clear( );1;0;3
TreeBidiMap.doRemove( final Comparable o , final int index );2;1;9
Node.setBlack( final int index );1;0;3
Inverse.clear( );1;0;3
TreeBidiMap.doHashCode( final int type );3;3;11
TreeBidiMap.firstKey( );2;1;6
TreeBidiMap.doToString( final int type );6;4;22
TreeBidiMap.checkValue( final Object value );1;0;3
Inverse.lastKey( );2;1;6
View.iterator( );1;0;3
Node.getLeft( final int index );1;0;3
TreeBidiMap.nextKey( Object key );2;1;5
TreeBidiMap.doRedBlackDelete( final Node deletedNode );13;12;42
TreeBidiMap.containsKey( final Object key );1;1;4
Inverse.equals( Object obj );1;0;3
TreeBidiMap.lookup( final Comparable data , final int index );4;3;14
TreeBidiMap.isLeftChild( final Node node , final int index );3;3;6
TreeBidiMap.doGet( final Comparable obj , final int index );2;1;5
TreeBidiMap.makeBlack( final Node node , final int index );2;1;5
TreeBidiMap.hashCode( );1;0;3
ViewMapIterator.ViewMapIterator( final TreeBidiMap main , final int orderType );1;0;4
TreeBidiMap.entrySet( );2;1;6
ViewIterator.hasPrevious( );1;1;3
Inverse.nextKey( Object key );2;1;5
Inverse.Inverse( final TreeBidiMap main );1;0;4
Node.getData( final int index );1;0;3
TreeBidiMap.isRightChild( final Node node , final int index );3;3;6
TreeBidiMap.nextSmaller( final Node node , final int index );5;5;17
TreeBidiMap.removeValue( final Object value );1;0;3
TreeBidiMap.greatestNode( final Node node , final int index );3;2;9
TreeBidiMap.isBlack( final Node node , final int index );2;1;3
ViewIterator.next( );3;2;12
Node.isRed( final int index );1;1;3
Node.setParent( final Node node , final int index );1;0;3
Inverse.putAll( Map map );2;0;7
TreeBidiMap.rotateLeft( final Node node , final int index );4;3;17
TreeBidiMap.getLeftChild( final Node node , final int index );2;1;3
TreeBidiMap.getKey( final Object value );1;0;3
Node.getRight( final int index );1;0;3
TreeBidiMap.lastKey( );2;1;6
Inverse.mapIterator( );2;0;6
Inverse.isEmpty( );1;0;3
Node.swapColors( final Node node , final int index );1;3;5
ViewIterator.hasNext( );1;1;3
TreeBidiMap.nextGreater( final Node node , final int index );5;5;17
TreeBidiMap.compare( final Comparable o1 , final Comparable o2 );1;0;3
TreeBidiMap.getGrandParent( final Node node , final int index );1;0;3
Inverse.keySet( );2;1;6
EntryView.remove( Object obj );4;3;13
TreeBidiMap.isRed( final Node node , final int index );2;1;3
View.remove( final Object obj );1;1;3
TreeBidiMap.checkKey( final Object key );1;0;3
TreeBidiMap.insertValue( final Node newNode );6;4;28
Inverse.put( final Object key , final Object value );1;0;3
TreeBidiMap.clear( );1;0;6
TreeBidiMap.grow( );1;1;4
EntryView.EntryView( final TreeBidiMap main , final int orderType , final int dataType );1;0;4
***not in a method***;0;1;0
Inverse.containsKey( final Object key );1;0;3
TreeBidiMap.swapPosition( final Node x , final Node y , final int index );17;16;70
TreeBidiMap.toString( );1;0;3
View.View( final TreeBidiMap main , final int orderType , final int dataType );1;0;6
ViewIterator.doGetData( );5;0;13
View.size( );1;0;3
Inverse.previousKey( Object key );2;1;5
Inverse.get( final Object key );1;0;3
TreeBidiMap.checkNonNullComparable( final Object o , final int index );3;2;8
View.contains( final Object obj );1;1;4
Inverse.removeValue( final Object value );1;0;3
Node.setLeft( final Node node , final int index );1;0;3
Node.setRed( final int index );1;0;3
Node.Node( final Comparable key , final Comparable value );1;0;9
Node.hashCode( );2;2;7
Inverse.toString( );1;0;3
TreeBidiMap.inverseOrderedBidiMap( );2;1;6
TreeBidiMap.copyColor( final Node from , final Node to , final int index );3;2;9
TreeBidiMap.oppositeIndex( final int index );1;1;3
TreeBidiMap.shrink( );1;1;4
Node.setRight( final Node node , final int index );1;0;3
ViewMapIterator.getKey( );2;1;6
Node.getValue( );1;0;3
TreeBidiMap.containsValue( final Object value );1;1;4
Inverse.hashCode( );1;0;3
EntryView.contains( Object obj );3;3;9
TreeBidiMap.equals( Object obj );1;0;3
TreeBidiMap.doPut( final Comparable key , final Comparable value , final int index );8;6;45
Node.equals( final Object obj );4;3;10
TreeBidiMap.orderedMapIterator( );2;0;6
TreeBidiMap.put( final Object key , final Object value );1;0;3
TreeBidiMap.modify( );1;1;3
ViewMapIterator.getValue( );2;1;6
Inverse.orderedMapIterator( );2;0;6
Inverse.getKey( final Object value );1;0;3
ViewIterator.ViewIterator( final TreeBidiMap main , final int orderType , final int dataType );1;0;10
TreeBidiMap.putAll( Map map );2;0;7
Inverse.inverseOrderedBidiMap( );1;0;3
Node.setValue( final Object ignored );1;0;4
Node.getKey( );1;0;3
TreeBidiMap.inverseBidiMap( );1;0;3
Node.copyColor( final Node node , final int index );1;0;3
Node.getParent( final int index );1;0;3
Inverse.remove( final Object key );1;0;3
TreeBidiMap.TreeBidiMap( );1;0;3
TreeBidiMap.TreeBidiMap( final Map map );1;0;4
TreeBidiMap.doEquals( Object obj , final int type );9;5;28
Inverse.entrySet( );2;1;6
TreeBidiMap.values( );2;1;6
TreeBidiMap.getParent( final Node node , final int index );2;1;3
Inverse.containsValue( final Object value );1;0;3
ViewIterator.remove( );4;4;16
TreeBidiMap.getRightChild( final Node node , final int index );2;1;3
TreeBidiMap.keySet( );2;1;6
TreeBidiMap.isEmpty( );1;1;3
Inverse.values( );2;1;6
TreeBidiMap.makeRed( final Node node , final int index );2;1;5
TreeBidiMap.previousKey( Object key );2;1;5
TreeBidiMap.leastNode( final Node node , final int index );3;2;9
TreeBidiMap.checkKeyAndValue( final Object key , final Object value );1;0;4
TreeBidiMap.get( final Object key );1;0;3
Node.isBlack( final int index );1;0;3
TreeBidiMap.doRedBlackInsert( final Node insertedNode , final int index );11;6;46
TreeBidiMap.size( );1;0;3
TreeBidiMap.rotateRight( final Node node , final int index );4;3;17