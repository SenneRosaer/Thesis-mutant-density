Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
ControlBean.getInvokeListeners( );2;1;5
ControlBean.getLocalID( );1;0;3
ControlBean.getControlInterface( );1;0;3
ControlBean.getControlService( Class serviceClass , Object selector );3;3;7
ControlBean.getAnnotationMap( AnnotatedElement annotElem );2;0;8
NullInterceptor.postEvent( org . apache . beehive . controls . api . bean . ControlBean cb , Class eventSet , Method m , Object [ ] args , Object retval , Throwable t );1;0;1
ControlBean.fireVetoableChange( PropertyKey propertyKey , Object oldValue , Object newValue );2;1;5
ControlBean.getPropertyMap( );1;0;3
ControlBean.firePropertyChange( PropertyKey propertyKey , Object oldValue , Object newValue );2;1;5
ControlBean.removeInvokeListener( InvokeListener invokeListener );1;0;3
ControlBean.setBeanContext( BeanContext bc );1;0;3
ControlBean.writeObject( ObjectOutputStream oos );3;2;17
ControlBean.getPropertyChangeSupport( );2;1;5
ControlBean.getRawControlProperty( PropertyKey key );1;0;3
ControlBean.dispatchEvent( EventRef event , Object [ ] args );3;1;17
ControlBean.getSuperEventSets( Class eventSet , List < Class > superEventSets );4;3;15
ControlBean.getImplInitializer( );3;1;16
ControlBean.getControlProperty( PropertyKey key );2;0;9
ControlBean.lookupControlBeanContextFactory( org . apache . beehive . controls . api . context . ControlBeanContext context );4;2;18
ControlBean.setControlProperty( PropertyKey key , Object o );1;0;4
NullInterceptor.preEvent( org . apache . beehive . controls . api . bean . ControlBean cb , Class eventSet , Method m , Object [ ] args );1;0;1
ControlBean.getParameterNames( Method m );1;0;3
ControlBean.getBeanContextProxy( );1;0;3
ControlBean.getEventNotifier( Class < T > eventSet );1;0;3
ControlBean.getVetoableChangeSupport( );2;1;5
ControlBean.ControlBean( org . apache . beehive . controls . api . context . ControlBeanContext context , String id , PropertyMap initProperties , Class controlIntf );6;4;30
ControlBean.addInvokeListener( InvokeListener invokeListener );1;0;3
ControlBean.setEventNotifier( Class < T > eventSet , T notifier );2;0;11
ControlBean.ensureThreadingBehaviour( );3;2;6
ControlBean.enforceVersionRequired( String intfName , Version version , VersionRequired versionRequired );7;10;24
ControlBean.preInvoke( Method m , Object [ ] args , String [ ] interceptorNames );8;3;28
ControlBean.getControlID( );1;0;3
ControlBean.ensureInterceptor( String n );5;3;28
ControlBean.setLocalID( String localID );1;1;4
ControlBean.postInvoke( Method m , Object [ ] args , Object retval , Throwable t , String [ ] interceptorNames , String pivotedInterceptor );8;8;29
ControlBean.getMostDerivedInterface( Class controlIntf );1;0;3
ControlBean.getImplementation( );1;0;3
ControlBean.hasSingleThreadedImpl( );1;1;3
NullInterceptor.postInvoke( org . apache . beehive . controls . api . bean . ControlBean cb , Method m , Object [ ] args , Object retval , Throwable t );1;0;1
NullInterceptor.preInvoke( org . apache . beehive . controls . api . bean . ControlBean cb , Method m , Object [ ] args );1;0;1
ControlBean.getBeanContext( );1;0;3
ControlBean.getControlBeanContext( );1;0;3
ControlBean.preInvoke( Method m , Object [ ] args );2;0;9
ControlBean.decodeImpl( Object impl );2;1;4
ControlBean.ensureControl( );10;5;57
ControlBean.postInvoke( Method m , Object [ ] args , Object retval , Throwable t );1;0;3