Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
PushedPageFlow.getInterceptedForward( );1;0;3
PushedPageFlow.getPageFlow( );1;0;3
PageFlowStack.destroy( HttpServletRequest request );1;0;7
PageFlowStack.get( HttpServletRequest request , boolean createIfNotExist );1;0;3
PageFlowStack.isEmpty( );1;0;3
PageFlowStack.getServletContext( );1;0;3
PageFlowStack.pop( HttpServletRequest request );2;1;12
PageFlowStack.toString( );3;2;10
PushedPageFlow.PushedPageFlow( PageFlowController pageFlow , ActionInterceptor interceptor , InterceptorForward interceptedFwd , String interceptedActionName );1;0;6
PushedPageFlow.toString( );1;0;3
PushedPageFlow.getInterceptedActionName( );1;0;3
PageFlowStack.save( HttpServletRequest request );1;0;7
PageFlowStack.valueUnbound( HttpSessionBindingEvent event );6;3;19
PageFlowStack.valueBound( HttpSessionBindingEvent event );1;0;2
PageFlowStack.get( HttpServletRequest request , ServletContext servletContext );1;0;3
PageFlowStack.popUntil( HttpServletRequest request , HttpServletResponse response , Class stopAt , boolean onlyIfPresent );7;5;22
PageFlowStack.get( HttpServletRequest request , ServletContext servletContext , boolean createIfNotExist );4;3;17
PageFlowStack.get( HttpServletRequest request );1;0;3
PushedPageFlow.getInterceptor( );1;0;3
PageFlowStack.push( PageFlowController pageFlow , HttpServletRequest request );2;1;16
PushedPageFlow.PushedPageFlow( PageFlowController pageFlow );1;0;3
PageFlowStack.lastIndexOf( Class target );3;4;10
PageFlowStack.setServletContext( ServletContext servletContext );1;0;3
PageFlowStack.getLegacyStack( );2;2;8
PageFlowStack.peek( );1;0;3
PageFlowStack.findActionInStack( String actionPath );3;4;10
PageFlowStack.size( );1;0;3
PageFlowStack.ensureFailover( HttpServletRequest request , ServletContext servletContext );1;0;7
PageFlowStack.PageFlowStack( ServletContext servletContext );1;0;3