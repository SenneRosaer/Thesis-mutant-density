Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
PageFlowRequestProcessor.handleException( Throwable th , FlowController fc , HttpServletRequest request , HttpServletResponse response );5;1;28
PageFlowRequestProcessor.processValidate( HttpServletRequest request , HttpServletResponse response , ActionForm form , ActionMapping mapping );3;3;9
PageFlowRequestProcessor.shouldDoSecureForwards( );1;0;3
PageFlowRequestProcessor.processRoles( HttpServletRequest request , HttpServletResponse response , ActionMapping mapping );9;7;46
PageFlowRequestProcessor.processActionForm( HttpServletRequest request , HttpServletResponse response , ActionMapping mapping );9;7;57
PageFlowRequestProcessor.cacheOverloadedActionMappings( );5;4;22
PageFlowRequestProcessor.checkTransaction( HttpServletRequest request , HttpServletResponse response , ActionMapping mapping , String actionPath );6;3;26
PageServletFilter.PageServletFilter( );1;0;3
PageFlowRequestProcessor.processSharedFlowMapping( HttpServletRequest request , HttpServletResponse response , String actionPath , FlowController currentFlowController );9;12;40
PageFlowRequestProcessor.doActionForward( HttpServletRequest request , HttpServletResponse response , ActionForward forward );1;0;4
PageFlowRequestProcessor.processPageFlowRequest( HttpServletRequest request , HttpServletResponse response , String uri );10;7;54
PageFlowRequestProcessor.processInternal( HttpServletRequest request , HttpServletResponse response );29;13;118
PageServletFilterChain.PageServletFilterChain( Servlet pageServlet );1;0;3
PageServletConfig.getServletName( );1;0;3
PageFlowRequestProcessor.rethrowUnhandledException( UnhandledException ex );3;0;12
ActionFormValidationWrapper.ActionFormValidationWrapper( ActionForm actionForm );1;0;3
PageServletConfig.getInitParameter( String s );1;0;3
PageFlowRequestProcessor.init( ActionServlet actionServlet , ModuleConfig mc );1;1;15
PageFlowRequestProcessor.processMultipart( HttpServletRequest request );7;6;26
PageFlowRequestProcessor.changeScheme( String webappRelativeURI , String scheme , int port , FlowControllerHandlerContext context );6;7;38
PageFlowRequestProcessor.cacheFormClasses( );3;2;19
PageFlowRequestProcessor.ensurePageServletFilter( );2;1;5
PageServletFilter.getValidFileExtensions( );1;0;3
PageFlowRequestProcessor.processPageForward( String pagePath , HttpServletRequest request , HttpServletResponse response );12;4;67
ExceptionHandledActionMapping.getType( );1;0;3
PageFlowRequestProcessor.doForward( String uri , HttpServletRequest request , HttpServletResponse response );11;5;50
PageFlowRequestProcessor.getPageFlowScopedFormMember( ActionMapping mapping , HttpServletRequest request );7;4;26
PageServletFilterChain.doFilter( ServletRequest request , ServletResponse response );1;0;3
PageFlowRequestProcessor.makeRedirectedRequestAttrsKey( String webappRelativeURI , String hash );1;2;3
PageFlowRequestProcessor.processActionOverride( HttpServletRequest request , HttpServletResponse response );6;3;26
PageServletConfig.getInitParameterNames( );1;0;3
RehydratedMultipartRequestWrapper.RehydratedMultipartRequestWrapper( HttpServletRequest req );3;2;10
PageFlowRequestProcessor.isCorrectFormType( Class formBeanClass , Class actionMappingFormBeanClass , ActionMapping mapping );6;3;18
PageFlowRequestProcessor.processMapping( HttpServletRequest request , HttpServletResponse response , String path );27;33;99
ActionRunner.execute( );1;0;4
PageFlowRequestProcessor.process( HttpServletRequest request , HttpServletResponse response );11;8;73
PageFlowRequestProcessor.processActionPerform( HttpServletRequest request , HttpServletResponse response , Action action , ActionForm form , ActionMapping mapping );16;10;75
PageFlowRequestProcessor.isCorrectFormType( Class formBeanClass , ActionMapping mapping );1;1;5
ActionRunner.ActionRunner( RequestInterceptorContext context , Action action , ActionForm formBean , ActionMapping actionMapping );1;0;6
PageFlowRequestProcessor.getBeginMapping( );1;0;3
PageFlowRequestProcessor.processActionCreate( HttpServletRequest request , HttpServletResponse response , ActionMapping actionMapping );3;3;15
PageFlowRequestProcessor.processNoCache( HttpServletRequest request , HttpServletResponse response );7;4;28
ExceptionHandledActionMapping.ExceptionHandledActionMapping( String actionPath , ActionForward fwd );1;0;4
PageFlowRequestProcessor.processForwardConfig( HttpServletRequest request , HttpServletResponse response , ForwardConfig fwd );21;16;75
PageFlowRequestProcessor.processPopulate( HttpServletRequest request , HttpServletResponse response , ActionForm form , ActionMapping mapping );10;9;30
ExceptionHandledAction.execute( ActionMapping mapping , ActionForm form , HttpServletRequest request , HttpServletResponse response );1;0;4
ActionFormValidationWrapper.validate( ActionMapping mapping , HttpServletRequest request );1;0;3
PageFlowRequestProcessor.addScopeParams( String url , HttpServletRequest request );2;1;11
ExceptionHandledActionMapping.getValidate( );1;0;3
PageServletConfig.getServletContext( );1;0;3
PageFlowRequestProcessor.processUnresolvedAction( String actionPath , HttpServletRequest request , HttpServletResponse response , Object returningForm );6;1;30
ExceptionHandledActionMapping.getActionForward( );1;0;3
PageFlowRequestProcessor.processException( HttpServletRequest request , HttpServletResponse response , Exception ex , ActionForm form , ActionMapping mapping );2;0;12
PageFlowRequestProcessor.getUnknownActionFromConfig( ModuleConfig mc );3;2;11
PageFlowRequestProcessor.getFlowController( RequestContext requestContext , String fcClassName );6;3;30
ActionFormValidationWrapper.getAdditionalActionErrors( ActionMapping mapping , HttpServletRequest request );1;0;3
PageFlowRequestProcessor.initDefinitionsMapping( );4;2;14
PageServletConfig.PageServletConfig( String pagePath );1;0;3