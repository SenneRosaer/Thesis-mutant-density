Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
IteratorWrapper.equals( Object o );1;0;3
LRUMemoryCache.verifyCache( Serializable key );5;4;20
LRUMemoryCache.getStatistics( );1;0;29
LRUMemoryCache.dumpCacheEntries( );2;1;7
IteratorWrapper.hashCode( );1;0;3
LRUMemoryCache.dumpMap( );2;0;9
LRUMemoryCache.verifyCache( );14;8;80
LRUMemoryCache.removeAll( );1;0;4
IteratorWrapper.remove( );1;0;3
LRUMemoryCache.dumpCacheSize( );1;0;3
LRUMemoryCache.get( Serializable key );4;5;26
LRUMemoryCache.getIterator( );1;0;3
MapEntryWrapper.MapEntryWrapper( Map . Entry e );1;0;3
MapEntryWrapper.equals( Object o );1;0;3
MapEntryWrapper.hashCode( );1;0;3
MapEntryWrapper.getValue( );1;0;3
LRUMemoryCache.initialize( CompositeCache hub );1;0;5
MapEntryWrapper.getKey( );1;0;3
LRUMemoryCache.getKeyArray( );1;0;6
IteratorWrapper.hasNext( );1;0;3
LRUMemoryCache.remove( Serializable key );12;4;51
IteratorWrapper.next( );1;0;3
LRUMemoryCache.addLast( CacheElement ce );1;0;5
MapEntryWrapper.setValue( Object value );1;0;4
LRUMemoryCache.update( ICacheElement ce );13;11;75
IteratorWrapper.IteratorWrapper( Map m );1;0;3
LRUMemoryCache.getQuiet( Serializable key );4;3;17
LRUMemoryCache.addFirst( ICacheElement ce );1;0;5