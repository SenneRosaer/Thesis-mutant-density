Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
RemoteCacheServer.logICacheEvent( ICacheEvent cacheEvent );2;1;6
RemoteCacheServer.getFromCacheListeners( Serializable key , boolean fromCluster , CacheListeners cacheDesc , ICacheElement element );6;3;25
RemoteCacheServer.removeAll( String cacheName );1;0;3
RemoteCacheServer.processGet( String cacheName , Serializable key , long requesterId );4;3;25
RemoteCacheServer.getMultiple( String cacheName , Set keys , long requesterId );1;0;12
RemoteCacheServer.logApplicationEvent( String source , String eventName , String optionalDetails );2;1;6
RemoteCacheServer.update( ICacheElement item );1;0;3
RemoteCacheServer.unreferenced( );2;0;6
***not in a method***;0;1;0
RemoteCacheServer.getCacheListeners( String cacheName );3;2;16
RemoteCacheServer.removeCacheListener( String cacheName , ICacheListener listener );1;0;3
RemoteCacheServer.getMatchingFromCacheListeners( String pattern , boolean fromCluster , CacheListeners cacheDesc );6;3;26
RemoteCacheServer.dispose( String cacheName , long requesterId );4;3;28
RemoteCacheServer.nextListenerId( );2;2;19
RemoteCacheServer.isRequestFromCluster( long requesterId );3;3;9
RemoteCacheServer.RemoteCacheServer( IRemoteCacheServerAttributes rcsa , RMISocketFactory customRMISocketFactory );1;0;5
RemoteCacheServer.createICacheEvent( ICacheElement item , long requesterId , String eventName );2;1;9
RemoteCacheServer.getMultiple( String cacheName , Set keys );1;0;3
RemoteCacheServer.shutdown( String host , int port );2;0;8
RemoteCacheServer.dispose( String cacheName );1;0;3
RemoteCacheServer.createICacheEvent( String cacheName , Serializable key , long requesterId , String eventName );2;1;8
RemoteCacheServer.update( ICacheElement item , long requesterId );1;0;11
RemoteCacheServer.processGetMultiple( String cacheName , Set keys , long requesterId );3;0;20
RemoteCacheServer.removeAll( String cacheName , long requesterId );1;0;12
RemoteCacheServer.removeCacheListener( String cacheName , long listenerId );7;1;45
RemoteCacheServer.getGroupKeys( String cacheName , String group );3;1;17
RemoteCacheServer.removeCacheListener( ICacheListener listener );3;0;12
RemoteCacheServer.processRemove( String cacheName , Serializable key , long requesterId );11;6;45
RemoteCacheServer.put( ICacheElement item );1;0;3
RemoteCacheServer.createCacheManager( String prop );2;1;12
RemoteCacheServer.getStats( );1;0;3
RemoteCacheServer.processRemoveAll( String cacheName , long requesterId );9;6;35
RemoteCacheServer.getIPAddressForRequesterId( long requesterId );1;0;4
RemoteCacheServer.getPutCount( );1;0;3
RemoteCacheServer.init( String prop );2;2;9
RemoteCacheServer.cleanupEventQMap( Map eventQMap );3;1;15
RemoteCacheServer.get( String cacheName , Serializable key );1;0;3
RemoteCacheServer.getEventQList( CacheListeners cacheListeners , long requesterId );7;10;34
RemoteCacheServer.setCacheEventLogger( ICacheEventLogger cacheEventLogger );1;0;3
RemoteCacheServer.RemoteCacheServer( IRemoteCacheServerAttributes rcsa );1;0;5
RemoteCacheServer.getMatching( String cacheName , String pattern , long requesterId );4;3;32
RemoteCacheServer.get( String cacheName , Serializable key , long requesterId );1;0;13
RemoteCacheServer.logUpdateInfo( ICacheElement item );4;3;14
RemoteCacheServer.getClusterListeners( String cacheName );3;2;16
RemoteCacheServer.remove( String cacheName , Serializable key , long requesterId );1;0;12
RemoteCacheServer.getMultipleFromCacheListeners( Set keys , Map elements , boolean fromCluster , CacheListeners cacheDesc );6;3;25
RemoteCacheServer.shutdown( );1;0;3
RemoteCacheServer.release( );3;2;16
RemoteCacheServer.addCacheListener( String cacheName , ICacheListener listener );12;9;81
RemoteCacheServer.remove( String cacheName , Serializable key );1;0;3
RemoteCacheServer.addCacheListener( ICacheListener listener );3;0;11
RemoteCacheServer.processUpdate( ICacheElement item , long requesterId );19;10;90