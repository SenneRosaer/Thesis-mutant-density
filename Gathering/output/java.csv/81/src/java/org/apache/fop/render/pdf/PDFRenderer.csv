Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
PDFRenderer.setUserAgent( FOUserAgent agent );18;21;68
PDFRenderer.startPageSequence( PageSequence pageSequence );7;7;25
PDFRenderer.concatenateTransformationMatrix( AffineTransform at );2;1;6
PDFRenderer.renderInlineParent( InlineParent ip );16;20;52
PDFRenderer.fillRect( float x , float y , float width , float height );3;6;6
PDFRenderer.breakOutOfStateStack( );4;2;16
PDFRenderer.drawBorderLine( float x1 , float y1 , float x2 , float y2 , boolean horz , boolean startOrBefore , int style , Color col );25;137;168
PDFRenderer.booleanValueOf( Object obj );3;0;9
PDFRenderer.updateColor( Color col , boolean fill , StringBuffer pdf );4;1;14
PDFRenderer.updateLineWidth( float width );2;0;5
PDFRenderer.endTextObject( );2;0;5
PDFRenderer.getMimeType( );1;0;3
PDFRenderer.drawLine( float startx , float starty , float endx , float endy );1;2;4
PDFRenderer.putImage( String uri , Rectangle2D pos );1;0;3
PDFRenderer.comment( String text );2;0;5
PDFRenderer.closePath( );1;0;3
PDFRenderer.getTargetableID( Area area );5;6;10
PDFRenderer.setColor( Color col , boolean fill , StringBuffer pdf );2;1;8
PDFRenderer.setOutputProfileURI( String outputProfileURI );1;0;3
PDFRenderer.renderXMPMetadata( XMPMetadata metadata );1;0;11
PDFRenderer.getGraphics2DAdapter( );1;0;3
PDFRenderer.renderInlineArea( InlineArea inlineArea );1;0;4
PDFRenderer.clip( );1;0;4
PDFRenderer.addsRGBColorSpace( );6;6;16
PDFRenderer.saveInlinePosIfTargetable( InlineArea inlineArea );2;3;9
PDFRenderer.saveAbsolutePosition( String id , int relativeIPP , int relativeBPP );1;0;4
PDFRenderer.supportsOutOfOrder( );1;0;3
PDFRenderer.renderSpace( SpaceArea space );3;6;15
PDFRenderer.processOffDocumentItem( OffDocumentItem odi );5;0;12
PDFRenderer.restoreGraphicsState( boolean popState );2;0;7
PDFRenderer.startRenderer( OutputStream stream );6;4;32
PDFRenderer.moveTo( float x , float y );1;1;3
PDFRenderer.restoreStateStackAfterBreakOut( List breakOutList );2;0;12
PDFRenderer.addDefaultOutputProfile( );5;3;27
PDFRenderer.endVParea( );1;0;3
PDFRenderer.drawImage( String url , Rectangle2D pos , Map foreignAttributes );1;0;4
PDFRenderer.setEncryptionParams( PDFEncryptionParams encryptionParams );1;0;3
PDFRenderer.lineTo( float x , float y );1;1;3
PDFRenderer.finishIDGoTo( PDFGoTo gt , Point2D . Float position );1;0;5
PDFRenderer.renderBookmarkTree( BookmarkData bookmarks );2;2;6
PDFRenderer.format( float value );1;0;3
PDFRenderer.finishOpenGoTos( );3;3;13
PDFRenderer.saveAbsolutePosition( String id , String pdfPageRef , int relativeIPP , int relativeBPP , AffineTransform tf );2;3;9
PDFRenderer.renderPage( PageViewport page );4;6;34
PDFRenderer.renderBookmarkItem( BookmarkData bookmarkItem , PDFOutline parentBookmarkItem );6;7;22
PDFRenderer.restoreGraphicsState( );1;0;3
PDFRenderer.escapeText( String s , int [ ] letterAdjust , Font font , AbstractTextArea parentArea );1;0;3
PDFRenderer.setFilterMap( Map filterMap );1;0;3
PDFRenderer.startVParea( CTM ctm , Rectangle2D clippingRect );2;5;12
PDFRenderer.getPDFGoToForID( String targetID , String pvKey );4;4;16
PDFRenderer.beginTextObject( );2;1;5
PDFRenderer.preparePage( PageViewport page );2;1;7
PDFRenderer.renderWord( WordArea word );1;0;7
PDFRenderer.getTypeface( String fontName );2;0;7
PDFRenderer.setAMode( PDFAMode mode );1;0;3
PDFRenderer.addPDFXOutputIntent( );2;2;16
PDFRenderer.renderLeader( Leader area );8;44;59
PDFRenderer.renderText( TextArea text );1;7;16
PDFRenderer.finishIDGoTo( PDFGoTo gt , String pdfPageRef , Point2D . Float position );1;0;4
PDFRenderer.clipRect( float x , float y , float width , float height );1;3;5
PDFRenderer.renderImage( Image image , Rectangle2D pos );1;0;5
PDFRenderer.placeImage( float x , float y , float w , float h , PDFXObject xobj );1;10;9
PDFRenderer.updateColor( Color col , boolean fill );1;0;3
PDFRenderer.setXMode( PDFXMode mode );1;0;3
PDFRenderer.stopRenderer( );1;0;18
PDFRenderer.write( String code );1;0;3
PDFRenderer.addPDFA1OutputIntent( );1;0;10
PDFRenderer.saveBlockPosIfTargetable( Block block );5;9;16
PDFRenderer.renderDestination( DestinationData dd );4;4;14
PDFRenderer.PDFRenderer( );1;0;2
PDFRenderer.createRendererContext( int x , int y , int width , int height , Map foreignAttributes );2;1;16
PDFRenderer.putImage( String uri , Rectangle2D pos , Map foreignAttributes );12;11;66
PDFRenderer.saveGraphicsState( );1;0;5
PDFRenderer.setupPage( PageViewport page );2;3;21
PDFRenderer.renderLineArea( LineArea line );1;0;3
PDFRenderer.renderBlock( Block block );1;0;4
PDFRenderer.escapeText( String s , int start , int end , int [ ] letterAdjust , Font font , AbstractTextArea parentArea );12;21;45