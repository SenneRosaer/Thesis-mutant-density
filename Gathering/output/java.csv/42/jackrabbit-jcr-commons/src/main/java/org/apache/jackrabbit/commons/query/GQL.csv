Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
FilteredRowIterator.skip( long skipNum );3;3;5
GQL.addTypeConstraint( Expression expr );2;1;6
RowIterAdapter.RowIterAdapter( RangeIterator rangeIterator , long size );1;0;4
OrderByExpression.defaultOrderBy( StringBuffer buffer );1;0;3
FilteredRowIterator.fetchNext( );5;2;13
GQL.pushExpression( String property , String value , boolean optional );17;11;61
RowIterAdapter.nextRow( );2;1;9
ContainsExpression.ContainsExpression( String property , String value );1;0;4
GQL.resolveNodeTypeName( String ntName );7;7;35
GQL.execute( String statement , Session session , String commonPathPrefix );1;0;3
NAryExpression.getSize( );1;0;3
OptionalExpression.getOperation( );1;0;3
GQL.checkProhibited( String value );2;0;7
GQL.execute( String statement , Session session );1;0;3
FilteredRowIterator.getSize( );1;1;3
NAryExpression.toString( StringBuffer buffer );4;2;15
FilteredRowIterator.hasNext( );1;1;3
GQL.isPrefixed( String name );1;2;3
OrderByExpression.toString( StringBuffer buffer );7;3;31
NAryExpression.addOperand( Expression expr );1;0;3
RequiredExpression.getOperation( );1;0;3
GQL.resolveChildNodeName( String name );8;8;31
GQL.execute( String statement , Session session , String commonPathPrefix , Filter filter );1;0;4
PrimaryTypeComparision.PrimaryTypeComparision( String value );1;0;3
OrderByExpression.OrderByExpression( String value );1;0;3
GQL.GQL( String statement , Session session , String commonPathPrefix , Filter filter );1;0;6
ValueComparison.toString( StringBuffer buffer );1;0;5
FilteredRowIterator.next( );1;0;3
FilteredRowIterator.remove( );1;0;3
GQL.parse( );22;8;61
RowAdapter.getValues( );1;0;3
GQL.translateStatement( );5;3;22
RowAdapter.getValue( String propertyName );2;1;6
ContainsExpression.toString( StringBuffer buffer );9;9;42
GQL.resolvePropertyName( String name );8;8;31
FilteredRowIterator.getPosition( );1;0;3
GQL.collectNodeTypes( String ntName );7;2;28
MixinComparision.MixinComparision( String value );1;0;3
ValueComparison.ValueComparison( String property , String value );1;0;3
PropertyExpression.PropertyExpression( String property , String value );1;0;4
OrderByExpression.OrderByExpression( );1;0;3
GQL.execute( );8;6;27
RowIterAdapter.RowIterAdapter( Collection collection , long size );1;0;4
FilteredRowIterator.nextRow( );2;2;12
FilteredRowIterator.FilteredRowIterator( RowIterator rows );1;0;4
RowIterAdapter.getSize( );1;0;3
RowAdapter.RowAdapter( Row row , String excerptPath );1;0;4