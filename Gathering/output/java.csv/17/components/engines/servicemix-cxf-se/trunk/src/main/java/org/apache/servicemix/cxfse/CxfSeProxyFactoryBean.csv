Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
CxfSeProxyFactoryBean.getContext( );1;0;3
CxfSeProxyFactoryBean.setInterfaceName( QName interfaceName );1;0;3
CxfSeProxyFactoryBean.isUseJBIWrapper( );1;0;3
CxfSeProxyFactoryBean.setService( QName service );1;0;3
CxfSeProxyFactoryBean.createProxy( );7;6;36
CxfSeProxyFactoryBean.setUseJBIWrapper( boolean useJBIWrapper );1;0;3
CxfSeProxyFactoryBean.removeInterceptor( List < Interceptor > interceptors , String whichInterceptor );3;0;7
CxfSeProxyFactoryBean.setName( String name );1;0;3
CxfSeProxyFactoryBean.getInterfaceName( );1;0;3
CxfSeProxyFactoryBean.isUseSOAPEnvelope( );1;0;3
CxfSeProxyFactoryBean.setFactory( ClientFactory factory );1;0;3
CxfSeProxyFactoryBean.destroy( );2;1;6
CxfSeProxyFactoryBean.getService( );1;0;3
CxfSeProxyFactoryBean.setUseSOAPEnvelope( boolean useSOAPEnvelope );1;0;3
CxfSeProxyFactoryBean.afterPropertiesSet( );2;1;5
CxfSeProxyFactoryBean.setType( Class type );1;0;3
CxfSeProxyFactoryBean.setContainer( Container container );1;0;3
CxfSeProxyFactoryBean.setEndpoint( String endpointName );1;0;3
CxfSeProxyFactoryBean.getFactory( );1;0;3
CxfSeProxyFactoryBean.getType( );1;0;3
CxfSeProxyFactoryBean.isPropagateSecuritySubject( );1;0;3
CxfSeProxyFactoryBean.getInternalContext( );4;3;14
CxfSeProxyFactoryBean.getObject( );2;1;6
CxfSeProxyFactoryBean.setContext( ComponentContext context );1;0;3
CxfSeProxyFactoryBean.isSingleton( );1;0;3
CxfSeProxyFactoryBean.getObjectType( );1;0;3
CxfSeProxyFactoryBean.getName( );1;0;3
CxfSeProxyFactoryBean.getContainer( );1;0;3
CxfSeProxyFactoryBean.setPropagateSecuritySubject( boolean propagateSecuritySubject );1;0;3
CxfSeProxyFactoryBean.getEndpoint( );1;0;3