Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
BundleArchive.dispose( );2;2;10
BundleArchive.getActivator( IModule module );5;4;29
***not in a method***;0;5;0
BundleArchive.getLocation( );4;3;21
BundleArchive.getRevisionCount( );2;1;3
BundleArchive.setRefreshCount( long counter );4;3;26
BundleArchive.getId( );5;3;27
BundleArchive.getCurrentLocation( );5;3;25
BundleArchive.setActivator( Object obj );5;4;27
BundleArchive.setStartLevel( int level );4;3;25
BundleArchive.undoRevise( );4;8;25
BundleArchive.setLastModified( long lastModified );4;3;25
BundleArchive.getRevisionLocation( int revision );3;4;17
BundleArchive.setRevisionLocation( String location , int revision );3;4;18
BundleArchive.BundleArchive( Logger logger , File archiveRootDir , long id , String location , InputStream is );2;1;13
BundleArchive.BundleArchive( );1;0;2
BundleArchive.getPersistentState( );7;4;38
BundleArchive.getRevision( int i );3;3;7
BundleArchive.setCurrentLocation( String location );3;2;17
BundleArchive.getStartLevel( );5;5;26
BundleArchive.getLastModified( );5;4;25
BundleArchive.purge( );4;14;26
BundleArchive.createRevisionFromLocation( String location , InputStream is );10;8;53
BundleArchive.setPersistentState( int state );6;3;37
BundleArchive.BundleArchive( Logger logger , File archiveRootDir );4;7;20
BundleArchive.revise( String location , InputStream is );5;5;23
BundleArchive.getDataFile( String fileName );6;6;15
BundleArchive.getRefreshCount( );5;4;26
BundleArchive.initialize( );5;3;33