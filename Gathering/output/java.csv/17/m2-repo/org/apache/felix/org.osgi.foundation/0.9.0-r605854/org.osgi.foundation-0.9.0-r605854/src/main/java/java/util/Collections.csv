Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
Collections.unmodifiableSet( java . util . Set var0 );1;0;1
Collections.binarySearch( java . util . List var0 , java . lang . Object var1 );1;0;1
Collections.copy( java . util . List var0 , java . util . List var1 );1;0;1
Collections.shuffle( java . util . List var0 , java . util . Random var1 );1;0;1
Collections.binarySearch( java . util . List var0 , java . lang . Object var1 , java . util . Comparator var2 );1;0;1
Collections.sort( java . util . List var0 );1;0;1
Collections.unmodifiableSortedSet( java . util . SortedSet var0 );1;0;1
Collections.reverseOrder( );1;0;1
Collections.synchronizedSortedMap( java . util . SortedMap var0 );1;0;1
Collections.shuffle( java . util . List var0 );1;0;1
Collections.singleton( java . lang . Object var0 );1;0;1
Collections.reverse( java . util . List var0 );1;0;1
Collections.min( java . util . Collection var0 );1;0;1
Collections.fill( java . util . List var0 , java . lang . Object var1 );1;0;1
Collections.max( java . util . Collection var0 );1;0;1
Collections.min( java . util . Collection var0 , java . util . Comparator var1 );1;0;1
Collections.singletonMap( java . lang . Object var0 , java . lang . Object var1 );1;0;1
Collections.enumeration( java . util . Collection var0 );1;0;1
Collections.synchronizedList( java . util . List var0 );1;0;1
Collections.unmodifiableList( java . util . List var0 );1;0;1
Collections.unmodifiableCollection( java . util . Collection var0 );1;0;1
Collections.max( java . util . Collection var0 , java . util . Comparator var1 );1;0;1
Collections.synchronizedCollection( java . util . Collection var0 );1;0;1
Collections.Collections( );1;0;1
Collections.synchronizedSortedSet( java . util . SortedSet var0 );1;0;1
Collections.unmodifiableMap( java . util . Map var0 );1;0;1
Collections.nCopies( int var0 , java . lang . Object var1 );1;0;1
Collections.synchronizedSet( java . util . Set var0 );1;0;1
Collections.singletonList( java . lang . Object var0 );1;0;1
Collections.synchronizedMap( java . util . Map var0 );1;0;1
Collections.unmodifiableSortedMap( java . util . SortedMap var0 );1;0;1
Collections.sort( java . util . List var0 , java . util . Comparator var1 );1;0;1