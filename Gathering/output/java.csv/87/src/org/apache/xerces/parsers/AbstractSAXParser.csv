Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
AttributesProxy.getValue( String uri , String localName );2;0;4
AbstractSAXParser.notationDecl( String name , XMLResourceIdentifier identifier , Augmentations augs );4;1;13
AbstractSAXParser.endParameterEntity( String name , Augmentations augs );6;5;12
AbstractSAXParser.startDocument( XMLLocator locator , String encoding , NamespaceContext namespaceContext , Augmentations augs );6;4;20
AbstractSAXParser.getFeature( String featureId );26;25;63
AbstractSAXParser.elementDecl( String name , String contentModel , Augmentations augs );3;1;10
AbstractSAXParser.startParameterEntity( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs );7;5;17
AbstractSAXParser.endCDATA( Augmentations augs );3;1;10
AbstractSAXParser.doctypeDecl( String rootElement , String publicId , String systemId , Augmentations augs );4;2;14
AttributesProxy.setAttributes( XMLAttributes attributes );1;0;3
AttributesProxy.getValue( String name );1;0;3
AbstractSAXParser.setFeature( String featureId , boolean state );31;31;85
AbstractSAXParser.unparsedEntityDecl( String name , XMLResourceIdentifier identifier , String notation , Augmentations augs );4;1;13
AbstractSAXParser.getEntityResolver( );5;1;20
AbstractSAXParser.endElement( QName element , Augmentations augs );7;3;20
AttributesProxy.isSpecified( String qName );2;2;7
AbstractSAXParser.endExternalSubset( Augmentations augs );1;0;3
AttributesProxy.getLocalName( int index );1;0;3
AbstractSAXParser.setContentHandler( ContentHandler contentHandler );1;0;3
AbstractSAXParser.startNamespaceMapping( );4;4;13
AbstractSAXParser.setDeclHandler( DeclHandler handler );2;0;9
AttributesProxy.getValue( int i );1;0;3
AttributesProxy.getQName( int index );1;0;3
AttributesProxy.getType( String name );1;0;3
AbstractSAXParser.characters( XMLString text , Augmentations augs );5;3;16
LocatorProxy.getXMLVersion( );1;0;3
AbstractSAXParser.endNamespaceMapping( );3;3;8
AbstractSAXParser.startGeneralEntity( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs );6;4;17
AttributesProxy.getType( String uri , String localName );2;0;4
AbstractSAXParser.ignorableWhitespace( XMLString text , Augmentations augs );4;2;13
AbstractSAXParser.getAttributePSVIByName( String uri , String localname );1;0;3
AttributesProxy.isDeclared( int index );3;3;8
LocatorProxy.getSystemId( );1;0;3
AbstractSAXParser.getErrorHandler( );4;2;14
AbstractSAXParser.parse( InputSource inputSource );11;4;46
AbstractSAXParser.reset( );1;0;9
AttributesProxy.getLength( );1;0;3
AbstractSAXParser.attributeDecl( String elementName , String attributeName , String type , String [ ] enumeration , String defaultType , XMLString defaultValue , XMLString nonNormalizedDefaultValue , Augmentations augs );10;8;36
AbstractSAXParser.getAttributePSVI( int index );1;0;3
AbstractSAXParser.startElement( QName element , XMLAttributes attributes , Augmentations augs );15;17;44
AbstractSAXParser.getDeclHandler( );1;0;3
AttributesProxy.isDeclared( String uri , String localName );2;2;9
AbstractSAXParser.getElementPSVI( );2;1;3
AbstractSAXParser.comment( XMLString text , Augmentations augs );3;1;10
LocatorProxy.getEncoding( );1;0;3
AttributesProxy.getURI( int index );2;1;4
***not in a method***;0;6;0
AbstractSAXParser.startExternalSubset( XMLResourceIdentifier identifier , Augmentations augs );1;0;3
AbstractSAXParser.setLexicalHandler( LexicalHandler handler );2;0;9
AbstractSAXParser.AbstractSAXParser( XMLParserConfiguration config );2;0;10
AbstractSAXParser.processingInstruction( String target , XMLString data , Augmentations augs );4;2;14
AttributesProxy.isSpecified( String uri , String localName );2;2;7
AttributesProxy.isDeclared( String qName );2;2;9
AbstractSAXParser.internalEntityDecl( String name , XMLString text , XMLString nonNormalizedText , Augmentations augs );3;1;10
LocatorProxy.getLineNumber( );1;0;3
AbstractSAXParser.getContentHandler( );1;0;3
AttributesProxy.isSpecified( int index );3;3;6
AbstractSAXParser.setDTDHandler( DTDHandler dtdHandler );1;0;3
AbstractSAXParser.setLocale( Locale locale );1;0;3
AbstractSAXParser.endGeneralEntity( String name , Augmentations augs );5;4;12
AbstractSAXParser.setEntityResolver( EntityResolver resolver );6;1;27
AttributesProxy.getIndex( String uri , String localPart );2;0;4
AttributesProxy.getName( int i );1;0;3
AbstractSAXParser.externalEntityDecl( String name , XMLResourceIdentifier identifier , Augmentations augs );4;1;13
AbstractSAXParser.parse( String systemId );11;4;40
AbstractSAXParser.getLexicalHandler( );1;0;3
AbstractSAXParser.setErrorHandler( ErrorHandler errorHandler );3;0;15
AbstractSAXParser.getDTDHandler( );1;0;3
AbstractSAXParser.setDocumentHandler( DocumentHandler documentHandler );1;0;3
LocatorProxy.getColumnNumber( );1;0;3
LocatorProxy.getPublicId( );1;0;3
AbstractSAXParser.xmlDecl( String version , String encoding , String standalone , Augmentations augs );1;0;4
AttributesProxy.getIndex( String qName );1;0;3
LocatorProxy.LocatorProxy( XMLLocator locator );1;0;3
AttributesProxy.getType( int i );1;0;3
AbstractSAXParser.endDTD( Augmentations augs );4;2;14
AbstractSAXParser.endDocument( Augmentations augs );4;2;13
AbstractSAXParser.startCDATA( Augmentations augs );3;1;10
AbstractSAXParser.getProperty( String propertyId );12;10;39
AbstractSAXParser.setProperty( String propertyId , Object value );14;11;53