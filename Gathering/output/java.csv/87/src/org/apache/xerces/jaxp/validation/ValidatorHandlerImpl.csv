Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
ValidatorHandlerImpl.setErrorHandler( ErrorHandler errorHandler );1;0;3
XMLSchemaTypeInfoProvider.beginEndElement( Augmentations elementAugs );1;0;4
ValidatorHandlerImpl.startElement( String uri , String localName , String qName , Attributes atts );5;0;22
ValidatorHandlerImpl.fillXMLAttributes2( Attributes2 att );3;2;11
ValidatorHandlerImpl.setDocumentLocator( Locator locator );2;1;6
ValidatorHandlerImpl.getDocumentSource( );1;0;3
ValidatorHandlerImpl.startGeneralEntity( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs );1;0;1
ValidatorHandlerImpl.startCDATA( Augmentations augs );1;0;1
XMLSchemaTypeInfoProvider.getAttributeTypeInfo( String attributeUri , String attributeLocalName );1;0;4
ValidatorHandlerImpl.ignorableWhitespace( char [ ] ch , int start , int length );3;0;12
XMLSchemaTypeInfoProvider.finishEndElement( );1;0;4
ValidatorHandlerImpl.characters( XMLString text , Augmentations augs );4;2;13
ValidatorHandlerImpl.endElement( String uri , String localName , String qName );3;0;15
ValidatorHandlerImpl.getResourceResolver( );1;0;3
ValidatorHandlerImpl.ignorableWhitespace( XMLString text , Augmentations augs );3;1;10
ValidatorHandlerImpl.processingInstruction( String target , XMLString data , Augmentations augs );3;1;10
ValidatorHandlerImpl.doctypeDecl( String rootElement , String publicId , String systemId , Augmentations augs );1;0;1
ValidatorHandlerImpl.startPrefixMapping( String prefix , String uri );10;10;20
ValidatorHandlerImpl.comment( XMLString text , Augmentations augs );1;0;1
ValidatorHandlerImpl.ValidatorHandlerImpl( XSGrammarPoolContainer grammarContainer );1;0;7
ValidatorHandlerImpl.endCDATA( Augmentations augs );1;0;1
XMLSchemaTypeInfoProvider.getElementPSVI( );2;1;3
XMLSchemaTypeInfoProvider.isSpecified( int index );1;0;4
ValidatorHandlerImpl.getFeature( String name );4;2;22
ValidatorHandlerImpl.startDocument( XMLLocator locator , String encoding , NamespaceContext namespaceContext , Augmentations augs );3;1;10
ValidatorHandlerImpl.setContentHandler( ContentHandler receiver );1;0;3
XMLSchemaTypeInfoProvider.getAttributeTypeInfo( String attributeQName );1;0;4
XMLSchemaTypeInfoProvider.isIdAttribute( int index );2;1;8
XMLSchemaTypeInfoProvider.getAttributeTypeInfo( int index );1;0;4
ValidatorHandlerImpl.getContentHandler( );1;0;3
ValidatorHandlerImpl.getTypeInfoProvider( );1;0;3
ValidatorHandlerImpl.xmlDecl( String version , String encoding , String standalone , Augmentations augs );1;0;1
XMLSchemaTypeInfoProvider.finishStartElement( );1;0;5
ResolutionForwarder.ResolutionForwarder( );1;0;1
ValidatorHandlerImpl.validate( Source source , Result result );16;9;74
ValidatorHandlerImpl.startElement( QName element , XMLAttributes attributes , Augmentations augs );4;2;15
ValidatorHandlerImpl.getErrorHandler( );1;0;3
ValidatorHandlerImpl.ValidatorHandlerImpl( XMLSchemaValidatorComponentManager componentManager );1;0;8
ValidatorHandlerImpl.setDocumentSource( XMLDocumentSource source );1;0;1
ResolutionForwarder.resolveEntity( String publicId , String systemId );1;0;3
XMLSchemaTypeInfoProvider.checkStateAttribute( );2;1;6
ValidatorHandlerImpl.getElementPSVI( );1;0;3
XMLSchemaTypeInfoProvider.getTypeInfoFromPSVI( ItemPSVI psvi );7;4;16
ValidatorHandlerImpl.processingInstruction( String target , String data );2;1;5
ValidatorHandlerImpl.startDocument( );5;3;20
***not in a method***;0;9;0
ResolutionForwarder.ResolutionForwarder( LSResourceResolver entityResolver );1;0;3
ResolutionForwarder.setEntityResolver( LSResourceResolver entityResolver );1;0;3
XMLSchemaTypeInfoProvider.beginStartElement( Augmentations elementAugs , XMLAttributes attributes );1;0;5
ResolutionForwarder.resolveSystemId( String systemId , String baseURI );2;0;8
ValidatorHandlerImpl.setFeature( String name , boolean value );4;2;22
ValidatorHandlerImpl.endDocument( Augmentations augs );3;1;10
XMLSchemaTypeInfoProvider.checkStateElement( );3;3;6
ValidatorHandlerImpl.getAttributePSVIByName( String uri , String localname );1;0;3
ValidatorHandlerImpl.textDecl( String version , String encoding , Augmentations augs );1;0;1
ValidatorHandlerImpl.getAttributePSVI( int index );1;0;3
ValidatorHandlerImpl.isEntityDeclared( String name );1;0;3
ValidatorHandlerImpl.getProperty( String name );4;2;22
ValidatorHandlerImpl.fillXMLAttribute( Attributes att , int index );2;1;5
ValidatorHandlerImpl.endPrefixMapping( String prefix );2;1;5
XMLSchemaTypeInfoProvider.getAttributePSVI( int index );3;2;9
ValidatorHandlerImpl.unparsedEntityDecl( String name , String publicId , String systemId , String notationName );2;1;6
ValidatorHandlerImpl.setResourceResolver( LSResourceResolver resourceResolver );1;0;3
XMLSchemaTypeInfoProvider.getAttributeType( int index );4;4;12
ValidatorHandlerImpl.skippedEntity( String name );2;1;5
ValidatorHandlerImpl.endDocument( );3;0;12
ValidatorHandlerImpl.emptyElement( QName element , XMLAttributes attributes , Augmentations augs );1;0;4
ResolutionForwarder.resolveEntity( String name , String publicId , String baseURI , String systemId );8;8;29
ValidatorHandlerImpl.endElement( QName element , Augmentations augs );4;2;15
ValidatorHandlerImpl.fillXMLAttributes( Attributes att );2;2;8
ValidatorHandlerImpl.fillQName( QName toFill , String uri , String localpart , String raw );11;13;24
ResolutionForwarder.getExternalSubset( String name , String baseURI );1;0;3
ValidatorHandlerImpl.endGeneralEntity( String name , Augmentations augs );1;0;1
XMLSchemaTypeInfoProvider.getElementTypeInfo( );2;1;8
XMLSchemaTypeInfoProvider.getAttributePSVIByName( String uri , String localname );3;2;9
ResolutionForwarder.getEntityResolver( );1;0;3
ValidatorHandlerImpl.isEntityUnparsed( String name );2;1;6
ValidatorHandlerImpl.notationDecl( String name , String publicId , String systemId );1;0;1
ValidatorHandlerImpl.setProperty( String name , Object object );4;2;22
ValidatorHandlerImpl.characters( char [ ] ch , int start , int length );3;0;12