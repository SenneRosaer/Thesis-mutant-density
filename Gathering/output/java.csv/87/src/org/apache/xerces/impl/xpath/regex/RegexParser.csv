Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
RegexParser.ex( String key , int loc );1;0;3
RegexParser.processModifiers( );11;21;36
RegexParser.next( );52;53;127
RegexParser.processBacksolidus_gt( );1;0;4
RegexParser.processBacksolidus_c( );3;7;8
RegexParser.processCondition( );16;19;42
RegexParser.processIndependent( );2;2;7
RegexParser.processBacksolidus_Z( );1;0;4
RegexParser.processCaret( );1;0;4
RegexParser.processBacksolidus_I( );1;0;3
RegexParser.isSet( int flag );1;2;3
RegexParser.processBackreference( );2;3;9
RegexParser.processPlus( Token tok );2;1;8
RegexParser.checkQuestion( int off );2;3;3
RegexParser.setLocale( Locale locale );2;0;8
RegexParser.processBacksolidus_pP( int c );4;7;13
RegexParser.RegexParser( Locale locale );1;0;3
RegexParser.processDollar( );1;0;4
ReferencePosition.ReferencePosition( int n , int pos );1;0;4
RegexParser.processBacksolidus_C( );1;0;3
RegexParser.processBacksolidus_z( );1;0;4
RegexParser.parseAtom( );50;12;74
RegexParser.processBacksolidus_lt( );1;0;4
RegexParser.processLookahead( );2;2;7
RegexParser.parseSetOperations( );10;14;25
RegexParser.processNegativelookbehind( );2;2;7
RegexParser.processBacksolidus_X( );1;0;4
RegexParser.getTokenForShorthand( int ch );13;0;32
RegexParser.parseFactor( );39;40;83
RegexParser.processParen( );2;3;8
RegexParser.parseRegex( );3;2;14
RegexParser.processStar( Token tok );2;1;8
RegexParser.processCIinCharacterClass( RangeToken tok , int c );1;0;3
RegexParser.decodeEscaped( );46;86;94
RegexParser.read( );1;0;3
RegexParser.processBacksolidus_i( );1;0;5
RegexParser.processBacksolidus_A( );1;0;4
RegexParser.parseTerm( );8;11;18
RegexParser.parseCharacterClass( boolean useNrange );42;39;105
RegexParser.RegexParser( );1;0;3
RegexParser.processBacksolidus_B( );1;0;4
RegexParser.processQuestion( Token tok );2;1;13
RegexParser.parse( String regex , int options );6;5;24
RegexParser.hexChar( int ch );7;15;9
RegexParser.processParen2( );2;2;7
RegexParser.processBacksolidus_b( );1;0;4
RegexParser.processBacksolidus_g( );1;0;4
RegexParser.setContext( int con );1;0;3
RegexParser.processNegativelookahead( );2;2;7
RegexParser.processLookbehind( );2;2;7