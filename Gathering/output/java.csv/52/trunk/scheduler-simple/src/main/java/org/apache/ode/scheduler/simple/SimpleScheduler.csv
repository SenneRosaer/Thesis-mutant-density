Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
SimpleScheduler.setStaleInterval( long staleInterval );1;0;3
SimpleScheduler.runJob( final Job job );5;1;16
UpgradeJobsTask.run( );3;5;19
SimpleScheduler.setImmediateInterval( long immediateInterval );1;0;3
SimpleScheduler.recoverStaleNode( final String nodeId );2;0;18
SimpleScheduler.start( );4;4;26
SimpleScheduler.setNodeId( String nodeId );1;0;3
***not in a method***;0;2;0
LoadImmediateTask.run( );2;3;11
SimpleScheduler.setDatabaseDelegate( DatabaseDelegate dbd );1;0;3
SimpleScheduler.setNearFutureInterval( long nearFutureInterval );1;0;3
SimpleScheduler.setTransactionManager( TransactionManager txm );1;0;3
SimpleScheduler.doLoadImmediate( );5;1;24
SimpleScheduler.execTransaction( Callable < T > transaction );7;0;25
SimpleScheduler.schedulePersistedJob( final Map < String , Object > jobDetail , Date when );8;8;32
SimpleScheduler.runTask( Task task );3;0;6
SimpleScheduler.addTodoOnCommit( final Job job );5;1;27
SimpleScheduler.doUpgrade( );3;1;24
SimpleScheduler.scheduleVolatileJob( boolean transacted , Map < String , Object > jobDetail );1;0;6
LoadImmediateTask.LoadImmediateTask( long schedDate );1;0;3
SimpleScheduler.updateHeartBeat( String nodeId );3;1;8
UpgradeJobsTask.UpgradeJobsTask( long schedDate );1;0;3
SimpleScheduler.shutdown( );1;0;6
CheckStaleNodes.run( );4;5;9
SimpleScheduler.cancelJob( String jobId );2;0;9
CheckStaleNodes.CheckStaleNodes( long schedDate );1;0;3
SimpleScheduler.stop( );2;1;9
SimpleScheduler.afterCompletion( int status );2;1;5
SchedulerTask.SchedulerTask( long schedDate );1;0;3
SimpleScheduler.SimpleScheduler( String nodeId , DatabaseDelegate del , Properties conf );1;0;6
SimpleScheduler.setJobProcessor( JobProcessor processor );1;0;3
SimpleScheduler.doRetry( Job job );3;9;9
SimpleScheduler.call( );1;3;4
SimpleScheduler.beforeCompletion( );1;0;2
SimpleScheduler.jobCompleted( String jobId );4;1;18