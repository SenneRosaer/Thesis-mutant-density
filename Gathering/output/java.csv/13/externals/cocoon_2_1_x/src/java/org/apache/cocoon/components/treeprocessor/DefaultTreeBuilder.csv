Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
DefaultTreeBuilder.compose( ComponentManager manager );1;0;3
DefaultTreeBuilder.getSitemapComponentManager( );1;0;3
DefaultTreeBuilder.dispose( );1;0;3
DefaultTreeBuilder.contextualize( Context context );1;0;3
DefaultTreeBuilder.getComponentInstanceName( );1;0;3
DefaultTreeBuilder.recycle( );1;0;12
DefaultTreeBuilder.getProcessor( );1;0;3
DefaultTreeBuilder.createComponentManager( Configuration tree );1;0;3
DefaultTreeBuilder.getClassAttributeName( );1;0;3
DefaultTreeBuilder.linkNodes( );2;0;6
DefaultTreeBuilder.getLocation( Configuration config );6;2;26
DefaultTreeBuilder.registerNode( String name , ProcessingNode node );2;0;7
DefaultTreeBuilder.getParameters( Configuration config , Location location );5;4;23
DefaultTreeBuilder.createBuilderSelector( );1;0;18
DefaultTreeBuilder.createTree( Configuration tree );1;0;4
DefaultTreeBuilder.configure( Configuration config );2;0;10
DefaultTreeBuilder.getFileName( );1;0;3
DefaultTreeBuilder.build( Source source );3;0;16
DefaultTreeBuilder.getParameterName( );1;0;3
DefaultTreeBuilder.getTypeForStatement( Configuration statement , String role );6;4;29
DefaultTreeBuilder.recompose( ComponentManager manager );1;0;3
DefaultTreeBuilder.build( Configuration tree );2;0;21
DefaultTreeBuilder.getDisposableNodes( );1;0;3
DefaultTreeBuilder.getRegisteredNode( String name );2;0;7
DefaultTreeBuilder.getNamespace( );1;0;3
DefaultTreeBuilder.setRoleManager( RoleManager rm );1;0;3
DefaultTreeBuilder.setProcessor( ConcreteTreeProcessor processor );1;0;3
DefaultTreeBuilder.getAttribute( String name );1;0;3
DefaultTreeBuilder.getLanguage( );1;0;3
DefaultTreeBuilder.setupNode( ProcessingNode node , Configuration config );5;0;18
DefaultTreeBuilder.setAttribute( String name , Object value );1;0;3
DefaultTreeBuilder.createRoleManager( );1;0;11
DefaultTreeBuilder.createNodeBuilder( Configuration config );6;0;25