Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
TagTransformer.characters( char [ ] ch , int start , int length );2;1;6
TagTransformer.recycle( );6;5;31
TagTransformer.endEntity( String name );2;1;6
TagTransformer.endPrefixMapping( String prefix );2;1;6
TagTransformer.setup( SourceResolver resolver , Map objectModel , String source , Parameters parameters );1;0;5
TagTransformer.getWriteMethodMap( Class beanClass );5;7;22
TagTransformer.skippedEntity( String name );2;1;6
TagTransformer.endElement( String namespaceURI , String localName , String qName );16;13;66
TagTransformer.setConsumer( XMLConsumer consumer );1;0;4
TagTransformer.startCDATA( );2;1;6
TagTransformer.startPrefixMapping( String prefix , String uri );2;1;6
TagTransformer.startRecording( );2;0;10
TagTransformer.startDTD( String name , String publicId , String systemId );2;1;6
TagTransformer.startElement( String namespaceURI , String localName , String qName , Attributes atts );12;8;48
TagTransformer.endDocument( );1;0;3
TagTransformer.processingInstruction( String target , String data );2;1;6
TagTransformer.setDocumentLocator( org . xml . sax . Locator locator );2;1;6
TagTransformer.endCDATA( );2;1;6
TagTransformer.ignorableWhitespace( char [ ] ch , int start , int length );2;1;6
TagTransformer.endRecording( );1;0;8
TagTransformer.endDTD( );2;1;6
TagTransformer.startEntity( String name );2;1;6
TagTransformer.getWriteMethod( Class type , String propertyName );2;1;8
TagTransformer.configure( Configuration conf );4;1;14
TagTransformer.startDocument( );1;0;3
TagTransformer.setupTag( Tag tag , String name , Attributes atts );10;3;45
TagTransformer.service( ServiceManager manager );1;0;4
TagTransformer.dispose( );2;1;8
TagTransformer.comment( char [ ] ch , int start , int length );2;1;6
TagTransformer.popConsumer( );3;1;10