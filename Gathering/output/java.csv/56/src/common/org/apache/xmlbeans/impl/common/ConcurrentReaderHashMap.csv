Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
KeySet.clear( );1;0;3
ConcurrentReaderHashMap.get( Object key );8;13;29
ConcurrentReaderHashMap.recordModification( Object x );1;0;5
KeyIterator.returnValueOfNext( );1;0;1
ConcurrentReaderHashMap.rehash( );8;14;40
ConcurrentReaderHashMap.sremove( Object key , int hash );5;7;19
Values.clear( );1;0;3
KeySet.size( );1;0;3
***not in a method***;0;1;0
ConcurrentReaderHashMap.ConcurrentReaderHashMap( int initialCapacity , float loadFactor );2;2;9
ConcurrentReaderHashMap.readObject( java . io . ObjectInputStream s );2;2;11
ConcurrentReaderHashMap.containsValue( Object value );5;4;10
HashIterator.nextElement( );1;0;1
KeySet.remove( Object o );1;1;3
ConcurrentReaderHashMap.writeObject( java . io . ObjectOutputStream s );3;4;13
KeySet.contains( Object o );1;0;3
ConcurrentReaderHashMap.ConcurrentReaderHashMap( int initialCapacity );1;0;3
Values.contains( Object o );1;0;3
HashIterator.remove( );2;1;6
ConcurrentReaderHashMap.elements( );1;0;3
ConcurrentReaderHashMap.entrySet( );2;1;4
Entry.Entry( int hash , Object key , Object value , Entry next );1;0;6
HashIterator.HashIterator( );1;1;4
ConcurrentReaderHashMap.p2capacity( int initialCapacity );4;5;12
ConcurrentReaderHashMap.keySet( );2;1;4
ConcurrentReaderHashMap.isEmpty( );1;1;3
EntrySet.iterator( );1;0;3
EntrySet.clear( );1;0;3
ConcurrentReaderHashMap.loadFactor( );1;0;3
ConcurrentReaderHashMap.containsKey( Object key );1;1;3
EntrySet.contains( Object o );3;3;7
ConcurrentReaderHashMap.remove( Object key );10;13;32
ConcurrentReaderHashMap.eq( Object x , Object y );2;2;3
Entry.getKey( );1;0;3
ConcurrentReaderHashMap.size( );1;0;3
KeySet.iterator( );1;0;3
ConcurrentReaderHashMap.ConcurrentReaderHashMap( );1;0;3
HashIterator.hasNext( );7;7;20
HashIterator.hasMoreElements( );1;0;1
Entry.toString( );1;1;3
EntrySet.remove( Object o );2;1;5
ConcurrentReaderHashMap.clear( );3;3;10
ConcurrentReaderHashMap.findAndRemoveEntry( Map . Entry entry );3;2;10
Entry.hashCode( );1;1;3
ConcurrentReaderHashMap.hash( Object x );1;6;4
HashIterator.returnValueOfNext( );1;0;1
Entry.getValue( );1;0;3
ConcurrentReaderHashMap.capacity( );1;0;3
ValueIterator.returnValueOfNext( );1;0;1
Entry.setValue( Object value );2;1;7
ConcurrentReaderHashMap.clone( );4;3;21
ConcurrentReaderHashMap.getTableForReading( );1;0;5
ConcurrentReaderHashMap.contains( Object value );1;0;3
Values.iterator( );1;0;3
ConcurrentReaderHashMap.ConcurrentReaderHashMap( Map t );1;2;5
Values.size( );1;0;3
EntrySet.size( );1;0;3
ConcurrentReaderHashMap.put( Object key , Object value );11;14;33
ConcurrentReaderHashMap.keys( );1;0;3
HashIterator.next( );3;3;9
ConcurrentReaderHashMap.sput( Object key , Object value , int hash );6;7;22
Entry.equals( Object o );3;2;6
ConcurrentReaderHashMap.values( );2;1;4
ConcurrentReaderHashMap.putAll( Map t );4;2;13