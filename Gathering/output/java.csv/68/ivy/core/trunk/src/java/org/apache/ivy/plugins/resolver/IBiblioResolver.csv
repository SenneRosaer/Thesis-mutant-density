Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
IBiblioResolver.listResources( Repository repository , ModuleRevisionId mrid , String pattern , Artifact artifact );7;3;30
IBiblioResolver.IBiblioResolver( );1;0;4
IBiblioResolver.findTokenValues( Collection names , List patterns , Map tokenValues , String token );4;1;13
IBiblioResolver.isUseMavenMetadata( );1;0;3
IBiblioResolver.findSnapshotVersion( ModuleRevisionId mrid );11;4;54
IBiblioResolver.getArtifactPatterns( );1;0;4
IBiblioResolver.setRoot( String root );3;2;12
IBiblioResolver.findArtifactRef( Artifact artifact , Date date );4;1;16
IBiblioResolver.listRevisionsWithMavenMetadata( Repository repository , String metadataLocation );8;1;41
IBiblioResolver.listOrganisations( );1;0;3
IBiblioResolver.exists( Artifact artifact );1;0;4
IBiblioResolver.dumpSettings( );1;0;8
IBiblioResolver.listTokenValues( String token , Map otherTokenValues );4;2;10
IBiblioResolver.getRoot( );1;0;3
IBiblioResolver.getDependency( DependencyDescriptor dd , ResolveData data );1;0;4
IBiblioResolver.listRevisions( ModuleEntry mod );1;0;4
IBiblioResolver.locate( Artifact artifact );1;0;4
IBiblioResolver.getPattern( );1;0;3
IBiblioResolver.listRevisionsWithMavenMetadata( Repository repository , Map tokenValues );1;0;5
IBiblioResolver.endElement( String uri , String localName , String qName );3;0;10
IBiblioResolver.setUsepoms( boolean usepoms );1;0;4
IBiblioResolver.setUseMavenMetadata( boolean useMavenMetadata );1;0;3
IBiblioResolver.getModuleDescriptorExtension( );1;0;3
IBiblioResolver.isUsepoms( );1;0;3
IBiblioResolver.setM2compatible( boolean m2compatible );4;2;12
IBiblioResolver.shouldUseMavenMetadata( String pattern );3;2;3
IBiblioResolver.findSnapshotDescriptor( DependencyDescriptor dd , ResolveData data , ModuleRevisionId mrid );2;1;12
IBiblioResolver.getWholePattern( );1;1;3
IBiblioResolver.listModules( OrganisationEntry org );2;0;7
IBiblioResolver.findSnapshotArtifact( Artifact artifact , Date date , ModuleRevisionId mrid );2;1;10
IBiblioResolver.download( Artifact [ ] artifacts , DownloadOptions options );1;0;4
IBiblioResolver.updateWholePattern( );3;1;6
IBiblioResolver.getTypeName( );1;0;3
IBiblioResolver.setPattern( String pattern );2;1;8
IBiblioResolver.ensureConfigured( ResolverSettings settings );8;9;23
IBiblioResolver.listTokenValues( String pattern , String token );10;5;30
IBiblioResolver.findIvyFileRef( DependencyDescriptor dd , ResolveData data );5;2;19
IBiblioResolver.publish( Artifact artifact , File src );1;0;3