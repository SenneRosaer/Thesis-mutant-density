Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
Granularity.getDefault( );1;0;5
FTPFileProxy.length( );2;1;6
FTP.setChmod( String theMode );1;0;3
FTPDirectoryScanner.accountForIncludedDir( String name , AntFTPFile file , boolean fast );11;8;38
FTP.setTimeDiffMillis( long timeDiffMillis );1;0;3
FTP.getFile( FTPClient ftp , String dir , String filename );11;7;49
AntFTPFile.getName( );1;0;3
FTP.setAction( String action );1;0;7
FTP.isFunctioningAsDirectory( FTPClient ftp , String dir , FTPFile file );9;2;39
AntFTPRootFile.getRelativePath( );1;0;3
AntFTPFile.AntFTPFile( AntFTPFile parent , String path );11;15;40
FTP.getRecentDateFormatConfig( );1;0;3
FTPDirectoryScanner.FTPDirectoryScanner( FTPClient ftp );1;0;5
Granularity.getValues( );1;0;3
FTP.setRemotedir( String dir );1;0;3
FTPFileProxy.getParent( );2;5;7
FTP.setListing( File listing );1;0;3
LanguageCode.getValues( );1;0;3
FTP.setServer( String server );1;0;3
FTP.setServerTimeZoneConfig( String serverTimeZoneId );3;3;6
FTPDirectoryScanner.clearCaches( );1;0;4
FTP.setUmask( String theUmask );1;0;3
FTP.setDepends( boolean depends );1;0;3
FTP.setUserid( String userid );1;0;3
FTP.setDefaultDateFormatConfig( String defaultDateFormat );3;3;6
FTP.rmDir( FTPClient ftp , String dirname );4;3;18
FTP.listFile( FTPClient ftp , BufferedWriter bw , String filename );4;4;11
AntFTPFile.getAbsolutePath( );1;2;3
AntFTPFile.exists( );1;1;3
FTP.setTimestampGranularity( Granularity timestampGranularity );3;2;6
FTPFileProxy.FTPFileProxy( String completePath );1;0;6
FTP.delFile( FTPClient ftp , String filename );4;3;18
FTP.configurationHasBeenSet( );1;0;3
AntFTPRootFile.getAbsolutePath( );1;0;3
FTPDirectoryScanner.scan( );4;2;24
FTPFileProxy.isHidden( );1;0;3
AntFTPFile.findPathElementCaseUnsensitive( String parentPath , String soughtPathElement );5;5;13
FTPFileProxy.getPath( );1;0;3
FTPFileProxy.getAbsolutePath( );1;0;3
FTP.setRecentDateFormatConfig( String recentDateFormat );3;3;6
FTPDirectoryScanner.forceRemoteSensitivityCheck( );3;1;9
FTPFileProxy.isFile( );1;1;3
AntFTPFile.getCurpwd( );1;0;3
FTP.getTimeDiff( FTPClient ftp );4;2;27
FTP.createParents( FTPClient ftp , String filename );11;10;43
FTP.setServerLanguageCodeConfig( LanguageCode serverLanguageCode );3;3;6
AntFTPFile.getFastRelativePath( );2;3;7
FTP.setNewer( boolean newer );1;0;3
FTPSystemType.getDefault( );1;0;5
FTPDirectoryScanner.scandir( String dir , String vpath , boolean fast );22;23;61
AntFTPFile.toString( );1;0;3
FTP.getServerLanguageCodeConfig( );1;0;3
FTP.execute( );1;22;3
FTP.setInitialSiteCommand( String initialCommand );1;0;3
FTP.setAction( Action action );1;0;3
FTP.getSystemTypeKey( );1;0;3
FTP.setSystemTypeKey( FTPSystemType systemKey );3;3;6
FTP.handleMkDirFailure( FTPClient ftp );5;7;8
AntFTPFile.AntFTPFile( FTPClient client , FTPFile ftpFile , String curpwd );1;0;5
FTP.setPort( int port );1;0;3
FTP.setSeparator( String separator );1;0;3
AntFTPFile.getClient( );1;0;3
FTP.addFileset( FileSet set );1;0;3
AntFTPFile.getLink( );1;0;3
FTPFileProxy.isDirectory( );1;1;3
LanguageCode.getDefault( );1;0;5
FTPFileProxy.lastModified( );2;1;6
FTP.setTimeDiffAuto( boolean timeDiffAuto );1;0;3
FTPDirectoryScanner.checkIncludePatterns( );24;16;81
FTP.transferFiles( FTPClient ftp );5;9;20
FTPDirectoryScanner.accountForIncludedFile( String name );6;5;15
FTP.makeRemoteDir( FTPClient ftp , String dir );15;14;41
AntFTPFile.getRelativePath( String currentPath , String currentRelativePath );6;13;28
FTP.getTimestampGranularity( );1;0;3
FTP.setBinary( boolean binary );1;0;3
AntFTPFile.isSymbolicLink( );1;0;3
AntFTPRootFile.AntFTPRootFile( FTPClient aclient , String remotedir );2;0;10
FTP.setAccount( String pAccount );1;0;3
Action.getValues( );1;0;3
AntFTPFile.setCurpwd( String curpwd );1;0;3
FTPDirectoryScanner.listFiles( String directory );1;0;3
FTPFileProxy.getName( );2;2;3
FTPFileProxy.FTPFileProxy( FTPFile file );1;0;6
FTP.getServerTimeZoneConfig( );1;0;3
FTP.setSkipFailedTransfers( boolean skipFailedTransfers );1;0;3
Granularity.getMilliseconds( int action );4;1;11
FTP.setSiteCommand( String siteCommand );1;0;3
FTPDirectoryScanner.checkRemoteSensitivity( FTPFile [ ] array , String directory );15;15;47
Action.getAction( );12;3;21
FTP.setRetriesAllowed( String retriesAllowed );4;1;19
FTP.setEnableRemoteVerification( boolean b );1;0;3
FTPFileProxy.isAbsolute( );1;0;3
FTPDirectoryScanner.listFiles( String directory , boolean changedir );7;2;29
FTP.setVerbose( boolean verbose );1;0;3
AntFTPFile.getRelativePath( );3;2;13
FTPFileProxy.exists( );1;0;3
FTPSystemType.getValues( );1;0;3
FTP.setPassword( String password );1;0;3
FTPDirectoryScanner.hasBeenScanned( String vpath );1;0;3
FTP.setPassive( boolean passive );1;0;3
FTP.doSiteCommand( FTPClient ftp , String theCMD );4;5;16
FTP.isUpToDate( FTPClient ftp , File localFile , String remoteFile );6;10;36
FTP.executeRetryable( RetryHandler h , Retryable r , String descr );1;0;3
FTP.findFileName( FTPClient ftp );8;8;30
AntFTPFile.isTraverseSymlinks( );2;1;6
AntFTPFile.isDirectory( );1;0;3
FTP.getDefaultDateFormatConfig( );1;0;3
FTP.setShortMonthNamesConfig( String shortMonthNames );3;3;6
FTP.setIgnoreNoncriticalErrors( boolean ignoreNoncriticalErrors );1;0;3
LanguageCode.getValidLanguageCodes( );2;3;10
FTP.sendFile( FTPClient ftp , String dir , String filename );9;6;39
FTP.resolveFile( String file );1;0;4
FTP.isFunctioningAsFile( FTPClient ftp , String dir , FTPFile file );3;1;8
FTP.getShortMonthNamesConfig( );1;0;3
FTP.setPreserveLastModified( boolean preserveLastModified );1;0;3
FTPDirectoryScanner.fiddleName( String origin );4;2;13
AntFTPFile.getFile( FTPFile [ ] theFiles , String lastpathelement );7;6;17
FTP.transferFiles( final FTPClient ftp , FileSet fs );20;19;88
FTP.checkAttributes( );14;15;36