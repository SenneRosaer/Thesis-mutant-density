Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
Execute.isFailure( );1;0;3
Execute.getProcEnvCommand( );11;2;27
Execute.getCommandline( );1;0;3
Execute.Execute( ExecuteStreamHandler streamHandler , ExecuteWatchdog watchdog );2;0;7
OS2CommandLauncher.exec( Project project , String [ ] cmd , String [ ] env , File workingDir );3;3;22
VmsCommandLauncher.createCommandFile( String [ ] cmd , String [ ] env );6;9;30
Java13CommandLauncher.exec( Project project , String [ ] cmd , String [ ] env , File workingDir );6;1;22
Execute.runCommand( Task task , String [ ] cmdline );3;1;18
OS2CommandLauncher.OS2CommandLauncher( CommandLauncher launcher );1;0;3
***not in a method***;0;4;0
Execute.toString( ByteArrayOutputStream bos );5;0;14
Execute.setWorkingDirectory( File wd );3;2;5
Execute.getProcEnvironment( );10;11;43
Execute.setSpawn( boolean spawn );1;0;3
Execute.execute( );8;6;38
Execute.setStreamHandler( ExecuteStreamHandler streamHandler );1;0;3
CommandLauncher.exec( Project project , String [ ] cmd , String [ ] env );2;1;7
MacCommandLauncher.MacCommandLauncher( CommandLauncher launcher );1;0;3
PerlScriptCommandLauncher.PerlScriptCommandLauncher( String script , CommandLauncher launcher );1;0;4
Execute.getEnvironment( );3;2;4
Execute.setVMLauncher( boolean useVMLauncher );1;0;3
Execute.killedProcess( );2;2;3
Execute.getWorkingDirectory( );2;1;4
CommandLauncher.exec( Project project , String [ ] cmd , String [ ] env , File workingDir );2;1;7
ScriptCommandLauncher.exec( Project project , String [ ] cmd , String [ ] env , File workingDir );5;7;26
Execute.Execute( ExecuteStreamHandler streamHandler );1;0;3
MacCommandLauncher.exec( Project project , String [ ] cmd , String [ ] env , File workingDir );2;1;11
Execute.Execute( );1;0;3
VmsCommandLauncher.exec( Project project , String [ ] cmd , String [ ] env , File workingDir );1;0;7
WinNTCommandLauncher.exec( Project project , String [ ] cmd , String [ ] env , File workingDir );3;3;20
Java13CommandLauncher.Java13CommandLauncher( );1;0;4
Execute.setExitValue( int value );1;0;3
Execute.waitFor( Process process );2;0;8
Execute.setNewenvironment( boolean newenv );1;0;3
VmsCommandLauncher.exec( Project project , String [ ] cmd , String [ ] env );1;0;7
Execute.patchEnvironment( );8;6;29
CommandLauncherProxy.CommandLauncherProxy( CommandLauncher launcher );1;0;3
Execute.launch( Project project , String [ ] command , String [ ] env , File dir , boolean useVM );5;5;8
Execute.getExitValue( );1;0;3
VmsCommandLauncher.run( );2;0;7
Execute.spawn( );5;3;27
CommandLauncherProxy.exec( Project project , String [ ] cmd , String [ ] env );1;0;3
VmsCommandLauncher.VmsCommandLauncher( );1;0;3
Execute.setEnvironment( String [ ] env );1;0;3
Execute.addVMSLogicals( Vector environment , BufferedReader in );9;10;32
ScriptCommandLauncher.ScriptCommandLauncher( String script , CommandLauncher launcher );1;0;4
Execute.write( int b );1;0;2
Execute.setCommandline( String [ ] commandline );1;0;3
Execute.isFailure( int exitValue );2;3;4
Execute.closeStreams( Process process );1;0;5
PerlScriptCommandLauncher.exec( Project project , String [ ] cmd , String [ ] env , File workingDir );5;7;27
Execute.setAntRun( Project project );1;0;3
WinNTCommandLauncher.WinNTCommandLauncher( CommandLauncher launcher );1;0;3
VmsCommandLauncher.deleteAfter( final File f , final Process p );2;0;12