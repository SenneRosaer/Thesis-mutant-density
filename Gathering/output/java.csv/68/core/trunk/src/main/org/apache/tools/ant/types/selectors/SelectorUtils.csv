Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
SelectorUtils.removeWhitespace( String input );3;1;10
SelectorUtils.hasWildcards( String input );2;5;3
SelectorUtils.matchPatternStart( String pattern , String str , boolean isCaseSensitive );2;1;9
SelectorUtils.tokenizePathAsArray( String path );12;18;45
SelectorUtils.matchPath( String pattern , String str , boolean isCaseSensitive );1;0;4
SelectorUtils.allStars( char [ ] chars , int start , int end );3;3;8
SelectorUtils.tokenizePath( String path );1;0;3
SelectorUtils.getInstance( );1;0;3
SelectorUtils.matchPath( String pattern , String str );1;0;4
SelectorUtils.matchPath( String [ ] tokenizedPattern , String [ ] strDirs , boolean isCaseSensitive );27;55;87
SelectorUtils.isOutOfDate( Resource src , Resource target , long granularity );4;7;8
SelectorUtils.matchPatternStart( String [ ] patDirs , String [ ] strDirs , boolean isCaseSensitive );7;10;24
SelectorUtils.SelectorUtils( );1;0;2
SelectorUtils.isOutOfDate( File src , File target , int granularity );4;4;12
SelectorUtils.rtrimWildcardTokens( String input );1;0;3
SelectorUtils.matchPatternStart( String pattern , String str );1;0;3
SelectorUtils.different( boolean caseSensitive , char ch , char other );2;2;5
SelectorUtils.isOutOfDate( Resource src , Resource target , int granularity );1;0;3
SelectorUtils.match( String pattern , String str , boolean caseSensitive );31;55;101
SelectorUtils.match( String pattern , String str );1;0;3
SelectorUtils.tokenizePath( String path , String separator );3;0;13