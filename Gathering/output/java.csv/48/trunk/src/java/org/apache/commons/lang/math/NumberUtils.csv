Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
NumberUtils.max( double [ ] array );6;5;17
NumberUtils.max( long [ ] array );5;5;14
NumberUtils.compare( float lhs , float rhs );5;8;18
NumberUtils.min( double [ ] array );6;5;17
NumberUtils.max( long a , long b , long c );3;2;9
NumberUtils.min( byte [ ] array );5;5;14
NumberUtils.createBigDecimal( String str );3;1;9
NumberUtils.toDouble( String str );1;0;3
NumberUtils.createDouble( String str );2;1;6
NumberUtils.min( double a , double b , double c );1;0;3
***not in a method***;0;6;0
NumberUtils.stringToInt( String str );1;0;3
NumberUtils.toFloat( String str );1;0;3
NumberUtils.isNumber( String str );44;67;80
NumberUtils.min( float [ ] array );6;5;17
NumberUtils.createFloat( String str );2;1;6
NumberUtils.toDouble( String str , double defaultValue );3;1;10
NumberUtils.max( short [ ] array );5;5;14
NumberUtils.NumberUtils( );1;0;3
NumberUtils.compare( double lhs , double rhs );5;8;18
NumberUtils.max( double a , double b , double c );1;0;3
NumberUtils.min( short a , short b , short c );3;2;9
NumberUtils.min( float a , float b , float c );1;0;3
NumberUtils.toLong( String str );1;0;3
NumberUtils.min( int a , int b , int c );3;2;9
NumberUtils.toFloat( String str , float defaultValue );3;1;10
NumberUtils.max( byte [ ] array );5;5;14
NumberUtils.min( byte a , byte b , byte c );3;2;9
NumberUtils.max( short a , short b , short c );3;2;9
NumberUtils.max( float [ ] array );6;5;17
NumberUtils.toInt( String str , int defaultValue );3;1;10
NumberUtils.max( byte a , byte b , byte c );3;2;9
NumberUtils.min( short [ ] array );5;5;14
NumberUtils.toInt( String str );1;0;3
NumberUtils.createBigInteger( String str );2;1;6
NumberUtils.min( long [ ] array );5;5;14
NumberUtils.min( long a , long b , long c );3;2;9
NumberUtils.createNumber( String str );50;61;119
NumberUtils.isAllZeros( String str );4;6;11
NumberUtils.createInteger( String str );2;1;6
NumberUtils.isDigits( String str );4;3;11
NumberUtils.stringToInt( String str , int defaultValue );1;0;3
NumberUtils.max( float a , float b , float c );1;0;3
NumberUtils.max( int [ ] array );5;5;14
NumberUtils.min( int [ ] array );5;5;14
NumberUtils.max( int a , int b , int c );3;2;9
NumberUtils.createLong( String str );2;1;6
NumberUtils.toLong( String str , long defaultValue );3;1;10