Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
MethodUtils.getAccessibleMethod( Class clazz , Method method );9;9;36
MethodUtils.isAssignmentCompatible( Class parameterType , Class parameterization );4;1;12
MethodUtils.invokeExactStaticMethod( Class objectClass , String methodName , Object [ ] args );3;3;11
MethodUtils.invokeStaticMethod( Class objectClass , String methodName , Object [ ] args );3;3;11
MethodUtils.getAccessibleMethod( Class clazz , String methodName , Class parameterType );1;0;4
MethodUtils.toNonPrimitiveClass( Class clazz );3;1;12
MethodUtils.invokeMethod( Object object , String methodName , Object [ ] args );3;3;11
MethodUtils.cacheMethod( MethodDescriptor md , Method method );3;1;7
MethodDescriptor.MethodDescriptor( Class cls , String methodName , Class [ ] paramTypes , boolean exact );4;3;16
MethodUtils.clearCache( );1;0;5
MethodUtils.invokeExactMethod( Object object , String methodName , Object [ ] args , Class [ ] parameterTypes );4;3;17
MethodUtils.invokeStaticMethod( Class objectClass , String methodName , Object [ ] args , Class [ ] parameterTypes );4;3;17
MethodUtils.invokeExactStaticMethod( Class objectClass , String methodName , Object arg );1;0;4
MethodUtils.invokeExactMethod( Object object , String methodName , Object [ ] args );3;3;11
MethodUtils.getPrimitiveWrapper( Class primitiveType );9;0;21
MethodUtils.invokeMethod( Object object , String methodName , Object [ ] args , Class [ ] parameterTypes );4;3;17
MethodUtils.getCachedMethod( MethodDescriptor md );3;1;9
MethodUtils.getTotalTransformationCost( Class [ ] srcArgs , Class [ ] destArgs );2;3;10
MethodUtils.invokeExactStaticMethod( Class objectClass , String methodName , Object [ ] args , Class [ ] parameterTypes );4;3;17
MethodDescriptor.equals( Object obj );5;5;12
MethodUtils.setMethodAccessible( Method method );10;10;29
MethodUtils.getAccessibleMethodFromInterfaceNest( Class clazz , String methodName , Class [ ] parameterTypes );8;7;30
MethodUtils.setCacheMethods( boolean cacheMethods );2;1;6
MethodUtils.getAccessibleMethod( Method method );2;1;6
MethodUtils.invokeStaticMethod( Class objectClass , String methodName , Object arg );1;0;4
MethodUtils.invokeExactMethod( Object object , String methodName , Object arg );1;0;4
MethodDescriptor.hashCode( );1;0;3
MethodUtils.invokeMethod( Object object , String methodName , Object arg );1;0;4
MethodUtils.getAccessibleMethod( Class clazz , String methodName , Class [ ] parameterTypes );3;1;15
MethodUtils.getMatchingAccessibleMethod( Class clazz , String methodName , Class [ ] parameterTypes );18;12;75
MethodUtils.getPrimitiveType( Class wrapperType );10;0;25
MethodUtils.getAccessibleMethodFromSuperclass( Class clazz , String methodName , Class [ ] parameterTypes );4;1;14
MethodUtils.getObjectTransformationCost( Class srcClass , Class destClass );6;8;15