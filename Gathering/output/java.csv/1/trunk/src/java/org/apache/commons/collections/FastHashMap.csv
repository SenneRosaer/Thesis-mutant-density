Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
CollectionView.add( Object o );1;0;3
FastHashMap.size( );2;0;9
CollectionView.containsAll( Collection o );2;0;9
CollectionView.size( );2;0;9
CollectionViewIterator.next( );2;1;7
CollectionView.iterator( );1;0;3
EntrySet.iteratorNext( Map . Entry entry );1;0;3
FastHashMap.FastHashMap( Map map );1;0;4
FastHashMap.FastHashMap( int capacity );1;0;4
CollectionView.addAll( Collection c );1;0;3
CollectionViewIterator.CollectionViewIterator( );1;0;4
FastHashMap.hashCode( );4;2;19
FastHashMap.containsValue( Object value );2;0;9
FastHashMap.putAll( Map in );2;0;13
CollectionView.toArray( );2;0;9
FastHashMap.put( Object key , Object value );2;0;14
FastHashMap.isEmpty( );2;0;9
Values.iteratorNext( Map . Entry entry );1;0;3
CollectionView.retainAll( Collection o );2;0;14
FastHashMap.entrySet( );1;0;3
FastHashMap.FastHashMap( );1;0;4
CollectionView.equals( Object o );3;1;12
FastHashMap.FastHashMap( int capacity , float factor );1;0;4
FastHashMap.setFast( boolean fast );1;0;3
CollectionView.contains( Object o );2;0;9
FastHashMap.get( Object key );2;0;9
FastHashMap.clear( );2;0;11
CollectionViewIterator.hasNext( );2;1;6
FastHashMap.keySet( );1;0;3
FastHashMap.remove( Object key );2;0;14
CollectionView.isEmpty( );2;0;9
EntrySet.get( Map map );1;0;3
FastHashMap.containsKey( Object key );2;0;9
CollectionView.CollectionView( );1;0;2
KeySet.iteratorNext( Map . Entry entry );1;0;3
CollectionViewIterator.remove( );4;2;18
FastHashMap.getFast( );1;0;3
CollectionView.remove( Object o );2;0;14
CollectionView.removeAll( Collection o );2;0;14
FastHashMap.values( );1;0;3
CollectionView.toArray( Object [ ] o );2;0;9
FastHashMap.equals( Object o );16;14;51
CollectionView.clear( );2;0;11
Values.get( Map map );1;0;3
CollectionView.hashCode( );2;0;9
KeySet.get( Map map );1;0;3
FastHashMap.clone( );2;0;12