Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
CreatingMocksWithConstructorTest.can_spy_abstract_classes( );1;0;4
CreatingMocksWithConstructorTest.interface_method_stubbed( );2;0;5
SomeConcreteClass.getRealValue( T value );1;0;3
CreatingMocksWithConstructorTest.can_mock_unambigous_constructor_with_inheritance_non_exact_match( );1;0;9
ThrowingConstructorClass.ThrowingConstructorClass( );1;0;3
CreatingMocksWithConstructorTest.can_create_mock_with_constructor( );1;0;7
CreatingMocksWithConstructorTest.abstract_method_stubbed( );1;0;5
SomeAbstractClass.getValue( T value );1;0;3
UsesBase.UsesBase( Base b );1;0;3
CreatingMocksWithConstructorTest.can_spy_abstract_classes_with_casted_null( );1;0;9
AbstractMessage.AbstractMessage( String message );1;0;3
CreatingMocksWithConstructorTest.can_spy_abstract_classes_with_constructor_array_of_nulls( );1;0;9
AbstractMessage.AbstractMessage( int i );1;0;3
CreatingMocksWithConstructorTest.handles_bridge_methods_correctly( );1;0;4
UsesTwoBases.getConstructorUsed( );1;0;3
AmbiguousWithPrimitive.getData( );1;0;3
AmbiguousWithPrimitive.AmbiguousWithPrimitive( String s , int i );1;0;3
CreatingMocksWithConstructorTest.can_mock_unambigous_constructor_with_inheritance_extending_class_exact_match( );1;0;9
CreatingMocksWithConstructorTest.can_spy_abstract_classes_with_null_varargs( );2;0;13
CreatingMocksWithConstructorTest.calls_real_interface_method( );1;0;4
CreatingMocksWithConstructorTest.abstract_method_returns_default( );1;0;4
CreatingMocksWithConstructorTest.can_spy_abstract_classes_with_constructor_primitive_args( );1;0;7
AmbiguousWithPrimitive.AmbiguousWithPrimitive( Object o , int i );1;0;3
CreatingMocksWithConstructorTest.can_mock_unambigous_constructor_with_inheritance_base_class_exact_match( );1;0;9
UsesBase.getConstructorUsed( );1;0;3
UsesTwoBases.UsesTwoBases( ExtendsBase b1 , Base b2 );1;0;3
CreatingMocksWithConstructorTest.can_mock_inner_classes( );1;0;10
AbstractMessage.getMessage( );1;0;3
AbstractMessage.AbstractMessage( );1;0;3
CreatingMocksWithConstructorTest.explains_constructor_exceptions( );2;0;13
UsesTwoBases.UsesTwoBases( Base b1 , Base b2 );1;0;3
CreatingMocksWithConstructorTest.prevents_across_jvm_serialization_with_constructor( );2;0;16
CreatingMocksWithConstructorTest.mocking_interfaces_with_constructor( );1;0;4
CreatingMocksWithConstructorTest.fail_when_multiple_matching_constructors_with_inheritence( );2;0;19
CreatingMocksWithConstructorTest.can_mock_abstract_classes( );1;0;7
CreatingMocksWithConstructorTest.mocking_inner_classes_with_wrong_outer_instance( );2;0;17
UsesBase.UsesBase( ExtendsBase b );1;0;3
CreatingMocksWithConstructorTest.can_mock_unambigous_constructor_with_inheritance_second_extending_class_exact_match( );1;0;9
CreatingMocksWithConstructorTest.can_mock_unambigous_constructor_with_inheritance_first_extending_class_exact_match( );1;0;9
CreatingMocksWithConstructorTest.can_spy_abstract_classes_with_constructor_args( );1;0;7
CreatingMocksWithConstructorTest.can_spy_ambiguius_constructor_with_primitive( );1;0;9
CreatingMocksWithConstructorTest.exception_message_when_constructor_not_found( );2;0;11
AbstractThing.fullName( );1;0;3
HasConstructor.HasConstructor( String x );1;0;1
CreatingMocksWithConstructorTest.can_mock_unambigous_constructor_with_inheritance_multiple_base_class_exact_match( );1;0;9
UsesTwoBases.UsesTwoBases( Base b1 , ExtendsBase b2 );1;0;3