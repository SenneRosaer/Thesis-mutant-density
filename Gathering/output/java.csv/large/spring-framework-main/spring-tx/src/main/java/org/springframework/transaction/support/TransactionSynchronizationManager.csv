Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
TransactionSynchronizationManager.clearSynchronization( );2;1;6
TransactionSynchronizationManager.setCurrentTransactionIsolationLevel( @ Nullable Integer isolationLevel );1;0;3
TransactionSynchronizationManager.doGetResource( Object actualKey );5;2;15
TransactionSynchronizationManager.initSynchronization( );2;0;6
TransactionSynchronizationManager.setCurrentTransactionReadOnly( boolean readOnly );2;0;3
TransactionSynchronizationManager.clear( );1;0;7
TransactionSynchronizationManager.bindResource( Object key , Object value );5;3;17
TransactionSynchronizationManager.getResourceMap( );2;1;4
TransactionSynchronizationManager.isSynchronizationActive( );1;1;3
TransactionSynchronizationManager.getSynchronizations( );3;1;14
TransactionSynchronizationManager.doUnbindResource( Object actualKey );5;2;14
TransactionSynchronizationManager.registerSynchronization( TransactionSynchronization synchronization );2;1;8
TransactionSynchronizationManager.getCurrentTransactionIsolationLevel( );1;0;3
TransactionSynchronizationManager.isActualTransactionActive( );1;1;3
TransactionSynchronizationManager.setActualTransactionActive( boolean active );2;0;3
TransactionSynchronizationManager.unbindResourceIfPossible( Object key );1;0;4
TransactionSynchronizationManager.getCurrentTransactionName( );1;0;3
TransactionSynchronizationManager.isCurrentTransactionReadOnly( );1;1;3
TransactionSynchronizationManager.hasResource( Object key );1;1;5
TransactionSynchronizationManager.setCurrentTransactionName( @ Nullable String name );1;0;3
TransactionSynchronizationManager.unbindResource( Object key );2;1;8
TransactionSynchronizationManager.getResource( Object key );1;0;4