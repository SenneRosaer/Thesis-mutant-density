Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
SpelReproTests.getExpressionSuffix( );1;0;3
SpelReproTests.SPR9486_multiplyFloatWithFloat( );1;1;8
TestPropertyAccessor.getSpecificTargetClasses( );2;0;3
SpelReproTests.SPR12035( );1;1;7
Item.subList( int fromIndex , int toIndex );1;0;3
TestPropertyAccessor.read( EvaluationContext context , Object target , String name );1;0;3
SpelReproTests.SPR10091_primitiveTestValue( );1;0;6
SpelReproTests.testCompiledExpressionForProxy_SPR16191( );2;0;14
BooleanHolder.isPrimitiveProperty( );1;0;3
SpelReproTests.greaterThanWithNulls_SPR7840( );1;0;23
Item.isEmpty( );1;0;3
ReflectionUtil.foo( long ... array );2;1;5
SpelReproTests.SPR10328( );1;0;5
Spr10486.setName( String name );1;0;3
SpelReproTests.SPR9495( );2;1;29
SpelReproTests.SPR11494( );1;0;5
SpelReproTests.SPR10091_simpleTestValue( );1;0;6
SpelReproTests.elvis_SPR7209_1( );1;0;18
SpelReproTests.SPR12808( );1;0;13
SpelReproTests.SPR5899( );1;0;22
ListOf.ListOf( double v );1;0;3
MapAccessor.canRead( EvaluationContext context , Object target , String name );3;0;3
SpelReproTests.SPR10091_simpleTestValueType( );2;0;6
SpelReproTests.SPR12522( );1;0;7
SpelReproTests.SPR9486_floatDivideByDouble( );1;3;8
SpelReproTests.SPR10146_malformedExpressions( );1;0;10
SpelReproTests.SPR9486_addFloatWithDouble( );1;1;8
SpelReproTests.SPR9486_addFloatWithFloat( );1;1;8
SpelReproTests.checkTemplateParsingError( String expression , String expectedMessage );1;0;3
Spr11142.isSomething( );1;0;3
SpelReproTests.doubleArrayCoercion( );1;0;3
SpelReproTests.checkTemplateParsing( String expression , String expectedValue );1;0;3
XX.XX( );1;0;5
ConversionPriority2.getX( int i );1;0;3
ContextObject.getThirdContext( );1;0;3
SpelReproTests.getExpressionPrefix( );1;0;3
BeanClass.BeanClass( ListOf ... list );1;0;3
SpelReproTests.SPR16123( );1;0;6
Spr5899Class.tryToInvokeWithNull2( int i );1;0;3
Inner.run( );1;0;3
BeanClass.getList( );1;0;3
ReflectionUtil.foo( boolean ... array );2;1;5
ReflectionUtil.foo( short ... array );2;1;5
GenericImplementation.setProperty( Integer value );1;0;3
SpelReproTests.SPR9486_subtractFloatWithFloat( );1;1;8
Spr5899Class.tryToInvokeWithNull( Integer value );1;0;3
SpelReproTests.SPR9486_multiplyFloatWithDouble( );1;1;8
FooLists.newArrayList( Object ... elements );1;0;3
SpelReproTests.SPR9486_floatEqDoubleUnaryMinus( );1;3;8
ContextObject.getFirstContext( );1;0;3
SpelReproTests.getMethods( Class < ? > type );2;0;8
SpelReproTests.doubleCoercion( );1;0;3
Spr11445Class.resolve( EvaluationContext context , String beanName );2;0;3
SpelReproTests.NPE_SPR5661( );1;0;3
Item.toArray( T [ ] a );1;0;3
SpelReproTests.nestedProperties_SPR6923( );1;0;6
Item.toArray( );1;0;3
SpelReproTests.checkTemplateParsingError( String expression , ParserContext context , String expectedMessage );2;0;12
SpelReproTests.SPR9486_floatModulusDouble( );1;1;8
SpelReproTests.NPE_SPR5673( );1;0;30
ListOf.getValue( );1;0;3
NamedUser.getName( );1;0;3
DistanceEnforcer.from( Object no );1;0;3
SpelReproTests.SPR9486_floatEqFloat( );1;1;8
SpelReproTests.SPR9486_floatLessThanOrEqualFloat( );1;3;8
ReflectionUtil.bar( int ... array );2;1;5
ConversionPriority1.getX( int i );1;0;3
SpelReproTests.SPR9194( );1;0;10
DistanceEnforcer.from( Number no );1;0;3
SpelReproTests.reservedWords_SPR8228( );1;0;38
SpelReproTests.SPR10125( );1;0;9
TestPropertyAccessor.canWrite( EvaluationContext context , Object target , String name );1;0;3
SpelReproTests.beanResolution( );4;0;36
SpelReproTests.mapOfMap_SPR7244( );1;0;17
SpelReproTests.dollarPrefixedIdentifier_SPR7100( );1;0;31
VarargsReceiver.process( String ... args );1;0;3
SpelReproTests.customStaticFunctions_SPR9038( );3;1;20
SpelReproTests.indexingAsAPropertyAccess_SPR6968_1( );1;0;10
Spr5899Class.Spr5899Class( );1;0;2
SpelReproTests.SPR9486_floatGreaterThanFloat( );1;3;8
Item.getName( );1;0;3
SpelReproTests.isTemplate( );1;0;3
ReflectionUtil.foo( double ... array );2;1;5
TestPropertyAccessor.write( EvaluationContext context , Object target , String name , Object newValue );1;0;3
ReflectionUtil.foo( char ... array );2;1;5
SpelReproTests.SPR10417( );1;0;31
SpelReproTests.dollars2( );1;0;7
SpelReproTests.doTestSpr10146( String expression , String expectedMessage );1;0;5
MapAccessor.canWrite( EvaluationContext context , Object target , String name );1;0;3
Reserver.reservedWords_SPR8228( );1;0;3
ReflectionUtil.foo( byte ... array );2;1;5
DistanceEnforcer.from( Integer no );1;0;3
Item.setName( String name );1;0;3
SpelReproTests.SPR13918( );1;0;7
ResourceSummary.ResourceSummary( );1;0;3
PackagePrivateClassWithGetter.getProperty( );1;0;3
Item.set( int index , Item element );1;0;3
SpelReproTests.dollars( );1;0;7
SpelReproTests.SWF1086( );1;0;3
Spr5899Class.Spr5899Class( Integer i , String ... s );1;0;2
Item.add( Item e );1;0;3
ReflectionUtil.foo( int ... array );2;1;5
TestClass2.hashCode( );1;0;3
GenericImplementation.getProperty( );1;0;3
SpelReproTests.reservedWordProperties_SPR9862( );1;0;7
D.toString( );1;0;3
SpelReproTests.checkTemplateParsing( String expression , ParserContext context , String expectedValue );1;0;5
ConversionPriority2.getX( Number i );1;0;3
MyBeanResolver.resolve( EvaluationContext context , String beanName );5;0;15
SpelReproTests.propertyAccessOnNullTarget_SPR5663( );1;0;10
Item.listIterator( );1;0;3
Item.add( int index , Item element );1;0;3
Item.removeAll( Collection < ? > c );1;0;3
Item.size( );1;0;3
SpelReproTests.SPR13055( );1;0;21
TestPropertyAccessor.TestPropertyAccessor( String mapName );1;0;3
Spr5899Class.toString( );1;0;3
MyTypeLocator.findType( String typeName );3;0;9
Foo2.execute( String str );1;0;3
Goo.getKey( );1;0;3
SpelReproTests.SPR12502( );1;0;6
TestClass2.equals( Object other );3;3;4
SpelReproTests.SPR9486_floatFunctionResolver( );1;1;9
SpelReproTests.SPR9486_floatPowerFloat( );1;1;8
SpelReproTests.SPR9486_floatGreaterThanOrEqualFloat( );1;3;8
SpelReproTests.SPR9486_floatEqFloatUnaryMinus( );1;3;8
Spr10486.getName( );1;0;3
BooleanHolder.setSimpleProperty( Boolean simpleProperty );1;0;3
Spr5899Class.tryToInvokeWithNull3( Integer value , String ... strings );3;1;12
SpelReproTests.SPR9994_bridgeMethods( );1;0;11
SpelReproTests.SPR9486_floatGreaterThanEqualDouble( );1;3;8
SpelReproTests.SPR9486_floatLessThanDouble( );1;3;8
D.D( String s );1;0;3
SpelReproTests.SPR9486_subtractFloatWithDouble( );1;1;8
SpelReproTests.varargsAgainstProxy_SPR16122( );2;0;10
SpelReproTests.SPR5804( );1;0;8
Item.retainAll( Collection < ? > c );1;0;3
SpelReproTests.SPR13055_maps( );1;0;10
SpelReproTests.propertyAccessorOrder_SPR8211( );1;0;12
SpelReproTests.SPR9735( );1;0;15
SpelReproTests.SPR9486_floatEqDouble( );1;1;8
Item.iterator( );1;0;3
Message.getPayload( );1;0;3
SpelReproTests.SPR12803( );1;0;7
SpelReproTests.SPR9486_floatDivideByFloat( );1;3;8
ReflectionUtil.methodToCall( T param );1;1;4
MapAccessor.read( EvaluationContext context , Object target , String name );3;0;3
BooleanHolder.isSimpleProperty( );1;0;3
MapAccessor.write( EvaluationContext context , Object target , String name , Object newValue );1;0;3
SpelReproTests.SPR9486_floatLessThanOrEqualDouble( );1;3;8
BooleanHolder.setPrimitiveProperty( boolean primitiveProperty );1;0;3
Item.lastIndexOf( Object o );1;0;3
Item.get( int index );1;0;3
SpelReproTests.SPR10452( );1;0;20
SPR9486_FunctionsClass.abs( float value );1;0;3
SpelReproTests.projectionTypeDescriptors_1( );3;0;10
Item.remove( Object o );1;0;3
Inner.Inner( );1;0;2
SpelReproTests.SPR10162_onlyBridgeMethod( );1;0;8
ContextObject.getFourthContext( );1;0;3
SpelReproTests.SPR9486_floatLessThanFloat( );1;3;8
ContextObject.getSecondContext( );1;0;3
WideningPrimitiveConversion.getX( long i );1;0;3
SpelReproTests.indexingAsAPropertyAccess_SPR6968_3( );1;0;11
SpelReproTests.indexingAsAPropertyAccess_SPR6968_4( );1;0;11
SpelReproTests.AccessingFactoryBean_spr9511( );1;0;20
SpelReproTests.indexingAsAPropertyAccess_SPR6968_5( );1;0;10
Item.contains( Object o );1;0;3
SpelReproTests.SPR11445_simple( );1;0;5
SpelReproTests.varargsAndPrimitives_SPR8174( );1;0;35
SPR9486_FunctionsClass.abs( int value );1;0;3
Spr11445Class.parameter( );1;0;3
Item.clear( );1;0;3
SpelReproTests.SPR9486_floatModulusFloat( );1;1;8
FooLists.newArrayList( Iterable < T > iterable );1;0;3
Item.indexOf( Object o );1;0;3
Item.remove( int index );1;0;3
Item.listIterator( int index );1;0;3
SpelReproTests.SPR11609( );1;0;7
SpelReproTests.SPR9486_floatPowerDouble( );1;0;8
SpelReproTests.projectionTypeDescriptors_3( );3;0;10
TestClass2.TestClass2( String string );1;0;3
TestPropertyAccessor.getMap( Object target );2;0;9
CCC.method( Object o );1;0;4
Message.setPayload( String payload );1;0;3
SpelReproTests.SPR10486( );1;0;9
SpelReproTests.SPR10091_primitiveTestValueType( );2;0;6
SpelReproTests.SPR9486_floatGreaterThanDouble( );1;3;8
Spr11445Class.echo( int invocation );1;0;3
SpelReproTests.SPR10210( );1;0;6
SpelReproTests.SPR9486_floatNotEqFloat( );1;1;8
SpelReproTests.wideningPrimitiveConversion_SPR8224( );1;0;16
SpelReproTests.conversionPriority_SPR8224( );1;0;34
Item.addAll( int index , Collection < ? extends Item > c );1;0;3
TestProperties.TestProperties( );1;0;6
SpelReproTests.SPR16032( );1;0;7
SpelReproTests.SPR9486_floatNotEqDouble( );1;1;8
SpelReproTests.SPR5847( );1;0;23
SpelReproTests.elvis_SPR7209_2( );1;0;9
Goo.setKey( String s );1;0;3
SpelReproTests.SPR5905_InnerTypeReferences( );1;0;9
ResourceSummary.getResource( );1;0;3
TestPropertyAccessor.canRead( EvaluationContext context , Object target , String name );1;0;3
Item.addAll( Collection < ? extends Item > c );1;0;3
SpelReproTests.indexingAsAPropertyAccess_SPR6968_2( );1;0;11
Spr5899Class.Spr5899Class( Integer i );1;0;2
Reserver.getReserver( );1;0;3
SpelReproTests.SPR10417_maps( );1;0;17
ConversionPriority1.getX( Number i );1;0;3
SpelReproTests.SPR11445_beanReference( );1;0;6
SpelReproTests.array( );1;0;22
ContextObject.ContextObject( );1;0;12
ReflectionUtil.foo( float ... array );2;1;5
SpelReproTests.SPR11142( );1;0;9
C.C( );1;0;9
MapAccessor.getSpecificTargetClasses( );2;0;3
Item.containsAll( Collection < ? > c );1;0;3
SpelReproTests.projectionTypeDescriptors_2( );1;0;10
SpelReproTests.SPR11348( );1;0;14
Resource.getServer( );1;0;3
Inner.run2( );1;0;3