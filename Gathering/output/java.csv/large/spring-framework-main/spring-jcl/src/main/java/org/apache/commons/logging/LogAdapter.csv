Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
LocationResolvingLogRecord.getSourceClassName( );2;1;6
JavaUtilLog.info( Object message , Throwable exception );1;0;3
Slf4jLog.warn( Object message , Throwable exception );3;1;5
Slf4jLog.trace( Object message , Throwable exception );3;1;5
JavaUtilLog.info( Object message );1;0;3
Slf4jLog.fatal( Object message , Throwable exception );1;0;3
JavaUtilLog.debug( Object message , Throwable exception );1;0;3
LocationResolvingLogRecord.writeReplace( );1;0;14
Log4jLog.trace( Object message , Throwable exception );1;0;3
LocationResolvingLogRecord.setSourceClassName( String sourceClassName );1;0;4
JavaUtilAdapter.createLog( String name );1;0;3
Log4jLog.error( Object message );1;0;3
Slf4jLog.isErrorEnabled( );1;0;3
Log4jLog.error( Object message , Throwable exception );1;0;3
LocationResolvingLogRecord.LocationResolvingLogRecord( java . util . logging . Level level , String msg );1;0;3
JavaUtilLog.error( Object message , Throwable exception );1;0;3
Slf4jLog.error( Object message );3;1;5
Slf4jLog.isFatalEnabled( );1;0;3
***not in a method***;0;1;0
Slf4jLocationAwareLog.info( Object message , Throwable exception );3;1;5
Slf4jAdapter.createLocationAwareLog( String name );2;0;5
Log4jLog.log( Level level , Object message , Throwable exception );3;1;13
Slf4jLocationAwareLog.warn( Object message , Throwable exception );3;1;5
JavaUtilLog.readResolve( );1;0;3
LogAdapter.createLog( String name );1;0;3
Log4jLog.Log4jLog( String name );2;1;7
Slf4jLocationAwareLog.error( Object message );3;1;5
JavaUtilLog.fatal( Object message );1;0;3
LocationResolvingLogRecord.setSourceMethodName( String sourceMethodName );1;0;4
Slf4jLog.info( Object message );3;1;5
Log4jLog.debug( Object message );1;0;3
Slf4jLocationAwareLog.trace( Object message , Throwable exception );3;1;5
Slf4jLocationAwareLog.warn( Object message );3;1;5
JavaUtilLog.error( Object message );1;0;3
Slf4jLog.isTraceEnabled( );1;0;3
Log4jLog.isDebugEnabled( );1;0;3
Slf4jLocationAwareLog.fatal( Object message );1;0;3
Slf4jLocationAwareLog.Slf4jLocationAwareLog( LocationAwareLogger logger );1;0;3
Slf4jLog.trace( Object message );3;1;5
Slf4jLocationAwareLog.info( Object message );3;1;5
JavaUtilLog.warn( Object message , Throwable exception );1;0;3
JavaUtilLog.fatal( Object message , Throwable exception );1;0;3
Slf4jLocationAwareLog.debug( Object message , Throwable exception );3;1;5
JavaUtilLog.isTraceEnabled( );1;0;3
Slf4jLog.error( Object message , Throwable exception );3;1;5
Log4jLog.debug( Object message , Throwable exception );1;0;3
LocationResolvingLogRecord.getSourceMethodName( );2;1;6
Slf4jLog.debug( Object message );3;1;5
JavaUtilLog.isFatalEnabled( );1;0;3
JavaUtilLog.isDebugEnabled( );1;0;3
Log4jLog.info( Object message , Throwable exception );1;0;3
JavaUtilLog.isInfoEnabled( );1;0;3
Log4jLog.isTraceEnabled( );1;0;3
JavaUtilLog.JavaUtilLog( String name );1;0;4
Log4jLog.isInfoEnabled( );1;0;3
LocationResolvingLogRecord.resolve( );4;0;19
JavaUtilLog.isErrorEnabled( );1;0;3
Slf4jLocationAwareLog.error( Object message , Throwable exception );3;1;5
Log4jLog.isFatalEnabled( );1;0;3
Log4jLog.info( Object message );1;0;3
Log4jLog.trace( Object message );1;0;3
Log4jLog.warn( Object message , Throwable exception );1;0;3
Log4jLog.isWarnEnabled( );1;0;3
Slf4jLog.warn( Object message );3;1;5
JavaUtilLog.warn( Object message );1;0;3
JavaUtilLog.trace( Object message );1;0;3
Slf4jLog.isDebugEnabled( );1;0;3
Slf4jLog.info( Object message , Throwable exception );3;1;5
JavaUtilLog.debug( Object message );1;0;3
JavaUtilLog.trace( Object message , Throwable exception );1;0;3
Slf4jLog.isInfoEnabled( );1;0;3
Log4jAdapter.createLog( String name );1;0;3
Slf4jAdapter.createLog( String name );1;0;3
Slf4jLocationAwareLog.readResolve( );1;0;3
Slf4jLocationAwareLog.trace( Object message );3;1;5
JavaUtilLog.isWarnEnabled( );1;0;3
Slf4jLocationAwareLog.fatal( Object message , Throwable exception );1;0;3
Log4jLog.warn( Object message );1;0;3
Slf4jLog.fatal( Object message );1;0;3
Slf4jLog.Slf4jLog( T logger );1;0;4
Slf4jLog.readResolve( );1;0;3
Slf4jLog.debug( Object message , Throwable exception );3;1;5
Log4jLog.fatal( Object message );1;0;3
Slf4jLog.isWarnEnabled( );1;0;3
LogAdapter.LogAdapter( );1;0;2
Log4jLog.fatal( Object message , Throwable exception );1;0;3
JavaUtilLog.log( java . util . logging . Level level , Object message , Throwable exception );3;0;16
Slf4jLocationAwareLog.debug( Object message );3;1;5
Log4jLog.isErrorEnabled( );1;0;3
LogAdapter.isPresent( String className );2;0;9