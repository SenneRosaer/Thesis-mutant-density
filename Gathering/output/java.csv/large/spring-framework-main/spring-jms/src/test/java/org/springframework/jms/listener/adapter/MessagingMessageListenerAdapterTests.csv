Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
MessagingMessageListenerAdapterTests.incomingMessageUsesMessageConverter( );1;0;12
MessagingMessageListenerAdapterTests.buildMessageWithStandardMessage( );1;0;18
MessagingMessageListenerAdapterTests.getSimpleInstance( String methodName , Class < ? > ... parameterTypes );1;0;4
MessagingMessageListenerAdapterTests.exceptionInListener( );1;0;10
SampleBean.wrongParam( Integer i );1;0;3
SampleBean.fail( String input );1;0;3
SampleResponse.SampleResponse( String name , String description );1;0;4
SampleBean.simple( Message < String > input );1;0;3
MessagingMessageListenerAdapterTests.replyJackson( );1;0;5
SampleBean.replyJacksonMessageAndJsonView( Message < String > input );1;0;4
MessagingMessageListenerAdapterTests.replyPayloadToQueue( );1;0;15
MessagingMessageListenerAdapterTests.replyUsesMessageConverterForPayload( );1;0;12
SampleBean.replyJackson( Message < String > input );1;0;4
SampleResponse.setCounter( int counter );1;0;3
SampleResponse.getCounter( );1;0;3
MessagingMessageListenerAdapterTests.replyPayloadToTopic( );1;0;15
MessagingMessageListenerAdapterTests.getPayloadInstance( final Object payload , String methodName , Class < ? > ... parameterTypes );1;0;11
MessagingMessageListenerAdapterTests.createInstance( Method m );1;0;5
MessagingMessageListenerAdapterTests.setup( );1;0;3
SampleBean.echo( Message < String > input );1;0;5
SampleBean.createSampleResponse( String name );1;0;3
SampleResponse.setDescription( String description );1;0;3
MessagingMessageListenerAdapterTests.headerConversionLazilyInvoked( );2;0;9
SampleResponse.getDescription( );1;0;3
SampleBean.replyPayloadToQueue( Message < String > input );1;0;3
MessagingMessageListenerAdapterTests.replyPayloadToDestination( );1;0;13
MessagingMessageListenerAdapterTests.exceptionInInvocation( );1;0;8
SampleBean.replyPayloadToDestination( Message < String > input );1;0;3
MessagingMessageListenerAdapterTests.replyPayloadNoDestination( );1;0;16
SampleBean.replyPayloadToTopic( Message < String > input );1;0;3
MessagingMessageListenerAdapterTests.replyJacksonPojoAndJsonView( );1;0;5
MessagingMessageListenerAdapterTests.replyWithCustomTimeToLive( );1;0;19
MessagingMessageListenerAdapterTests.initializeFactory( DefaultMessageHandlerMethodFactory factory );1;0;4
MessagingMessageListenerAdapterTests.replyWithFullQoS( );1;0;17
SampleResponse.setName( String name );1;0;3
MessagingMessageListenerAdapterTests.replyJacksonMessageAndJsonView( );1;0;5
SampleBean.replyJacksonPojoAndJsonView( Message < String > input );1;0;3
MessagingMessageListenerAdapterTests.payloadConversionLazilyInvoked( );2;0;11
SampleResponse.getName( );1;0;3
MessagingMessageListenerAdapterTests.testReplyWithJackson( String methodName , String replyContent );1;0;19
SampleBean.replyPayloadNoDestination( Message < String > input );1;0;3
MessagingMessageListenerAdapterTests.extractMessage( jakarta . jms . Message message );1;0;3