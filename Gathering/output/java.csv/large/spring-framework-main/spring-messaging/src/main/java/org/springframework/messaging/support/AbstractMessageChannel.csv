Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
AbstractMessageChannel.setBeanName( String name );1;0;3
ChannelInterceptorChain.applyPreReceive( MessageChannel channel );3;2;10
ChannelInterceptorChain.applyPostReceive( Message < ? > message , MessageChannel channel );4;1;10
AbstractMessageChannel.setInterceptors( List < ChannelInterceptor > interceptors );1;0;5
ChannelInterceptorChain.applyPreSend( Message < ? > message , MessageChannel channel );6;2;17
AbstractMessageChannel.removeInterceptor( int index );1;0;3
AbstractMessageChannel.addInterceptor( ChannelInterceptor interceptor );1;0;4
AbstractMessageChannel.getLogger( );1;0;3
ChannelInterceptorChain.triggerAfterReceiveCompletion( @ Nullable Message < ? > message , MessageChannel channel , @ Nullable Exception ex );4;2;13
AbstractMessageChannel.getInterceptors( );1;0;3
AbstractMessageChannel.send( Message < ? > message , long timeout );6;1;29
ChannelInterceptorChain.applyPostSend( Message < ? > message , MessageChannel channel , boolean sent );2;0;5
AbstractMessageChannel.addInterceptor( int index , ChannelInterceptor interceptor );1;0;4
AbstractMessageChannel.removeInterceptor( ChannelInterceptor interceptor );1;0;3
AbstractMessageChannel.send( Message < ? > message );1;0;3
***not in a method***;0;2;0
AbstractMessageChannel.getBeanName( );1;0;3
AbstractMessageChannel.setLogger( Log logger );1;0;3
AbstractMessageChannel.AbstractMessageChannel( );1;1;3
AbstractMessageChannel.toString( );1;1;3
ChannelInterceptorChain.triggerAfterSendCompletion( Message < ? > message , MessageChannel channel , boolean sent , @ Nullable Exception ex );3;2;11