Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
IntelliBean.setMyStringss( String string );1;0;2
TypedReadOnlyMap.TypedReadOnlyMap( Map < ? extends String , ? extends TestBean > map );1;0;3
BeanWrapperTests.setterDoesNotCallGetter( );1;0;7
IntelliBean.setName( String name );1;0;2
BeanWrapperTests.incompletelyQuotedKeyLeadsToPropertyException( );1;0;7
BeanWrapperTests.checkNotWritablePropertyHoldPossibleMatches( );1;0;7
BeanWrapperTests.getterSilentlyFailWithOldValueExtraction( );1;0;8
BeanWrapperTests.getAliasedName( );1;0;3
BeanWrapperTests.notWritablePropertyExceptionContainsAlternativeMatches( );2;0;11
ActiveResource.close( );1;0;2
SetterOverload.getObject( );1;0;3
TypedReadOnlyMapClient.setMap( TypedReadOnlyMap map );1;0;2
IntelliBean.setMyStriNg( String string );1;0;2
BeanWrapperTests.notWritablePropertyExceptionContainsAlternativeMatch( );2;0;11
BeanWrapperTests.setAliasedName( String name );1;0;3
TypedReadOnlyMap.TypedReadOnlyMap( );1;0;2
PropertyTypeMismatch.getObject( );2;1;3
IntelliBean.setMyStrings( String string );1;0;2
GetterWithOptional.getObject( );1;0;3
IntelliBean.setMyString( String string );1;0;2
ActiveResource.getResource( );1;0;3
SetterOverload.setObject( Integer length );1;0;3
BeanWrapperTests.createAccessor( Object target );1;0;3
BeanWrapperTests.replaceWrappedInstance( );1;0;12
SetterOverload.setObject( String object );1;0;3
BeanWrapperTests.setReadOnlyMapProperty( );1;0;6
BeanWrapperTests.propertyDescriptors( );1;0;49
GetterBean.setName( String name );1;0;3
BeanWrapperTests.setValidAndInvalidPropertyValuesShouldContainExceptionDetails( );1;0;19
BeanWrapperTests.getPropertyWithOptional( );1;0;19
GetterBean.getName( );2;1;6
BeanWrapperTests.aliasedSetterThroughDefaultMethod( );1;0;7
GetterWithOptional.setObject( TestBean object );1;0;3
PropertyTypeMismatch.setObject( String object );1;0;3
BeanWrapperTests.setterOverload( );1;0;8
BeanWrapperTests.setPropertyTypeMismatch( );1;0;8
BeanWrapperTests.getPropertyWithOptionalAndAutoGrow( );1;0;9