Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
NumberListHolder.getList( );1;0;3
LongListHolder.getList( );1;0;3
BeanUtilsTests.resolveInvalidSignatureStartParen( );1;0;4
BeanUtilsTests.copyPropertiesWithIgnoredNonExistingProperty( );1;0;7
BeanWithPrimitiveTypes.BeanWithPrimitiveTypes( boolean flag , byte byteCount , short shortCount , int intCount , long longCount , float floatCount , double doubleCount , char character , String text );1;0;11
MethodSignatureBean.overloaded( String s );1;0;2
BeanUtilsTests.copyPropertiesHonorsGenericTypeMatchesFromIntegerToWildcard( );1;0;8
Bean.setValue( String aValue );1;0;3
Bean.getValue( );1;0;3
BeanUtilsTests.proxyOrder( Order order );2;0;4
BeanUtilsTests.instantiatePrivateClassWithPrivateConstructor( );1;0;4
BeanUtilsTests.copyPropertiesWithIgnore( );1;6;14
NumberListHolder.setList( List < Number > list );1;0;3
BeanUtilsTests.resolveTypedSignature( );1;0;4
BeanUtilsTests.spr6063( );3;0;10
IntegerListHolder1.getList( );1;0;3
MethodSignatureBean.doSomethingWithAMultiDimensionalArray( String [ ] [ ] strings );1;0;2
NumberHolder.setNumber( Number number );1;0;3
BeanUtilsTests.copyProperties( );1;4;14
MethodSignatureBean.doSomethingElse( String s , int x );1;0;2
BeanUtilsTests.resolveSignatureWithArray( );1;0;6
BeanUtilsTests.getBeanWithPrimitiveTypesConstructor( );1;0;4
Order.getLineItems( );1;0;3
InvalidProperty.getFlag2( );1;0;3
InvalidProperty.setFlag2( Boolean flag2 );1;0;3
BeanUtilsTests.copyPropertiesIgnoresGenericsIfSourceOrTargetHasUnresolvableGenerics( );1;0;15
NameAndSpecialProperty.getName( );1;0;3
BeanWithPrimitiveTypes.getCharacter( );1;0;3
BeanUtilsTests.copyPropertiesWithInvalidProperty( );1;0;11
BeanWithNullableTypes.getValue( );1;0;3
BeanUtilsTests.resolveSimpleSignature( );1;0;5
BeanUtilsTests.instantiateClassWithMoreArgsThanParameters( );1;0;5
NumberUpperBoundedWildcardListHolder.getList( );1;0;3
BeanUtilsTests.copyPropertiesWithDifferentTypes1( );1;4;14
BeanUtilsTests.isNotSimpleProperty( Class < ? > type );1;0;3
BeanUtilsTests.copyPropertiesDoesNotHonorGenericTypeMismatchesFromSubTypeToSuperType( );1;0;8
NumberUpperBoundedWildcardListHolder.setList( List < ? extends Number > list );1;0;3
MethodSignatureBean.overloaded( String s , BeanFactory beanFactory );1;0;2
IntegerListHolder1.setList( List < Integer > list );1;0;3
Order.setId( String id );1;0;3
InvalidProperty.getName( );1;0;3
BeanUtilsTests.resolveWithAndWithoutArgList( );1;0;5
BeanUtilsTests.isSimpleProperty( Class < ? > type );1;0;3
NameAndSpecialProperty.getSpecialProperty( );1;0;3
BeanWithPrimitiveTypes.getFloatCount( );1;0;3
BeanUtilsTests.copyPropertiesFromSubTypeToSuperType( );1;0;8
BeanUtilsTests.instantiateClassGivenClassWithoutDefaultConstructor( );1;0;4
BeanWithPrimitiveTypes.getShortCount( );1;0;3
BeanUtilsTests.copyPropertiesWithEditable( );1;6;14
ContainerBean.getContainedBeans( );1;0;3
BeanUtilsTests.copyPropertiesHonorsGenericTypeMatchesFromIntegerToInteger( );1;0;8
BeanUtilsTests.copyPropertiesDoesNotCopyFromSuperTypeToSubType( );1;0;8
BeanUtilsTests.copyPropertiesHonorsGenericTypeMatchesFromWildcardToWildcard( );2;0;10
NameAndSpecialProperty.setSpecialProperty( int specialProperty );1;0;3
InvalidProperty.setName( String name );1;0;3
NumberHolder.getNumber( );1;0;3
WildcardListHolder1.setList( List < ? > list );1;0;3
BeanUtilsTests.assertSignatureEquals( Method desiredMethod , String signature );1;0;3
BeanWithPrimitiveTypes.getByteCount( );1;0;3
BeanWithNullableTypes.getCounter( );1;0;3
InvalidProperty.setValue( int value );1;0;3
BeanUtilsTests.beanPropertyIsArray( );3;0;9
BeanWithNullableTypes.isFlag( );1;0;3
IntegerListHolder2.setList( List < Integer > list );1;0;3
BeanUtilsTests.resolveInvalidSignatureEndParen( );1;0;4
WildcardListHolder1.getList( );1;0;3
BeanWithPrimitiveTypes.getLongCount( );1;0;3
WildcardListHolder2.setList( List < ? > list );1;0;3
IntegerHolder.getNumber( );1;0;3
BeanUtilsTests.resolveOverloadedSignature( );1;0;8
BeanUtilsTests.copyPropertiesHonorsGenericTypeMatchesForUpperBoundedWildcard( );1;0;8
BeanUtilsTests.isSimpleValueType( Class < ? > type );1;0;3
ContainedBean.setName( String name );1;0;3
BeanUtilsTests.instantiateClassWithOptionalPrimitiveTypes( );1;0;15
IntegerHolder.setNumber( Integer number );1;0;3
BeanWithPrimitiveTypes.getDoubleCount( );1;0;3
BeanWithPrimitiveTypes.getText( );1;0;3
Order.setLineItems( List < String > lineItems );1;0;3
InvalidProperty.getValue( );1;0;3
ContainedBean.getName( );1;0;3
IntegerListHolder2.getList( );1;0;3
BeanUtilsTests.instantiateClassWithFewerArgsThanParameters( );1;0;5
BeanUtilsTests.instantiateClassWithOptionalNullableType( );1;0;8
MethodSignatureBean.doSomething( );1;0;2
Bean.getKey( );1;0;3
NameAndSpecialProperty.setName( String name );1;0;3
BeanUtilsTests.isNotSimpleValueType( Class < ? > type );1;0;3
LongListHolder.setList( List < Long > list );1;0;3
BeanUtilsTests.getPropertyDescriptors( );1;0;6
MethodSignatureBean.doSomethingWithAnArray( String [ ] strings );1;0;2
BeanUtilsTests.copyPropertiesDoesNotHonorGenericTypeMismatches( );1;0;8
BeanUtilsTests.copyPropertiesWithDifferentTypes2( );1;4;14
BeanUtilsTests.instantiateClassGivenInterface( );1;0;4
BeanWithNullableTypes.BeanWithNullableTypes( @ Nullable Integer counter , @ Nullable Boolean flag , String value );1;0;5
BeanUtilsTests.findEditorByConvention( );1;0;3
Order.Order( );1;0;2
BeanWithPrimitiveTypes.getIntCount( );1;0;3
OrderInvocationHandler.OrderInvocationHandler( Order order );1;0;3
Order.toString( );1;0;3
MethodSignatureBean.overloaded( );1;0;2
Bean.setKey( String aKey );1;0;3
InvalidProperty.getFlag1( );1;0;3
OrderInvocationHandler.invoke( Object proxy , Method method , Object [ ] args );2;0;8
Order.Order( String id , List < String > lineItems );1;0;4
PrivateBeanWithPrivateConstructor.PrivateBeanWithPrivateConstructor( );1;0;2
Order.getId( );1;0;3
BeanWithPrimitiveTypes.isFlag( );1;0;3
InvalidProperty.setFlag1( boolean flag1 );1;0;3
ContainerBean.setContainedBeans( ContainedBean [ ] containedBeans );1;0;3
WildcardListHolder2.getList( );1;0;3