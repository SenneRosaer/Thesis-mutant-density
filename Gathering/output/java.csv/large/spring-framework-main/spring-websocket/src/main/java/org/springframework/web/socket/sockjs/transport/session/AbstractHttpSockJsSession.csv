Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
AbstractHttpSockJsSession.AbstractHttpSockJsSession( String id , SockJsServiceConfig config , WebSocketHandler wsHandler , Map < String , Object > attributes );1;0;4
AbstractHttpSockJsSession.handleSuccessiveRequest( ServerHttpRequest request , ServerHttpResponse response , SockJsFrameFormat frameFormat );3;1;23
AbstractHttpSockJsSession.getBinaryMessageSizeLimit( );1;1;3
AbstractHttpSockJsSession.getMessageCache( );1;0;3
AbstractHttpSockJsSession.getRemoteAddress( );1;0;3
AbstractHttpSockJsSession.sendMessageInternal( String message );6;2;20
AbstractHttpSockJsSession.setAcceptedProtocol( @ Nullable String protocol );1;0;3
AbstractHttpSockJsSession.handleInitialRequest( ServerHttpRequest request , ServerHttpResponse response , SockJsFrameFormat frameFormat );4;1;32
AbstractHttpSockJsSession.getLocalAddress( );1;0;3
AbstractHttpSockJsSession.isActive( );2;3;4
AbstractHttpSockJsSession.writeFrameInternal( SockJsFrame frame );5;3;14
AbstractHttpSockJsSession.setTextMessageSizeLimit( int messageSizeLimit );1;0;2
AbstractHttpSockJsSession.getUri( );1;1;5
AbstractHttpSockJsSession.getHandshakeHeaders( );1;1;5
AbstractHttpSockJsSession.setBinaryMessageSizeLimit( int messageSizeLimit );1;0;2
AbstractHttpSockJsSession.getAcceptedProtocol( );1;0;3
AbstractHttpSockJsSession.resetRequest( );5;4;17
AbstractHttpSockJsSession.disconnect( CloseStatus status );1;0;3
AbstractHttpSockJsSession.getPrincipal( );1;0;3
AbstractHttpSockJsSession.disableShallowEtagHeaderFilter( ServerHttpRequest request );2;0;6
AbstractHttpSockJsSession.getExtensions( );1;0;3
AbstractHttpSockJsSession.getTextMessageSizeLimit( );1;1;3