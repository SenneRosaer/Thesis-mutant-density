Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
InjectionCodeGeneratorTests.createGenerator( ClassName target );1;0;3
InjectionCodeGeneratorTests.generateCodeWhenPackagePrivateMethodInAnotherPackageUsesReflection( );1;0;13
InjectionCodeGeneratorTests.generateCodeWhenPrivateFieldInjectsValueUsingReflection( );1;0;13
InjectionCodeGeneratorTests.generateCodeWhenPackagePrivateFieldInTargetPackageInjectsValue( );1;0;13
InjectionCodeGeneratorTests.generateCodeWhenPackagePrivateMethodInTargetPackageInjectsValue( );1;0;13
InjectionCodeGeneratorTests.generateCodeWhenPrivateMethodInjectsValueUsingReflection( );1;0;13
InjectionCodeGeneratorTests.createJavaFile( ClassName generatedClasName , CodeBlock generatedCode , Class < ? > target );1;0;8
InjectionCodeGeneratorTests.generateCodeWhenPrivateFieldAddsHint( );1;0;8
InjectionCodeGeneratorTests.testCompiledResult( ClassName generatedClasName , CodeBlock generatedCode , Class < T > target , BiConsumer < Consumer < T > , Compiled > result );1;0;5
InjectionCodeGeneratorTests.generateCodeWhenPublicFieldInjectsValue( );1;0;13
InjectionCodeGeneratorTests.generateCodeWhenPublicMethodInjectsValue( );1;0;13
InjectionCodeGeneratorTests.generateCodeWhenPackagePrivateFieldInAnotherPackageUsesReflection( );1;0;13
InjectionCodeGeneratorTests.generateCodeWhenPrivateMethodAddsHint( );1;0;8