Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
StringUtils.validateLocalePart( String localePart );7;11;9
StringUtils.hasLength( @ Nullable CharSequence str );2;3;3
StringUtils.substringMatch( CharSequence str , int index , CharSequence substring );4;6;11
StringUtils.delete( String inString , String pattern );1;0;3
StringUtils.startsWithIgnoreCase( @ Nullable String str , @ Nullable String prefix );4;6;4
StringUtils.uncapitalizeAsProperty( String str );5;5;7
StringUtils.splitArrayElementsIntoProperties( String [ ] array , String delimiter , @ Nullable String charsToDelete );5;2;17
StringUtils.collectionToCommaDelimitedString( @ Nullable Collection < ? > coll );1;0;3
StringUtils.collectionToDelimitedString( @ Nullable Collection < ? > coll , String delim );1;0;3
StringUtils.uriDecode( String source , Charset charset );8;16;33
StringUtils.splitArrayElementsIntoProperties( String [ ] array , String delimiter );1;0;3
StringUtils.commaDelimitedListToStringArray( @ Nullable String str );1;0;3
StringUtils.toStringArray( @ Nullable Collection < String > collection );2;1;3
StringUtils.unqualify( String qualifiedName );1;0;3
StringUtils.matchesCharacter( @ Nullable String str , char singleCharacter );3;5;3
StringUtils.tokenizeToStringArray( @ Nullable String str , String delimiters , boolean trimTokens , boolean ignoreEmptyTokens );6;4;17
StringUtils.unqualify( String qualifiedName , char separator );1;1;3
StringUtils.pathEquals( String path1 , String path2 );1;0;3
StringUtils.containsWhitespace( @ Nullable CharSequence str );4;3;12
StringUtils.arrayToCommaDelimitedString( @ Nullable Object [ ] arr );1;0;3
StringUtils.endsWithIgnoreCase( @ Nullable String str , @ Nullable String suffix );4;7;4
StringUtils.capitalize( String str );1;0;3
StringUtils.containsText( CharSequence str );3;3;9
StringUtils.commaDelimitedListToSet( @ Nullable String str );1;0;4
StringUtils.trimTrailingWhitespace( String str );2;1;6
StringUtils.arrayToDelimitedString( @ Nullable Object [ ] arr , String delim );4;1;13
StringUtils.parseLocaleString( String localeString );7;6;31
StringUtils.hasLength( @ Nullable String str );2;3;3
StringUtils.cleanPath( String path );16;22;55
StringUtils.quote( @ Nullable String str );2;1;3
StringUtils.trimTrailingCharacter( String str , char trailingCharacter );4;7;10
StringUtils.concatenateStringArrays( @ Nullable String [ ] array1 , @ Nullable String [ ] array2 );3;1;12
StringUtils.stripFilenameExtension( String path );3;3;11
StringUtils.applyRelativePath( String path , String relativePath );3;5;13
StringUtils.changeFirstCharacterCase( String str , boolean capitalize );4;2;19
StringUtils.isEmpty( @ Nullable Object str );2;2;3
StringUtils.delimitedListToStringArray( @ Nullable String str , @ Nullable String delimiter , @ Nullable String charsToDelete );8;11;26
StringUtils.trimArrayElements( String [ ] array );4;3;11
StringUtils.parseTimeZoneString( String timeZoneString );3;2;7
StringUtils.getFilenameExtension( @ Nullable String path );4;5;14
StringUtils.quoteIfString( @ Nullable Object obj );2;0;3
StringUtils.trimLeadingCharacter( String str , char leadingCharacter );4;5;10
StringUtils.trimWhitespace( String str );2;1;6
StringUtils.containsWhitespace( @ Nullable String str );1;0;3
StringUtils.getFilename( @ Nullable String path );3;4;7
StringUtils.replace( String inString , String oldPattern , @ Nullable String newPattern );7;11;24
StringUtils.sortStringArray( String [ ] array );2;0;7
StringUtils.trimAllWhitespace( CharSequence text );4;4;14
StringUtils.hasText( @ Nullable CharSequence str );3;4;3
StringUtils.tokenizeToStringArray( @ Nullable String str , String delimiters );1;0;3
StringUtils.uncapitalize( String str );1;0;3
StringUtils.delimitedListToStringArray( @ Nullable String str , @ Nullable String delimiter );1;0;3
StringUtils.trimLeadingWhitespace( String str );2;1;6
StringUtils.trimAllWhitespace( String str );2;1;6
StringUtils.hasText( @ Nullable String str );3;4;3
StringUtils.split( @ Nullable String toSplit , @ Nullable String delimiter );4;5;12
StringUtils.parseLocale( String localeValue );4;4;10
StringUtils.countOccurrencesOf( String str , String sub );4;7;13
StringUtils.deleteAny( String inString , @ Nullable String charsToDelete );6;9;17
StringUtils.toStringArray( @ Nullable Enumeration < String > enumeration );2;1;3
StringUtils.removeDuplicateStrings( String [ ] array );2;0;7
StringUtils.addStringToArray( @ Nullable String [ ] array , String str );2;1;9
StringUtils.collectionToDelimitedString( @ Nullable Collection < ? > coll , String delim , String prefix , String suffix );6;6;18