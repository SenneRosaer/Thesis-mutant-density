Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
AbstractStaxHandler.endCDATA( );1;0;3
AbstractStaxHandler.newNamespaceMapping( );1;0;3
AbstractStaxHandler.endPrefixMapping( String prefix );1;0;2
AbstractStaxHandler.startElement( String uri , String localName , String qName , Attributes atts );2;0;9
AbstractStaxHandler.startCDATA( );1;0;3
AbstractStaxHandler.startDTD( String name , @ Nullable String publicId , String systemId );3;1;20
AbstractStaxHandler.characters( char [ ] ch , int start , int length );3;1;14
AbstractStaxHandler.startEntity( String name );1;0;2
AbstractStaxHandler.ignorableWhitespace( char [ ] ch , int start , int length );2;0;9
AbstractStaxHandler.comment( char [ ] ch , int start , int length );2;0;8
AbstractStaxHandler.isNamespaceDeclaration( QName qName );4;4;6
AbstractStaxHandler.removeAllNamespaceMappings( );1;0;3
AbstractStaxHandler.endDTD( );1;0;2
AbstractStaxHandler.processingInstruction( String target , String data );2;0;8
AbstractStaxHandler.startDocument( );2;0;10
AbstractStaxHandler.endEntity( String name );1;0;2
AbstractStaxHandler.endDocument( );2;0;9
AbstractStaxHandler.skippedEntity( String name );2;0;8
AbstractStaxHandler.removeNamespaceMapping( );1;1;3
AbstractStaxHandler.currentNamespaceMapping( );1;1;3
AbstractStaxHandler.endElement( String uri , String localName , String qName );2;0;9
AbstractStaxHandler.startPrefixMapping( String prefix , String uri );1;0;3
AbstractStaxHandler.toQName( String namespaceUri , String qualifiedName );2;3;11