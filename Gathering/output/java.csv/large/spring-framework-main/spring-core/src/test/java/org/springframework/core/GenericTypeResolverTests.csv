Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
GenericTypeResolverTests.testGetTypeVariableMap( );3;0;29
MyTypeWithMethods.object( );1;0;3
MyTypeWithMethods.notParameterizedWithArguments( Integer x , Boolean b );1;0;3
GenericTypeResolverTests.methodReturnTypes( );1;0;6
GenericTypeResolverTests.resolveIncompleteTypeVariables( );2;0;7
MyTypeWithMethods.readIntegerArrayInputMessage( MyInterfaceType < Integer > [ ] message );1;0;2
GenericTypeResolverTests.resolveTransitiveTypeVariableWithDifferentName( );1;0;4
GenericTypeResolverTests.simpleCollectionInterfaceType( );1;0;3
GenericTypeResolverTests.simpleSuperclassType( );1;0;3
GenericTypeResolverTests.boundParameterizedType( );1;0;3
MyTypeWithMethods.createNamedMock( String name , Class < T > toMock );1;0;3
MyTypeWithMethods.notParameterized( );1;0;3
MyTypeWithMethods.string( );1;0;3
GenericTypeResolverTests.getGenericsCannotBeResolved( );2;0;4
MyTypeWithMethods.extractMagicValue( Map < K , V > map );1;0;3
MyTypeWithMethods.raw( );1;0;3
GenericTypeResolverTests.getGenericsOnArrayFromReturnCannotBeResolved( );2;0;5
GenericTypeResolverTests.simpleInterfaceType( );1;0;3
GenericTypeResolverTests.getRawMapTypeCannotBeResolved( );2;0;4
MyTypeWithMethods.createProxy( T object );1;0;3
GenericTypeResolverTests.nullIfNotResolvable( );1;0;4
MyTypeWithMethods.extractValueFrom( MyInterfaceType < T > myInterfaceType );1;0;3
GenericTypeResolverTests.simpleCollectionSuperclassType( );1;0;3
MyTypeWithMethods.createNamedProxy( String name , T object );1;0;3
GenericTypeResolverTests.testResolveType( );1;0;14
MyTypeWithMethods.createMock( Class < MOCK > toMock );1;0;3
MyTypeWithMethods.readIntegerInputMessage( MyInterfaceType < Integer > message );1;0;2
MyTypeWithMethods.integer( );1;0;3
MyTypeWithMethods.createVMock( V name , Class < T > toMock );1;0;3
GenericTypeResolverTests.getGenericsOnArrayFromParamCannotBeResolved( );2;0;6
GenericTypeResolverTests.resolvePartiallySpecializedTypeVariables( );1;0;4
MyTypeWithMethods.readGenericArrayInputMessage( T [ ] message );1;0;2