Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
NumberUtilsTests.assertShortEquals( String aShort );1;0;3
NumberUtilsTests.convertBigDecimalToBigInteger( );1;0;5
NumberUtilsTests.parseNumberAsNegativeHex( );1;0;12
NumberUtilsTests.assertLongEquals( String aLong );1;0;3
NumberUtilsTests.parseNumberRequiringTrimUsingNumberFormat( );1;0;15
NumberUtilsTests.assertNegativeShortEquals( String aShort );1;0;3
NumberUtilsTests.assertNegativeByteEquals( String aByte );1;0;3
NumberUtilsTests.assertNegativeLongEquals( String aLong );1;0;3
NumberUtilsTests.parseBigDecimalNumber3( );1;0;5
NumberUtilsTests.parseLocalizedBigDecimalNumber3( );1;0;6
NumberUtilsTests.parseBigDecimalNumber1( );1;0;5
NumberUtilsTests.parseNumberUsingNumberFormat( );1;0;15
NumberUtilsTests.parseNumberRequiringTrim( );1;0;14
NumberUtilsTests.parseLocalizedBigDecimalNumber1( );1;0;6
NumberUtilsTests.parseOverflow( );1;0;12
NumberUtilsTests.parseNegativeOverflow( );1;0;12
NumberUtilsTests.convertDoubleToBigInteger( );1;0;4
NumberUtilsTests.convertNonExactBigDecimalToBigInteger( );1;0;4
NumberUtilsTests.parseOverflowUsingNumberFormat( );1;0;13
NumberUtilsTests.assertByteEquals( String aByte );1;0;3
NumberUtilsTests.assertToNumberOverflow( Number number , Class < ? extends Number > targetClass );1;0;6
NumberUtilsTests.parseLocalizedBigDecimalNumber2( );1;0;6
NumberUtilsTests.assertNegativeIntegerEquals( String anInteger );1;0;3
NumberUtilsTests.parseNumber( );1;0;14
NumberUtilsTests.parseNegativeOverflowUsingNumberFormat( );1;0;13
NumberUtilsTests.parseNumberAsHex( );1;0;12
NumberUtilsTests.convertToLong( );1;20;40
NumberUtilsTests.convertToInteger( );1;22;42
NumberUtilsTests.parseBigDecimalNumber2( );1;0;5
NumberUtilsTests.assertIntegerEquals( String anInteger );1;0;3