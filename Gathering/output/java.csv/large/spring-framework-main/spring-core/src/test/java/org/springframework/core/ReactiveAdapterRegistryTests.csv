Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
Reactor.fromCompletableFuture( );1;0;7
RxJava3.fromSingle( );1;0;6
ExtendedFlux.subscribe( CoreSubscriber < ? super T > actual );1;0;3
RxJava3.fromCompletable( );1;0;6
RxJava3.toFlowable( );2;0;7
RxJava3.toSingle( );1;0;6
ReactiveAdapterRegistryTests.getAdapterForReactiveSubType( );2;0;12
Reactor.toFlux( );1;0;7
Mutiny.toMulti( );1;0;7
Mutiny.fromUni( );1;0;6
Mutiny.defaultAdapterRegistrations( );1;0;4
RxJava3.toCompletable( );1;0;6
ReactiveAdapterRegistryTests.getAdapter( Class < ? > reactiveType );1;0;5
Mutiny.fromMulti( );1;0;7
RxJava3.fromObservable( );1;0;7
Reactor.defaultAdapterRegistrations( );1;0;6
Kotlin.deferred( );1;0;5
RxJava3.defaultAdapterRegistrations( );1;0;7
RxJava3.toObservable( );2;0;7
Kotlin.defaultAdapterRegistrations( );1;0;3
Reactor.toMono( );1;0;6
Mutiny.toUni( );1;0;6
RxJava3.fromFlowable( );1;0;7
Reactor.toCompletableFuture( );1;0;6