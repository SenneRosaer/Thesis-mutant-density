Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
QualifiedByAttributesTestBean.getMoeSenior( );1;0;3
QualifierAnnotationTests.testQualifiedByAttributesFailsWithoutCustomQualifierRegistered( );1;0;9
QualifierAnnotationTests.testQualifiedByCustomValue( );1;0;10
QualifierAnnotationTests.testNonQualifiedFieldFails( );1;0;9
QualifierAnnotationTests.testQualifiedByBeanName( );2;2;11
QualifiedByValueTestBean.getLarry( );1;0;3
QualifierAnnotationTests.testQualifiedByFieldName( );1;0;10
QualifierAnnotationTests.testInterfaceWithOneQualifiedFactoryAndOneQualifiedBean( );1;0;5
NonQualifiedTestBean.getAnonymous( );1;0;3
QualifierAnnotationTests.testQualifiedByValue( );1;0;10
QualifiedByCustomValueTestBean.getCurly( );1;0;3
QualifierAnnotationTests.testQualifiedByAttributesWithCustomQualifierRegistered( );1;0;13
QualifiedByAttributesTestBean.getMoeJunior( );1;0;3
QualifiedByParameterNameTestBean.getLarry( );1;0;3
QualifierAnnotationTests.testQualifiedByAnnotationValue( );1;0;10
QualifiedByAliasTestBean.getStooge( );1;0;3
QualifiedByFieldNameTestBean.getLarry( );1;0;3
Person.getName( );1;0;3
QualifiedFactoryBean.getObjectType( );1;0;3
Person.setName( String name );1;0;3
QualifiedByBeanNameTestBean.getLarry( );1;0;3
QualifiedByParentValueTestBean.getLarry( );1;0;3
QualifierAnnotationTests.testQualifiedByAnnotation( );1;0;10
QualifierAnnotationTests.testQualifiedByParameterName( );1;0;10
QualifierAnnotationTests.testQualifiedByParentValue( );1;0;22
QualifiedByAnnotationTestBean.getLarry( );1;0;3
QualifiedFactoryBean.getObject( );1;0;3
QualifierAnnotationTests.testQualifiedByAlias( );1;0;10
QualifiedByParameterNameTestBean.setLarryBean( Person larryBean );1;0;3
QualifiedByAnnotationValueTestBean.getLarry( );1;0;3
QualifiedFactoryBean.isSingleton( );1;0;3