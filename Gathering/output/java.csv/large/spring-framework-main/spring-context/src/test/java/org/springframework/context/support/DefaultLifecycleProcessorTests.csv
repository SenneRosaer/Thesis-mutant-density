Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
DummySmartLifecycleFactoryBean.getObjectType( );1;0;3
DummySmartLifecycleFactoryBean.isAutoStartup( );1;0;3
TestSmartLifecycleBean.forShutdownTests( int phase , int shutdownDelay , CopyOnWriteArrayList < Lifecycle > stoppedBeans );1;0;3
DefaultLifecycleProcessorTests.dependentShutdownFirstAndIsSmartLifecycle( );1;2;39
TestSmartLifecycleBean.getPhase( );1;0;3
DefaultLifecycleProcessorTests.singleLifecycleShutdown( );1;0;15
DefaultLifecycleProcessorTests.defaultLifecycleProcessorInstance( );1;0;7
DefaultLifecycleProcessorTests.dependencyStartedFirstButNotSmartLifecycle( );1;0;21
TestLifecycleBean.TestLifecycleBean( CopyOnWriteArrayList < Lifecycle > startedBeans , CopyOnWriteArrayList < Lifecycle > stoppedBeans );1;0;4
DummySmartLifecycleBean.isRunning( );1;0;3
DefaultLifecycleProcessorTests.singleSmartLifecycleAutoStartup( );1;0;14
DummySmartLifecycleBean.isAutoStartup( );1;0;3
DummySmartLifecycleBean.getPhase( );1;0;3
DummySmartLifecycleBean.start( );1;0;3
DummySmartLifecycleFactoryBean.start( );1;0;3
TestLifecycleBean.stop( );2;1;6
DefaultLifecycleProcessorTests.singleSmartLifecycleShutdown( );1;0;13
DummySmartLifecycleFactoryBean.isSingleton( );1;0;3
TestLifecycleBean.start( );2;1;6
DefaultLifecycleProcessorTests.customLifecycleProcessorInstance( );1;0;13
DummySmartLifecycleFactoryBean.getObject( );1;0;3
DefaultLifecycleProcessorTests.singleSmartLifecycleAutoStartupWithLazyInitFactoryBean( );1;0;12
DummySmartLifecycleFactoryBean.stop( );1;0;3
DefaultLifecycleProcessorTests.dependentShutdownFirstEvenIfItsPhaseIsLower( );1;0;41
DefaultLifecycleProcessorTests.singleSmartLifecycleAutoStartupWithNonAutoStartupDependency( );1;0;21
TestSmartLifecycleBean.setAutoStartup( boolean autoStartup );1;0;3
TestLifecycleBean.forStartupTests( CopyOnWriteArrayList < Lifecycle > startedBeans );1;0;3
DefaultLifecycleProcessorTests.getPhase( Lifecycle lifecycle );2;0;4
DummySmartLifecycleFactoryBean.isRunning( );1;0;3
DefaultLifecycleProcessorTests.dependencyStartedFirstEvenIfItsPhaseIsHigher( );1;0;27
TestSmartLifecycleBean.stop( final Runnable callback );2;0;14
DummySmartLifecycleFactoryBean.stop( Runnable callback );1;0;4
DefaultLifecycleProcessorTests.mixedShutdown( );1;2;47
DefaultLifecycleProcessorTests.singleSmartLifecycleWithoutAutoStartup( );1;0;16
DummySmartLifecycleBean.stop( );1;0;3
TestLifecycleBean.isRunning( );1;0;3
DefaultLifecycleProcessorTests.contextRefreshThenStopAndRestartWithMixedBeans( );1;3;40
DefaultLifecycleProcessorTests.contextRefreshThenStartWithMixedBeans( );1;2;33
DefaultLifecycleProcessorTests.singleSmartLifecycleAutoStartupWithLazyInit( );1;0;12
DefaultLifecycleProcessorTests.dependentShutdownFirstButNotSmartLifecycle( );1;0;36
DummySmartLifecycleFactoryBean.getPhase( );1;0;3
DefaultLifecycleProcessorTests.smartLifecycleGroupShutdown( );1;0;28
DummySmartLifecycleBean.stop( Runnable callback );1;0;4
TestSmartLifecycleBean.isAutoStartup( );1;0;3
TestLifecycleBean.forShutdownTests( CopyOnWriteArrayList < Lifecycle > stoppedBeans );1;0;3
TestSmartLifecycleBean.TestSmartLifecycleBean( int phase , int shutdownDelay , CopyOnWriteArrayList < Lifecycle > startedBeans , CopyOnWriteArrayList < Lifecycle > stoppedBeans );1;0;5
DefaultLifecycleProcessorTests.dependencyStartedFirstAndIsSmartLifecycle( );1;2;28
DefaultLifecycleProcessorTests.smartLifecycleGroupStartup( );1;0;33
TestSmartLifecycleBean.forStartupTests( int phase , CopyOnWriteArrayList < Lifecycle > startedBeans );1;0;3