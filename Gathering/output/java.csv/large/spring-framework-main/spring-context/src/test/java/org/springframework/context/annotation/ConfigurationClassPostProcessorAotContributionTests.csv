Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
ImportAwareTests.applyToWhenHasImportAwareConfigurationRegistersBeanPostProcessorWithMapEntry( );1;0;14
PropertySourceTests.applyToWhenHasPropertySourcesInvokesPropertySourceProcessorInOrder( );1;0;17
TestAwareCallbackBean.setImportMetadata( AnnotationMetadata importMetadata );1;0;3
ImportAwareTests.applyToWhenHasImportAwareConfigurationRegistersBeanPostProcessorBeforeRegularBeanPostProcessor( );1;0;20
ConfigurationClassProxyTests.getRegisteredBean( Class < ? > bean );1;0;5
PropertySourceTests.applyToWhenHasPropertySourceInvokePropertySourceProcessor( );1;0;14
TestImportAwareBeanPostProcessor.setImportMetadata( AnnotationMetadata importMetadata );1;0;3
ImportAwareTests.applyToWhenHasImportAwareConfigurationRegistersHints( );1;0;18
TestImportAwareBeanPostProcessor.afterPropertiesSet( );1;0;3
ImportAwareTests.compile( BiConsumer < Consumer < DefaultListableBeanFactory > , Compiled > result );1;0;17
TestImportAwareBeanPostProcessor.postProcessBeforeInitialization( Object bean , String beanName );2;0;6
TestImportAwareBeanPostProcessor.getOrder( );1;0;3
PropertySourceTests.compile( BiConsumer < Consumer < GenericApplicationContext > , Compiled > result );1;0;19
ConfigurationClassProxyTests.processAheadOfTimeFullConfigurationClass( );1;0;4
ConfigurationClassProxyTests.processAheadOfTimeRegularConfigurationClass( );1;0;4
ConfigurationClassPostProcessorAotContributionTests.assertPostProcessorEntry( BeanPostProcessor postProcessor , Class < ? > key , Class < ? > value );1;0;5
TestAwareCallbackBean.setApplicationContext( ApplicationContext applicationContext );1;0;3
PropertySourceTests.applyToWhenHasPropertySourceWithDetailsRetainsThem( );1;0;13
ImportAwareTests.processAheadOfTimeWhenNoImportAwareConfigurationReturnsNull( );1;0;3
ImportAwareTests.applyToWhenHasImportAwareConfigurationRegistersBeanPostProcessorAfterApplicationContextAwareProcessor( );1;0;17
ConfigurationClassPostProcessorAotContributionTests.getContribution( Class < ? > ... types );3;0;9