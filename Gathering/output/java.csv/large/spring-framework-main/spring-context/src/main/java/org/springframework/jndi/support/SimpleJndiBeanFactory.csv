Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
SimpleJndiBeanFactory.doGetType( String name );4;1;15
SimpleJndiBeanFactory.isTypeMatch( String name , ResolvableType typeToMatch );3;2;4
SimpleJndiBeanFactory.getType( String name , boolean allowFactoryBeanInit );3;0;11
SimpleJndiBeanFactory.addShareableResource( String shareableResource );1;0;3
SimpleJndiBeanFactory.getBeanProvider( ResolvableType requiredType );1;0;4
SimpleJndiBeanFactory.getAliases( String name );1;0;3
SimpleJndiBeanFactory.isPrototype( String name );1;1;3
SimpleJndiBeanFactory.getType( String name );1;0;3
SimpleJndiBeanFactory.getBean( String name , Class < T > requiredType );5;0;19
SimpleJndiBeanFactory.getIfUnique( );2;0;8
SimpleJndiBeanFactory.isSingleton( String name );1;0;3
SimpleJndiBeanFactory.getIfAvailable( );3;0;11
SimpleJndiBeanFactory.getBean( String name , @ Nullable Object ... args );2;1;7
SimpleJndiBeanFactory.getBeanProvider( Class < T > requiredType );4;0;35
SimpleJndiBeanFactory.getBean( Class < T > requiredType );1;0;3
SimpleJndiBeanFactory.doGetSingleton( String name , @ Nullable Class < T > requiredType );4;4;14
SimpleJndiBeanFactory.getObject( Object ... args );1;0;3
SimpleJndiBeanFactory.isTypeMatch( String name , @ Nullable Class < ? > typeToMatch );4;4;4
SimpleJndiBeanFactory.containsBean( String name );4;1;12
SimpleJndiBeanFactory.getBean( Class < T > requiredType , @ Nullable Object ... args );2;1;7
SimpleJndiBeanFactory.SimpleJndiBeanFactory( );1;0;3
SimpleJndiBeanFactory.setShareableResources( String ... shareableResources );1;0;3
SimpleJndiBeanFactory.getBean( String name );1;0;3
SimpleJndiBeanFactory.getObject( );1;0;3