Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
HeadersWrapper.header( String headerName );1;0;3
ClientResponseWrapper.releaseBody( );1;0;3
ClientResponseWrapper.bodyToMono( ParameterizedTypeReference < T > elementTypeRef );1;0;3
ClientResponseWrapper.toBodilessEntity( );1;0;3
ClientResponseWrapper.toEntityList( Class < T > elementClass );1;0;3
ClientResponseWrapper.statusCode( );1;0;3
ClientResponseWrapper.bodyToMono( Class < ? extends T > elementClass );1;0;3
ClientResponseWrapper.toEntityList( ParameterizedTypeReference < T > elementTypeRef );1;0;3
ClientResponseWrapper.createException( );1;0;3
HeadersWrapper.contentLength( );1;0;3
ClientResponseWrapper.bodyToFlux( Class < ? extends T > elementClass );1;0;3
ClientResponseWrapper.bodyToFlux( ParameterizedTypeReference < T > elementTypeRef );1;0;3
ClientResponseWrapper.strategies( );1;0;3
ClientResponseWrapper.logPrefix( );1;0;3
ClientResponseWrapper.toEntity( Class < T > bodyType );1;0;3
ClientResponseWrapper.response( );1;0;3
HeadersWrapper.contentType( );1;0;3
ClientResponseWrapper.createError( );1;0;3
ClientResponseWrapper.ClientResponseWrapper( ClientResponse delegate );1;0;4
HeadersWrapper.asHttpHeaders( );1;0;3
ClientResponseWrapper.cookies( );1;0;3
ClientResponseWrapper.toEntity( ParameterizedTypeReference < T > bodyTypeReference );1;0;3
ClientResponseWrapper.body( BodyExtractor < T , ? super ClientHttpResponse > extractor );1;0;3
ClientResponseWrapper.headers( );1;0;3
HeadersWrapper.HeadersWrapper( Headers headers );1;0;3