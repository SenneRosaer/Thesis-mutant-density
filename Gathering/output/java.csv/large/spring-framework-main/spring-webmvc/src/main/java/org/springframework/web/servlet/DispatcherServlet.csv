Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
DispatcherServlet.DispatcherServlet( WebApplicationContext webApplicationContext );1;0;4
DispatcherServlet.getThemeSource( );2;0;4
DispatcherServlet.initStrategies( ApplicationContext context );1;0;11
DispatcherServlet.noHandlerFound( HttpServletRequest request , HttpServletResponse response );3;0;12
DispatcherServlet.initHandlerMappings( ApplicationContext context );8;2;32
DispatcherServlet.render( ModelAndView mv , HttpServletRequest request , HttpServletResponse response );9;5;37
DispatcherServlet.setThrowExceptionIfNoHandlerFound( boolean throwExceptionIfNoHandlerFound );1;0;3
DispatcherServlet.checkMultipart( HttpServletRequest request );8;4;27
DispatcherServlet.onRefresh( ApplicationContext context );1;0;3
DispatcherServlet.setDetectAllHandlerMappings( boolean detectAllHandlerMappings );1;0;3
DispatcherServlet.buildLocaleContext( final HttpServletRequest request );3;1;9
DispatcherServlet.setDetectAllViewResolvers( boolean detectAllViewResolvers );1;0;3
DispatcherServlet.DispatcherServlet( );1;0;4
DispatcherServlet.setDetectAllHandlerAdapters( boolean detectAllHandlerAdapters );1;0;3
DispatcherServlet.initThemeResolver( ApplicationContext context );5;0;18
DispatcherServlet.doDispatch( HttpServletRequest request , HttpServletResponse response );15;6;63
DispatcherServlet.getDefaultStrategies( ApplicationContext context , Class < T > strategyInterface );8;2;38
DispatcherServlet.initFlashMapManager( ApplicationContext context );5;0;18
DispatcherServlet.initHandlerExceptionResolvers( ApplicationContext context );6;2;27
DispatcherServlet.resolveViewName( String viewName , @ Nullable Map < String , Object > model , Locale locale , HttpServletRequest request );4;2;11
DispatcherServlet.processDispatchResult( HttpServletRequest request , HttpServletResponse response , @ Nullable HandlerExecutionChain mappedHandler , @ Nullable ModelAndView mv , @ Nullable Exception exception );10;7;31
DispatcherServlet.hasMultipartException( HttpServletRequest request );3;1;10
DispatcherServlet.setDetectAllHandlerExceptionResolvers( boolean detectAllHandlerExceptionResolvers );1;0;3
DispatcherServlet.applyDefaultViewName( HttpServletRequest request , @ Nullable ModelAndView mv );4;4;8
DispatcherServlet.processHandlerException( HttpServletRequest request , HttpServletResponse response , @ Nullable Object handler , Exception ex );10;5;33
DispatcherServlet.restoreAttributesAfterInclude( HttpServletRequest request , Map < ? , ? > attributesSnapshot );8;3;20
DispatcherServlet.initMultipartResolver( ApplicationContext context );5;0;17
DispatcherServlet.getDefaultViewName( HttpServletRequest request );2;1;3
DispatcherServlet.getHandler( HttpServletRequest request );4;2;11
DispatcherServlet.getRequestUri( HttpServletRequest request );2;1;7
DispatcherServlet.setCleanupAfterInclude( boolean cleanupAfterInclude );1;0;3
DispatcherServlet.initRequestToViewNameTranslator( ApplicationContext context );5;0;19
DispatcherServlet.initHandlerAdapters( ApplicationContext context );6;2;26
DispatcherServlet.logRequest( HttpServletRequest request );10;12;36
DispatcherServlet.getHandlerAdapter( Object handler );4;1;11
DispatcherServlet.triggerAfterCompletion( HttpServletRequest request , HttpServletResponse response , @ Nullable HandlerExecutionChain mappedHandler , Exception ex );2;1;6
DispatcherServlet.doService( HttpServletRequest request , HttpServletResponse response );12;5;44
DispatcherServlet.getMultipartResolver( );1;0;3
DispatcherServlet.initViewResolvers( ApplicationContext context );6;2;26
DispatcherServlet.cleanupMultipart( HttpServletRequest request );3;2;9
DispatcherServlet.getDefaultStrategy( ApplicationContext context , Class < T > strategyInterface );2;1;8
DispatcherServlet.initLocaleResolver( ApplicationContext context );5;0;18
DispatcherServlet.getHandlerMappings( );2;1;3
DispatcherServlet.createDefaultStrategy( ApplicationContext context , Class < ? > clazz );1;0;3