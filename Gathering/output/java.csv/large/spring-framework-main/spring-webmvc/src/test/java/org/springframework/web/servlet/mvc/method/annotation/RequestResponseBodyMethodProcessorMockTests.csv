Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
SimpleBean.getName( );1;0;3
RequestResponseBodyMethodProcessorMockTests.setup( );1;4;21
RequestResponseBodyMethodProcessorMockTests.supportsReturnType( );1;0;4
SimpleBean.SimpleBean( String name );1;0;3
RequestResponseBodyMethodProcessorMockTests.resolveArgumentCannotRead( );1;0;8
RequestResponseBodyMethodProcessorMockTests.supportsParameter( );1;0;4
RequestResponseBodyMethodProcessorMockTests.resolveArgumentValid( );1;0;3
RequestResponseBodyMethodProcessorMockTests.handleReturnValueNotAcceptable( );1;0;9
RequestResponseBodyMethodProcessorMockTests.handle4( @ RequestBody Optional < String > s );1;0;2
RequestResponseBodyMethodProcessorMockTests.handle2( @ Valid @ RequestBody SimpleBean b );1;0;2
RequestResponseBodyMethodProcessorMockTests.handleReturnValueNotAcceptableProduces( );1;0;9
RequestResponseBodyMethodProcessorMockTests.resolveArgumentNotRequiredWithContent( );1;0;8
RequestResponseBodyMethodProcessorMockTests.resolveArgumentNotRequiredNoContent( );1;0;7
RequestResponseBodyMethodProcessorMockTests.resolveArgumentNoContentType( );1;0;6
RequestResponseBodyMethodProcessorMockTests.resolveArgumentOptionalNoContentNoContentType( );1;0;7
RequestResponseBodyMethodProcessorMockTests.testResolveArgumentWithValidation( SimpleBean simpleBean );1;0;12
ValidatingBinderFactory.createBinder( NativeWebRequest webRequest , @ Nullable Object target , String objectName );1;0;7
RequestResponseBodyMethodProcessorMockTests.resolveArgument( );1;0;12
RequestResponseBodyMethodProcessorMockTests.handle5( );1;0;3
RequestResponseBodyMethodProcessorMockTests.handle6( );1;0;3
RequestResponseBodyMethodProcessorMockTests.resolveArgumentOptionalNoContent( );1;0;6
RequestResponseBodyMethodProcessorMockTests.resolveArgumentNotGetRequests( );1;0;7
RequestResponseBodyMethodProcessorMockTests.resolveArgumentNotValid( );1;0;10
RequestResponseBodyMethodProcessorMockTests.resolveArgumentOptionalWithContent( );1;0;8
RequestResponseBodyMethodProcessorMockTests.handleReturnTypeResourceByteRange( );1;0;11
RequestResponseBodyMethodProcessorMockTests.resolveArgumentNotRequiredNoContentNoContentType( );1;0;7
RequestResponseBodyMethodProcessorMockTests.handleReturnValueProduces( );1;0;10
RequestResponseBodyMethodProcessorMockTests.handle1( @ RequestBody String s , int i );1;0;3
RequestResponseBodyMethodProcessorMockTests.handleReturnValue( );1;0;11
RequestResponseBodyMethodProcessorMockTests.handle7( );1;0;3
RequestResponseBodyMethodProcessorMockTests.handleReturnValueMediaTypeSuffix( );1;0;12
RequestResponseBodyMethodProcessorMockTests.resolveArgumentRequiredNoContent( );1;0;9
RequestResponseBodyMethodProcessorMockTests.resolveArgumentInvalidContentType( );1;0;6
RequestResponseBodyMethodProcessorMockTests.handleReturnTypeResourceIllegalByteRange( );1;0;10
RequestResponseBodyMethodProcessorMockTests.handleReturnTypeResource( );1;0;11
RequestResponseBodyMethodProcessorMockTests.handle3( @ RequestBody ( required = false ) String s );1;0;2