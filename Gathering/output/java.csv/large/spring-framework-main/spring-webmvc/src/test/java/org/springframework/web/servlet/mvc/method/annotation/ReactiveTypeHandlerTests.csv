Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
EmitterHandler.onError( Consumer < Throwable > callback );1;0;2
TestController.handleFlux( );1;0;1
TestController.handleFluxString( );1;0;1
ReactiveTypeHandlerTests.deferredResultSubscriberWithOneValue( );1;0;16
ReactiveTypeHandlerTests.handleValue( Object returnValue , Class < ? > asyncType , ResolvableType genericType );1;0;5
TestController.handleMono( );1;0;1
EmitterHandler.getValuesAsText( );1;0;3
ReactiveTypeHandlerTests.writeServerSentEvents( );1;0;12
TestController.handleSingle( );1;0;1
ReactiveTypeHandlerTests.writeServerSentEventsWithBuilder( );2;0;12
ReactiveTypeHandlerTests.writeFluxOfString( );1;0;11
ReactiveTypeHandlerTests.mediaTypes( );1;0;8
EmitterHandler.complete( );1;0;2
ReactiveTypeHandlerTests.writeStreamJson( );1;0;16
ReactiveTypeHandlerTests.supportsType( );1;0;4
ReactiveTypeHandlerTests.testEmitterContentType( String expected );1;0;7
EmitterHandler.getValues( );1;0;3
EmitterHandler.send( Object data , MediaType mediaType );1;0;3
Bar.getValue( );1;0;3
EmitterHandler.onCompletion( Runnable callback );1;0;2
ReactiveTypeHandlerTests.setup( );1;0;8
ReactiveTypeHandlerTests.deferredResultSubscriberWithMultipleValues( );1;0;11
TestController.handleString( );1;0;1
ReactiveTypeHandlerTests.testSseResponse( boolean expectSseEmitter );1;0;6
ReactiveTypeHandlerTests.resetRequest( );1;0;8
ReactiveTypeHandlerTests.testDeferredResultSubscriber( Object returnValue , Class < ? > asyncType , ResolvableType elementType , Runnable produceTask , Object expected );1;0;10
Bar.Bar( String value );1;0;3
EmitterHandler.onTimeout( Runnable callback );1;0;2
TestController.handleFluxSseEventBuilder( );1;0;1
ReactiveTypeHandlerTests.deferredResultSubscriberWithError( );1;0;10
EmitterHandler.completeWithError( Throwable failure );1;0;2
ReactiveTypeHandlerTests.doesNotSupportType( );1;0;3
ReactiveTypeHandlerTests.deferredResultSubscriberWithNoValues( );1;0;6
ReactiveTypeHandlerTests.writeText( );1;0;11