Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
ParameterizedAbstractClassController.initModel( @ RequestHeader ( "header1" ) Date date , Model model );1;0;3
MappedGenericAbstractClassWithConcreteImplementations.handle( C date , Model model );1;0;3
HandlerMethodAnnotationDetectionTests.setUp( Class < ? > controllerType , boolean useAutoProxy );2;0;18
ParameterizedSubclassOverridesDefaultMappings.initBinder( WebDataBinder dataBinder , @ RequestParam ( "datePattern" ) String thePattern );1;0;4
SimpleController.handle( @ RequestHeader ( "header2" ) Date date );1;0;3
ParameterizedAbstractClassController.initBinder( WebDataBinder dataBinder , @ RequestParam ( "datePattern" ) String thePattern );1;0;4
AbstractClassController.initBinder( WebDataBinder dataBinder , @ RequestParam ( "datePattern" ) String pattern );1;0;4
ParameterizedInterfaceController.initModel( @ RequestHeader ( "header1" ) Date date , Model model );1;0;3
ParameterizedSubclassDoesNotOverrideConcreteImplementationsFromGenericAbstractSuperclass.initModel( @ RequestHeader ( "header1" ) Date date , Model model );1;0;3
AbstractClassController.handleException( Exception exception );1;0;3
ParameterizedSubclassOverridesDefaultMappings.handle( @ RequestHeader ( "header2" ) Date date , Model model );1;0;3
SimpleController.initModel( @ RequestHeader ( "header1" ) Date date , Model model );1;0;3
MappingSupportClass.initBinder( WebDataBinder dataBinder , @ RequestParam ( "datePattern" ) String thePattern );1;0;4
HandlerMethodAnnotationDetectionTests.args( Class < ? > controllerType , boolean useAutoProxy );1;0;3
HandlerMethodAnnotationDetectionTests.handlerTypes( );1;0;16
AbstractClassController.handle( @ RequestHeader ( "header2" ) Date date , Model model );1;0;3
ParameterizedInterfaceController.initBinder( WebDataBinder dataBinder , @ RequestParam ( "datePattern" ) String thePattern );1;0;4
InterfaceController.handleException( Exception exception );1;0;3
SimpleController.handleException( Exception exception );1;0;3
ControllerAdvisor.matches( Method method , @ Nullable Class < ? > targetClass );2;3;4
InterfaceController.initBinder( WebDataBinder dataBinder , @ RequestParam ( "datePattern" ) String thePattern );1;0;4
ParameterizedSubclassDoesNotOverrideConcreteImplementationsFromGenericAbstractSuperclass.handleException( Exception exception );1;0;3
MappingSupportClass.handleException( Exception exception );1;0;3
ParameterizedInterfaceController.handle( @ RequestHeader ( "header2" ) Date date , Model model );1;0;3
AbstractClassController.initModel( @ RequestHeader ( "header1" ) Date date , Model model );1;0;3
SimpleController.initBinder( WebDataBinder dataBinder , @ RequestParam ( "datePattern" ) String pattern );1;0;4
ControllerAdvisor.getControllerPointcut( );3;0;9
ParameterizedSubclassOverridesDefaultMappings.initModel( @ RequestHeader ( "header1" ) Date date , Model model );1;0;3
ParameterizedAbstractClassController.handle( @ RequestHeader ( "header2" ) Date date , Model model );1;0;3
ParameterizedInterfaceController.handleException( Exception exception );1;0;3
InterfaceController.handle( @ RequestHeader ( "header2" ) Date date , Model model );1;0;3
ParameterizedSubclassOverridesDefaultMappings.handleException( Exception exception );1;0;3
InterfaceController.initModel( @ RequestHeader ( "header1" ) Date date , Model model );1;0;3
ParameterizedAbstractClassController.handleException( Exception exception );1;0;3
HandlerMethodAnnotationDetectionTests.requestMappingMethod( Class < ? > controllerType , boolean useAutoProxy );1;0;20
MappingSupportClass.handle( @ RequestHeader ( "header2" ) Date date , Model model );1;0;3
ControllerAdvisor.ControllerAdvisor( );1;0;3
MappingSupportClass.initModel( @ RequestHeader ( "header1" ) Date date , Model model );1;0;3
ParameterizedSubclassDoesNotOverrideConcreteImplementationsFromGenericAbstractSuperclass.initBinder( WebDataBinder dataBinder , @ RequestParam ( "datePattern" ) String thePattern );1;0;4