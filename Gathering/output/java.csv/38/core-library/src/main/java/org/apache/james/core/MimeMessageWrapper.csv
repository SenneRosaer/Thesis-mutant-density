Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
MimeMessageWrapper.parse( InputStream is );1;0;4
MimeMessageWrapper.getNonMatchingHeaderLines( String [ ] names );2;1;6
MimeMessageWrapper.getHeader( String name );2;1;6
MimeMessageWrapper.addHeaderLine( String line );1;0;4
MimeMessageWrapper.loadMessage( );4;1;18
MimeMessageWrapper.loadHeaders( );4;2;18
MimeMessageWrapper.MimeMessageWrapper( MimeMessageSource source );1;0;3
MimeMessageWrapper.MimeMessageWrapper( Session session , MimeMessageSource source );1;0;4
MimeMessageWrapper.getLineCount( );6;7;27
MimeMessageWrapper.writeTo( OutputStream os , String [ ] ignoreList );1;0;3
MimeMessageWrapper.getHeader( String name , String delimiter );2;1;6
MimeMessageWrapper.writeTo( OutputStream headerOs , OutputStream bodyOs );1;0;3
MimeMessageWrapper.removeHeader( String name );1;0;4
MimeMessageWrapper.getAllHeaderLines( );2;1;6
MimeMessageWrapper.getContentStream( );2;1;6
MimeMessageWrapper.getAllHeaders( );2;1;6
MimeMessageWrapper.setHeader( String name , String value );1;0;4
MimeMessageWrapper.getSize( );2;1;6
MimeMessageWrapper.getMessageSize( );4;3;11
MimeMessageWrapper.getMatchingHeaderLines( String [ ] names );2;1;6
MimeMessageWrapper.getRawInputStream( );5;5;12
MimeMessageWrapper.getSourceId( );2;1;3
MimeMessageWrapper.writeTo( OutputStream headerOs , OutputStream bodyOs , String [ ] ignoreList );4;3;20
MimeMessageWrapper.getMatchingHeaders( String [ ] names );2;1;6
MimeMessageWrapper.createInternetHeaders( InputStream is );2;1;8
MimeMessageWrapper.MimeMessageWrapper( MimeMessage original );4;2;24
MimeMessageWrapper.addHeader( String name , String value );1;0;4
MimeMessageWrapper.writeTo( OutputStream os );3;3;12
MimeMessageWrapper.dispose( );3;2;8
MimeMessageWrapper.MimeMessageWrapper( Session session );1;0;7
MimeMessageWrapper.checkModifyHeaders( );3;2;11
MimeMessageWrapper.setDataHandler( DataHandler arg0 );1;0;6
MimeMessageWrapper.getNonMatchingHeaders( String [ ] names );2;1;6
MimeMessageWrapper.isModified( );3;2;3