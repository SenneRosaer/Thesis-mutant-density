Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
AntiCollisionHashMap.AntiCollisionHashMap( );1;1;6
KeySet.remove( Object o );1;1;3
AntiCollisionHashMap.clone( );2;0;14
Entry.getValue( );1;0;3
AntiCollisionHashMap.addEntry( int hash , K key , V value , int bucketIndex );2;3;6
Entry.hashCode( );3;3;4
Entry.setValue( V newValue );1;0;5
AntiCollisionHashMap.writeObject( java . io . ObjectOutputStream s );4;2;14
AntiCollisionHashMap.containsNullValue( );4;4;8
EntrySet.size( );1;0;3
Values.clear( );1;0;3
ValueIterator.next( );1;0;3
Values.iterator( );1;0;3
AntiCollisionHashMap.hashString( String key );2;8;6
AntiCollisionHashMap.createEntry( int hash , K key , V value , int bucketIndex );1;1;5
AntiCollisionHashMap.indexFor( int h , int length );1;2;3
AntiCollisionHashMap.putAll( Map < ? extends K , ? extends V > m );12;8;20
AntiCollisionHashMap.AntiCollisionHashMap( Map < ? extends K , ? extends V > m );1;2;5
HashIterator.nextEntry( );6;7;14
Entry.toString( );1;1;3
AntiCollisionHashMap.transfer( Entry [ ] newTable );4;4;17
Entry.Entry( int h , K k , V v , Entry < K , V > n );1;0;6
KeySet.clear( );1;0;3
AntiCollisionHashMap.containsValue( Object value );5;4;10
AntiCollisionHashMap.remove( Object key );2;1;4
EntrySet.iterator( );1;0;3
AntiCollisionHashMap.get( Object key );7;6;15
AntiCollisionHashMap.isEmpty( );1;1;3
HashIterator.HashIterator( );4;5;8
AntiCollisionHashMap.AntiCollisionHashMap( int initialCapacity );1;0;3
AntiCollisionHashMap.removeMapping( Object o );8;8;27
Entry.equals( Object o );7;9;13
KeyIterator.next( );1;0;3
AntiCollisionHashMap.values( );2;1;4
HashIterator.hasNext( );1;1;3
AntiCollisionHashMap.newValueIterator( );1;0;3
Entry.getKey( );1;0;3
EntryIterator.next( );1;0;3
AntiCollisionHashMap.resize( int newCapacity );2;2;12
Values.size( );1;0;3
KeySet.size( );1;0;3
EntrySet.contains( Object o );3;3;7
AntiCollisionHashMap.entrySet0( );2;1;4
AntiCollisionHashMap.putForNullKey( V value );3;3;12
EntrySet.clear( );1;0;3
AntiCollisionHashMap.clear( );2;3;7
AntiCollisionHashMap.putForCreate( K key , V value );8;8;15
AntiCollisionHashMap.newKeyIterator( );1;0;3
HashIterator.remove( );3;2;10
AntiCollisionHashMap.AntiCollisionHashMap( int initialCapacity , float loadFactor );6;7;17
AntiCollisionHashMap.readObject( java . io . ObjectInputStream s );2;2;12
AntiCollisionHashMap.init( );1;0;2
***not in a method***;0;2;0
AntiCollisionHashMap.getEntry( Object key );8;8;12
AntiCollisionHashMap.putAllForCreate( Map < ? extends K , ? extends V > m );7;0;7
AntiCollisionHashMap.removeEntryForKey( Object key );9;11;25
Values.contains( Object o );1;0;3
AntiCollisionHashMap.size( );1;0;3
AntiCollisionHashMap.entrySet( );1;0;3
AntiCollisionHashMap.newEntryIterator( );1;0;3
AntiCollisionHashMap.containsKey( Object key );1;1;3
AntiCollisionHashMap.put( K key , V value );7;7;21
AntiCollisionHashMap.hash( int h );1;9;5
KeySet.contains( Object o );1;0;3
KeySet.iterator( );1;0;3
AntiCollisionHashMap.keySet( );2;1;4
AntiCollisionHashMap.getForNullKey( );3;2;7
EntrySet.remove( Object o );1;1;3