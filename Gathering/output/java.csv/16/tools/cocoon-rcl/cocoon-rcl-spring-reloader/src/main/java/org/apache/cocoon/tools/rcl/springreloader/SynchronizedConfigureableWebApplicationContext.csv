Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
SynchronizedConfigureableWebApplicationContext.getAutowireCapableBeanFactory( );1;0;3
SynchronizedConfigureableWebApplicationContext.getBean( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.getBeanFactory( );1;0;3
SynchronizedConfigureableWebApplicationContext.containsBeanDefinition( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.addBeanFactoryPostProcessor( BeanFactoryPostProcessor arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.getResources( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.start( );1;0;3
SynchronizedConfigureableWebApplicationContext.getClassLoader( );1;0;3
SynchronizedConfigureableWebApplicationContext.getServletContext( );1;0;3
SynchronizedConfigureableWebApplicationContext.getBeansOfType( Class arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.isTypeMatch( String arg0 , Class arg1 );1;0;3
SynchronizedConfigureableWebApplicationContext.stop( );1;0;3
SynchronizedConfigureableWebApplicationContext.close( );1;0;3
SynchronizedConfigureableWebApplicationContext.getBeanDefinitionCount( );1;0;3
SynchronizedConfigureableWebApplicationContext.isActive( );1;0;3
SynchronizedConfigureableWebApplicationContext.setParent( ApplicationContext arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.refresh( );1;0;3
SynchronizedConfigureableWebApplicationContext.getMessage( String arg0 , Object [ ] arg1 , String arg2 , Locale arg3 );1;0;3
SynchronizedConfigureableWebApplicationContext.getMessage( String arg0 , Object [ ] arg1 , Locale arg2 );1;0;3
SynchronizedConfigureableWebApplicationContext.setNamespace( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.setServletConfig( ServletConfig arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.getType( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.getBean( String arg0 , Object [ ] arg1 );1;0;3
SynchronizedConfigureableWebApplicationContext.getAliases( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.addApplicationListener( ApplicationListener arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.getBeanNamesForType( Class arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.getResource( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.getParentBeanFactory( );1;0;3
SynchronizedConfigureableWebApplicationContext.getParent( );1;0;3
SynchronizedConfigureableWebApplicationContext.getServletConfig( );1;0;3
SynchronizedConfigureableWebApplicationContext.isPrototype( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.getBeanNamesForType( Class arg0 , boolean arg1 , boolean arg2 );1;0;3
SynchronizedConfigureableWebApplicationContext.reload( );2;0;14
SynchronizedConfigureableWebApplicationContext.setServletContext( ServletContext arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.containsLocalBean( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.publishEvent( ApplicationEvent arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.containsBean( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.setConfigLocations( String [ ] arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.isSingleton( String arg0 );1;0;3
SynchronizedConfigureableWebApplicationContext.getNamespace( );1;0;3
SynchronizedConfigureableWebApplicationContext.getBean( String arg0 , Class arg1 );1;0;3
SynchronizedConfigureableWebApplicationContext.getStartupDate( );1;0;3
SynchronizedConfigureableWebApplicationContext.getBeanDefinitionNames( );1;0;3
SynchronizedConfigureableWebApplicationContext.setConfigLocation( String configLocation );1;0;3
SynchronizedConfigureableWebApplicationContext.SynchronizedConfigureableWebApplicationContext( );2;0;8
SynchronizedConfigureableWebApplicationContext.getBeansOfType( Class arg0 , boolean arg1 , boolean arg2 );1;0;3
SynchronizedConfigureableWebApplicationContext.getDisplayName( );1;0;3
SynchronizedConfigureableWebApplicationContext.registerShutdownHook( );1;0;3
SynchronizedConfigureableWebApplicationContext.getId( );1;0;3
SynchronizedConfigureableWebApplicationContext.isRunning( );1;0;3
SynchronizedConfigureableWebApplicationContext.getMessage( MessageSourceResolvable arg0 , Locale arg1 );1;0;3
SynchronizedConfigureableWebApplicationContext.getConfigLocations( );1;0;3