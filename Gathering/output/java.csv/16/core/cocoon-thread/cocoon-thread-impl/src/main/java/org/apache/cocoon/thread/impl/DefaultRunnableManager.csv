Method Name;Cyclomatic Complexity;Mutant Density;Source Lines of Code
DefaultRunnableManager.run( );12;6;39
DefaultRunnableManager.execute( final String threadPoolName , final Runnable command );1;0;3
DefaultRunnableManager.destroy( );6;0;22
DefaultRunnableManager.getPool( String name );2;1;8
DefaultRunnableManager.init( );4;2;21
DefaultRunnableManager.remove( Runnable command );3;1;13
DefaultRunnableManager.execute( final Runnable command , final long delay , final long interval );1;0;3
DefaultRunnableManager.createPool( final int queueSize , final int maxPoolSize , final int minPoolSize , final int priority , final boolean isDaemon , final long keepAliveTime , final String blockPolicy , final boolean shutdownGraceful , final int shutdownWaitTime );1;0;17
ExecutionInfo.execute( );6;2;22
ExecutionInfo.compareTo( final Object other );3;4;12
DefaultRunnableManager.createPool( final String name , final int queueSize , final int maxPoolSize , final int minPoolSize , final int priority , final boolean isDaemon , final long keepAliveTime , final String blockPolicy , final boolean shutdownGraceful , final int shutdownWaitTimeMs );2;1;19
DefaultRunnableManager.execute( final Runnable command );1;0;3
DefaultRunnableManager.execute( final Runnable command , final long delay );1;0;3
DefaultRunnableManager.setLogger( Log l );1;0;3
DefaultRunnableManager.stop( );1;0;6
DefaultRunnableManager.getLogger( );1;0;3
DefaultRunnableManager.start( );2;0;7
DefaultRunnableManager.execute( final String threadPoolName , final Runnable command , final long delay , long interval );6;4;21
DefaultRunnableManager.convertPriority( final String priority );4;0;12
ExecutionInfo.ExecutionInfo( final ThreadPool pool , final Runnable command , final long delay , final long interval , final Log logger );1;1;13
DefaultRunnableManager.execute( final String threadPoolName , final Runnable command , final long delay );1;0;3
DefaultRunnableManager.setWorkerThreadPools( Map workerThreadPools );1;0;3